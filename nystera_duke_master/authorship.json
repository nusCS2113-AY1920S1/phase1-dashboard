[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nystera"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nystera"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nystera"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nystera"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nystera"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nystera"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nystera"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nystera"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nystera"
        },
        "content": "application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nystera"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nystera"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nystera"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nystera"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nystera"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nystera"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nystera"
        },
        "content": "test {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nystera"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nystera"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nystera"
        },
        "content": "checkstyle{"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nystera"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nystera"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nystera"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nystera"
        },
        "content": "    archiveBaseName \u003d \"Duke\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nystera"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nystera"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nystera"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nystera"
        },
        "content": "run {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nystera"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nystera"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nystera": 36,
      "-": 5
    }
  },
  {
    "path": "src/main/java/AddDeadLineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nystera"
        },
        "content": "public class AddDeadLineCommand extends Command{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nystera"
        },
        "content": "    private final String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nystera"
        },
        "content": "    public AddDeadLineCommand(String description, String time) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nystera"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nystera"
        },
        "content": "        this.by \u003d time;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nystera"
        },
        "content": "        super.isExit \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nystera"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nystera"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nystera"
        },
        "content": "            Duke.list.addDeadline(description, by);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nystera"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nystera"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nystera": 15
    }
  },
  {
    "path": "src/main/java/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nystera"
        },
        "content": "public class AddEventCommand extends Command{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nystera"
        },
        "content": "    private final String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nystera"
        },
        "content": "    public AddEventCommand(String description, String time) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nystera"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nystera"
        },
        "content": "        this.at \u003d time;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nystera"
        },
        "content": "        super.isExit \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nystera"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nystera"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nystera"
        },
        "content": "        Duke.list.addEvent(description, at);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nystera"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nystera": 16
    }
  },
  {
    "path": "src/main/java/AddToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nystera"
        },
        "content": "public class AddToDoCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nystera"
        },
        "content": "    AddToDoCommand(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nystera"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nystera"
        },
        "content": "        super.isExit \u003d false;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nystera"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nystera"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nystera"
        },
        "content": "        Duke.list.addToDo(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nystera"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nystera": 12
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nystera"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nystera"
        },
        "content": "    public boolean isExit;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nystera"
        },
        "content": "    public String description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nystera"
        },
        "content": "    private boolean isOneWordCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nystera"
        },
        "content": "    public int number;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nystera"
        },
        "content": "    Command (String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nystera"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nystera"
        },
        "content": "    Command(boolean isOneWordCommand) { this.isOneWordCommand \u003d true;}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nystera"
        },
        "content": "    Command(int number) { this.number \u003d number - 1;}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nystera"
        },
        "content": "    public void execute(){ }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nystera"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nystera": 16
    }
  },
  {
    "path": "src/main/java/DateTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nystera"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nystera"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nystera"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nystera"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nystera"
        },
        "content": "public class DateTime {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nystera"
        },
        "content": "    private Date DateAndTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nystera"
        },
        "content": "    public static String wrongTimeFormatError \u003d \"Wrong formatting of date and time!\\n\" +"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nystera"
        },
        "content": "            \"Please use any of the following format instead:\\n\" +"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nystera"
        },
        "content": "            \"DD/MM/YYYY HHMM\\n\" +"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nystera"
        },
        "content": "            \"DD/MM/YYYY hh.mma\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nystera"
        },
        "content": "    public static String wrongTimeFormatError2 \u003d \"Wrong formatting of date and time!\\n\" +"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nystera"
        },
        "content": "            \"Please use the following format instead:\\n\" +"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nystera"
        },
        "content": "            \"DD/MM/YYYY hhmm-hhmm\\n\" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nystera"
        },
        "content": "            \"DD/MM/YYYY h.mma-h.mma\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nystera"
        },
        "content": "    private SimpleDateFormat dateFormat1 \u003d new SimpleDateFormat(\"dd/MMM/yyyy HHmm\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nystera"
        },
        "content": "    private SimpleDateFormat dateFormat2 \u003d new SimpleDateFormat(\"dd/MMM/yyyy h.mma\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nystera"
        },
        "content": "    private SimpleDateFormat dateFormat3 \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nystera"
        },
        "content": "    private SimpleDateFormat dateFormat4 \u003d new SimpleDateFormat(\"dd/MM/yyyy h.mma\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nystera"
        },
        "content": "    private SimpleDateFormat dateFormat5 \u003d new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nystera"
        },
        "content": "    private SimpleDateFormat[] dateFormats \u003d {dateFormat1, dateFormat2, dateFormat3, dateFormat4};"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nystera"
        },
        "content": "    public DateTime(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nystera"
        },
        "content": "        for (SimpleDateFormat formats : dateFormats) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nystera"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nystera"
        },
        "content": "                DateAndTime \u003d formats.parse(userInput);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nystera"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nystera"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nystera"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nystera"
        },
        "content": "        if(DateAndTime \u003d\u003d null){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nystera"
        },
        "content": "            throw new DukeException(wrongTimeFormatError);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nystera"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nystera"
        },
        "content": "    public DateTime(String userInput, int other) throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nystera"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nystera"
        },
        "content": "                DateAndTime \u003d dateFormat5.parse(userInput);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nystera"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nystera"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nystera"
        },
        "content": "        if(DateAndTime \u003d\u003d null){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nystera"
        },
        "content": "            throw new DukeException(wrongTimeFormatError2);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nystera"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nystera"
        },
        "content": "    public String getDateAndTime(){"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nystera"
        },
        "content": "        DateFormat dateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy h.mma\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nystera"
        },
        "content": "        String dateStr \u003d dateFormat.format(DateAndTime);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nystera"
        },
        "content": "        return dateStr;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nystera"
        },
        "content": "    public String getDate(){"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nystera"
        },
        "content": "        DateFormat dateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nystera"
        },
        "content": "        String dateStr \u003d dateFormat.format(DateAndTime);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nystera"
        },
        "content": "        return dateStr;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nystera"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nystera": 64
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nystera"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nystera"
        },
        "content": "    protected DateTime DateAndTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nystera"
        },
        "content": "    public Deadline(String description, DateTime by){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nystera"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nystera"
        },
        "content": "        this.DateAndTime \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nystera"
        },
        "content": "    public Deadline(String description, String by, boolean isDone) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nystera"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nystera"
        },
        "content": "        super.isDone \u003d isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nystera"
        },
        "content": "        this.DateAndTime \u003d new DateTime(by);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nystera"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nystera"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nystera"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + DateAndTime.getDateAndTime()+ \")\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nystera"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nystera": 20
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nystera"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nystera"
        },
        "content": "    DeleteCommand(int number) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nystera"
        },
        "content": "        super(number);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nystera"
        },
        "content": "        super.isExit \u003d false;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nystera"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nystera"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nystera"
        },
        "content": "        Duke.list.deleteTask(number);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nystera"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nystera": 11
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nystera"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nystera"
        },
        "content": "    DoneCommand(int number) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nystera"
        },
        "content": "        super(number);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nystera"
        },
        "content": "        super.isExit \u003d false;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nystera"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nystera"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nystera"
        },
        "content": "        Duke.list.completeTask(number);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nystera"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nystera": 12
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nystera"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nystera"
        },
        "content": "    // This line is to help make the input look neater"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nystera"
        },
        "content": "    public static final String line \u003d \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nystera"
        },
        "content": "    public static TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nystera"
        },
        "content": "    public Duke(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nystera"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nystera"
        },
        "content": "    public void run() throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nystera"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nystera"
        },
        "content": "        //Initializes the data in duke.txt"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nystera"
        },
        "content": "        Storage file \u003d new Storage();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nystera"
        },
        "content": "        file.openFile();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nystera"
        },
        "content": "        file.readData();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nystera"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nystera"
        },
        "content": "        while(!isExit) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nystera"
        },
        "content": "            String input \u003d ui.readInput();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nystera"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nystera"
        },
        "content": "                Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nystera"
        },
        "content": "                c.execute();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nystera"
        },
        "content": "                isExit \u003d c.isExit;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nystera"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nystera"
        },
        "content": "                e.getErrorMsg();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nystera"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nystera"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nystera"
        },
        "content": "        file.updateFile(list);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nystera"
        },
        "content": "        file.closeFile();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nystera"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nystera"
        },
        "content": "            new Duke().run();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nystera"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nystera"
        },
        "content": "            e.getErrorMsg();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nystera"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nystera": 36,
      "-": 5
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nystera"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nystera"
        },
        "content": "    private String errorMsg;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nystera"
        },
        "content": "    private String inputContent;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nystera"
        },
        "content": "    private String inputType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nystera"
        },
        "content": "    private boolean hasDescription \u003d false;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nystera"
        },
        "content": "    private boolean hasTimeSet \u003d false;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nystera"
        },
        "content": "    public DukeException(String s){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nystera"
        },
        "content": "        this.errorMsg \u003d s;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nystera"
        },
        "content": "    public DukeException(String s, String commandType, boolean hasDescription, boolean hasTimeSet){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nystera"
        },
        "content": "        this.inputContent \u003d s;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nystera"
        },
        "content": "        this.inputType \u003d commandType;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nystera"
        },
        "content": "        this.hasDescription \u003d hasDescription;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nystera"
        },
        "content": "        this.hasTimeSet \u003d hasTimeSet;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nystera"
        },
        "content": "    public void getErrorMsg(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nystera"
        },
        "content": "        if(inputType \u003d\u003d null){ // Garbage inputs"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nystera"
        },
        "content": "            System.out.println(Duke.line + errorMsg);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nystera"
        },
        "content": "            System.out.print(Duke.line);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nystera"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nystera"
        },
        "content": "        else if(!hasDescription \u0026\u0026 !hasTimeSet){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nystera"
        },
        "content": "            System.out.println(Duke.line + \"OOPS!!! There is nothing to add in the \" + inputType);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nystera"
        },
        "content": "            System.out.print(Duke.line);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nystera"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nystera"
        },
        "content": "        else if(hasDescription \u0026\u0026 !hasTimeSet){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nystera"
        },
        "content": "            System.out.println(Duke.line + \"OOPS!!! Please set a valid format of the \" + inputType);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nystera"
        },
        "content": "            if(inputType.equals(\"deadline\")){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nystera"
        },
        "content": "                System.out.println(\"Example: \\\"deadline description /by DD/MM/YYYY HHMM\\\"\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nystera"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nystera"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nystera"
        },
        "content": "                System.out.println(\"Example: \\\"event description /at DD/MM/YYYY HHMM\\\"\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nystera"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nystera"
        },
        "content": "            System.out.print(Duke.line);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nystera"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nystera"
        },
        "content": "        else if(!hasDescription \u0026\u0026 hasTimeSet){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nystera"
        },
        "content": "            System.out.println(Duke.line + \"OOPS!!! Please insert the description of the \" + inputType);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nystera"
        },
        "content": "            System.out.print(Duke.line);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nystera"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nystera"
        },
        "content": "        else if(hasDescription \u0026\u0026 hasTimeSet){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nystera"
        },
        "content": "            System.out.println(Duke.line + \"OOPS!!! Description of the \" + inputType + \" is in the wrong format\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nystera"
        },
        "content": "            System.out.print(Duke.line);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nystera"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nystera"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nystera": 47
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nystera"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nystera"
        },
        "content": "    protected String duration;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nystera"
        },
        "content": "    protected DateTime date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nystera"
        },
        "content": "    public Event(String description, DateTime date, String duration){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nystera"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nystera"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nystera"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nystera"
        },
        "content": "    public Event(String description, String date, String duration, boolean isDone) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nystera"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nystera"
        },
        "content": "        super.isDone \u003d isDone;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nystera"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nystera"
        },
        "content": "        this.date \u003d new DateTime(date,0);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nystera"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nystera"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nystera"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + date.getDate() + \" \" + duration + \")\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nystera"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nystera": 24
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nystera"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nystera"
        },
        "content": "    ExitCommand(boolean isOneWordCommand) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nystera"
        },
        "content": "        super(isOneWordCommand);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nystera"
        },
        "content": "        isExit \u003d true;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nystera"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nystera"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nystera"
        },
        "content": "        System.out.println(Duke.line + \"Bye. Hope to see you again soon!\\n\" + Duke.line);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nystera"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nystera": 13
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nystera"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nystera"
        },
        "content": "    FindCommand(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nystera"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nystera"
        },
        "content": "        super.isExit \u003d false;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nystera"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nystera"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nystera"
        },
        "content": "        Duke.list.findTask(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nystera"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nystera": 12
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nystera"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nystera"
        },
        "content": "    ListCommand(boolean isOneWordCommand) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nystera"
        },
        "content": "        super(isOneWordCommand);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nystera"
        },
        "content": "        super.isExit \u003d false;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nystera"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nystera"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nystera"
        },
        "content": "        Duke.list.listTask();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nystera"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nystera": 13
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nystera"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nystera"
        },
        "content": "    private static String[] splitCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nystera"
        },
        "content": "    private static String description, by, at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nystera"
        },
        "content": "    public static Command parse(String command) throws DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nystera"
        },
        "content": "        splitCommand \u003d command.split(\" \");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nystera"
        },
        "content": "        String commandType \u003d splitCommand[0].toLowerCase();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nystera"
        },
        "content": "            switch (commandType) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nystera"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nystera"
        },
        "content": "                    validateDeadline(command);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nystera"
        },
        "content": "                    description \u003d command.substring(9, command.indexOf(\"/by\") - 1);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nystera"
        },
        "content": "                    by \u003d command.substring(command.indexOf(\"/by\") + 4);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nystera"
        },
        "content": "                    return new AddDeadLineCommand(description, by);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nystera"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nystera"
        },
        "content": "                    validateEvent(command);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nystera"
        },
        "content": "                    description \u003d command.substring(6, command.indexOf(\"/at\") - 1);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nystera"
        },
        "content": "                    at \u003d command.substring(command.indexOf(\"/at\") + 4);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nystera"
        },
        "content": "                    return new AddEventCommand(description, at);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nystera"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nystera"
        },
        "content": "                    validateToDo(command);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nystera"
        },
        "content": "                    description \u003d command.substring(5);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nystera"
        },
        "content": "                    return new AddToDoCommand(description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nystera"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nystera"
        },
        "content": "                    validateOneWordCommand(commandType);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nystera"
        },
        "content": "                    return new ListCommand(true);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nystera"
        },
        "content": "                case \"bye\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nystera"
        },
        "content": "                    validateOneWordCommand(commandType);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nystera"
        },
        "content": "                    return new ExitCommand(true);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nystera"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nystera"
        },
        "content": "                    validateTwoWordsCommand(commandType);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nystera"
        },
        "content": "                    return new DoneCommand(Integer.parseInt(splitCommand[1]));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nystera"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nystera"
        },
        "content": "                    validateTwoWordsCommand(commandType);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nystera"
        },
        "content": "                    return new DeleteCommand(Integer.parseInt(splitCommand[1]));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nystera"
        },
        "content": "                case \"find\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nystera"
        },
        "content": "                    validateTwoWordsCommand(commandType);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nystera"
        },
        "content": "                    description \u003d splitCommand[1];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nystera"
        },
        "content": "                    return new FindCommand(description);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nystera"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nystera"
        },
        "content": "                    throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nystera"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nystera"
        },
        "content": "    private static void validateDeadline(String command) throws DukeException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nystera"
        },
        "content": "        if (splitCommand.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nystera"
        },
        "content": "            throw new DukeException(\"description\", splitCommand[0], false, false);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nystera"
        },
        "content": "        } else if (!command.contains(\" /by \")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nystera"
        },
        "content": "            throw new DukeException(\"task\", splitCommand[0], true, false);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nystera"
        },
        "content": "        } else if (splitCommand[1].equals(\"/by\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nystera"
        },
        "content": "            throw new DukeException(\"task\", splitCommand[0], false, true);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nystera"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nystera"
        },
        "content": "    private static void validateEvent(String command) throws DukeException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nystera"
        },
        "content": "        if (splitCommand.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nystera"
        },
        "content": "            throw new DukeException(\"description\", splitCommand[0], false, false);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nystera"
        },
        "content": "        } else if (!command.contains(\" /at \")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nystera"
        },
        "content": "            throw new DukeException(\"task\", splitCommand[0], true, false);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nystera"
        },
        "content": "        } else if (splitCommand[1].equals(\"/at\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nystera"
        },
        "content": "            throw new DukeException(\"task\", splitCommand[0], false, true);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nystera"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nystera"
        },
        "content": "    private static void validateToDo(String command) throws DukeException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nystera"
        },
        "content": "        if (splitCommand.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nystera"
        },
        "content": "            throw new DukeException(\"description\", splitCommand[0], false, false);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nystera"
        },
        "content": "        } else if (command.contains(\"/by\") || command.contains(\"/at\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nystera"
        },
        "content": "            throw new DukeException(\"time\", splitCommand[0], true, true);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nystera"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nystera"
        },
        "content": "    private static void validateOneWordCommand(String commandType) throws DukeException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nystera"
        },
        "content": "        String doWhat \u003d commandType.equals(\"bye\") ? \"exit Duke?\\n\" : \"list out your tasks?\\n\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nystera"
        },
        "content": "        if (splitCommand.length !\u003d 1) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nystera"
        },
        "content": "            throw new DukeException(\"Sorry, were to trying to \" + doWhat + \"Please only type out \\\"\" +"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nystera"
        },
        "content": "                    commandType + \"\\\"\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nystera"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nystera"
        },
        "content": "    private static void validateTwoWordsCommand(String commandType) throws DukeException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nystera"
        },
        "content": "        String word \u003d commandType.equals(\"find\") ? \"\u003ckeyword\u003e\" : \"\u003cnumber\u003e\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nystera"
        },
        "content": "        if (splitCommand.length !\u003d 2) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nystera"
        },
        "content": "            throw new DukeException(\"Please only type out \" + \"\\\"\" + commandType + \" \" + word + \"\\\"\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nystera"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nystera"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nystera"
        },
        "content": "                if (commandType.equals(\"delete\") || commandType.equals(\"done\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nystera"
        },
        "content": "                    int number \u003d Integer.parseInt(splitCommand[1]);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nystera"
        },
        "content": "                    if (number \u003e Duke.list.getSize()) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nystera"
        },
        "content": "                        throw new DukeException(\"Number currently exceeds the number of tasks!\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nystera"
        },
        "content": "                    } else if (number \u003c\u003d 0 ) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nystera"
        },
        "content": "                        throw new DukeException(\"Number cannot be below 1!\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nystera"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nystera"
        },
        "content": "                }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nystera"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nystera"
        },
        "content": "                throw new DukeException(\"Please enter a valid number!\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nystera"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nystera"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nystera"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nystera": 98
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nystera"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nystera"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nystera"
        },
        "content": "import java.lang.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nystera"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nystera"
        },
        "content": "    private static Scanner x;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nystera"
        },
        "content": "    private static Formatter y;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nystera"
        },
        "content": "    private static final String ROOTDIR \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nystera"
        },
        "content": "    private static final String filePath \u003d ROOTDIR + \"\\\\data\\\\duke.txt\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nystera"
        },
        "content": "    private static final String FOLDER \u003d ROOTDIR + \"\\\\data\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nystera"
        },
        "content": "    public void createFile(){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nystera"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nystera"
        },
        "content": "            File makeDirectory \u003d new File(FOLDER);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nystera"
        },
        "content": "            makeDirectory.mkdir();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nystera"
        },
        "content": "            y \u003d new Formatter(filePath);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nystera"
        },
        "content": "        } catch(Exception e){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nystera"
        },
        "content": "            System.out.println(\"error\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nystera"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nystera"
        },
        "content": "    public void openFile(){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nystera"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nystera"
        },
        "content": "            x \u003d new Scanner(new File(filePath));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nystera"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nystera"
        },
        "content": "            this.createFile();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nystera"
        },
        "content": "            this.openFile();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nystera"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nystera"
        },
        "content": "    public void closeFile(){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nystera"
        },
        "content": "        if(y !\u003d null){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nystera"
        },
        "content": "            y.close();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nystera"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nystera"
        },
        "content": "        x.close();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nystera"
        },
        "content": "    // As we are dealing with a smaller sample, we will just recreate a new file every time it closes."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nystera"
        },
        "content": "    public void updateFile(TaskList list){"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nystera"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nystera"
        },
        "content": "            y \u003d new Formatter(filePath);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nystera"
        },
        "content": "            addData(list);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nystera"
        },
        "content": "        } catch (Exception e){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nystera"
        },
        "content": "            System.out.println(\"Error\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nystera"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nystera"
        },
        "content": "    public void addData(TaskList list){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nystera"
        },
        "content": "        String taskType, status, description, time;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nystera"
        },
        "content": "        String taskStr;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nystera"
        },
        "content": "        for(Task task : list.list){"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nystera"
        },
        "content": "            taskStr \u003d task.toString();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nystera"
        },
        "content": "            //System.out.println(taskStr);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nystera"
        },
        "content": "            taskType \u003d task.toString().substring(1,2);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nystera"
        },
        "content": "            //System.out.println(taskType);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nystera"
        },
        "content": "            status \u003d task.isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nystera"
        },
        "content": "            //System.out.println(status);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nystera"
        },
        "content": "            if(taskType.equals(\"T\")){"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nystera"
        },
        "content": "                description \u003d task.toString().substring(7);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nystera"
        },
        "content": "                y.format(\"%s // %s // %s\\n\", taskType, status, description);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nystera"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nystera"
        },
        "content": "            else if(taskType.equals(\"E\")){"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nystera"
        },
        "content": "                String date;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nystera"
        },
        "content": "                description \u003d taskStr.substring(7, taskStr.indexOf(\" (at:\"));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nystera"
        },
        "content": "                time \u003d taskStr.substring(taskStr.indexOf(\"(at:\"));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nystera"
        },
        "content": "                time \u003d time.replace(\"(at: \", \"\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nystera"
        },
        "content": "                time \u003d time.substring(0, time.length() - 1);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nystera"
        },
        "content": "                String[] splitDateAndTime \u003d time.split(\" \");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nystera"
        },
        "content": "                date \u003d splitDateAndTime[0];"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nystera"
        },
        "content": "                time \u003d splitDateAndTime[1];"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nystera"
        },
        "content": "                y.format(\"%s // %s // %s // %s // %s\\n\", taskType, status, description, date, time);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nystera"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nystera"
        },
        "content": "            else if(taskType.equals(\"D\")){"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nystera"
        },
        "content": "                description \u003d taskStr.substring(7, taskStr.indexOf(\" (by:\"));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nystera"
        },
        "content": "                time \u003d taskStr.substring(taskStr.indexOf(\"(by:\"));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nystera"
        },
        "content": "                time \u003d time.replace(\"(by: \", \"\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nystera"
        },
        "content": "                time \u003d time.substring(0, time.length() - 1);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nystera"
        },
        "content": "                y.format(\"%s // %s // %s // %s\\n\", taskType, status, description, time);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nystera"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nystera"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nystera"
        },
        "content": "    public void readData() throws DukeException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nystera"
        },
        "content": "        String taskType, description, time;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nystera"
        },
        "content": "        boolean isDone;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nystera"
        },
        "content": "        while(x.hasNextLine()){"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nystera"
        },
        "content": "            String[] splitLine \u003d x.nextLine().split(\" // \");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nystera"
        },
        "content": "            taskType \u003d splitLine[0];"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nystera"
        },
        "content": "            isDone \u003d splitLine[1].equals(\"1\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nystera"
        },
        "content": "            description \u003d splitLine[2];"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nystera"
        },
        "content": "            if(taskType.equals(\"T\")){"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nystera"
        },
        "content": "                Duke.list.addToDo(description, isDone);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nystera"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nystera"
        },
        "content": "            else{"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nystera"
        },
        "content": "                if(taskType.equals(\"D\")){"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nystera"
        },
        "content": "                    time \u003d splitLine[3];"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nystera"
        },
        "content": "                    Duke.list.addDeadline(description, time, isDone);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nystera"
        },
        "content": "                }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nystera"
        },
        "content": "                else{"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nystera"
        },
        "content": "                    String date \u003d splitLine[3];"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nystera"
        },
        "content": "                    time \u003d splitLine[4];"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nystera"
        },
        "content": "                    Duke.list.addEvent(description, date, time, isDone);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nystera"
        },
        "content": "                }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nystera"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nystera"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nystera"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nystera": 109
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nystera"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nystera"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nystera"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nystera"
        },
        "content": "    public Task(String description){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nystera"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nystera"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nystera"
        },
        "content": "    public String getStatusIcon(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nystera"
        },
        "content": "        return (\"[\" + (isDone ? \"\\u2713\" : \"\\u2718\") + \"]\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nystera"
        },
        "content": "    public void markAsDone(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nystera"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nystera"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nystera"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nystera"
        },
        "content": "        return getStatusIcon() + \" \" + description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nystera"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nystera": 22
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nystera"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nystera"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nystera"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nystera"
        },
        "content": "public class TaskList{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nystera"
        },
        "content": "    public ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nystera"
        },
        "content": "    public TaskList(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nystera"
        },
        "content": "        list \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nystera"
        },
        "content": "    public int getSize(){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nystera"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nystera"
        },
        "content": "    public int getUncompletedTasks(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nystera"
        },
        "content": "        int uncompleted \u003d 0;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nystera"
        },
        "content": "        for(Task task : list){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nystera"
        },
        "content": "            if(!task.isDone){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nystera"
        },
        "content": "                uncompleted++;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nystera"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nystera"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nystera"
        },
        "content": "        return uncompleted;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nystera"
        },
        "content": "    void completeTask(int number){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nystera"
        },
        "content": "        list.get(number).markAsDone();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nystera"
        },
        "content": "        System.out.println(Duke.line + \"Nice! I\u0027ve marked this task as done:\\n\" +"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nystera"
        },
        "content": "                list.get(number).toString().substring(3));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nystera"
        },
        "content": "        System.out.print(\"You now have \" + getUncompletedTasks() + \" remaining tasks.\\n\" + Duke.line);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nystera"
        },
        "content": "    void listTask(){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nystera"
        },
        "content": "        short i \u003d 1;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nystera"
        },
        "content": "        System.out.print(Duke.line);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nystera"
        },
        "content": "        if(list.size() !\u003d 0){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nystera"
        },
        "content": "            System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nystera"
        },
        "content": "            for(Task task : list) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nystera"
        },
        "content": "                System.out.print(i + \".\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nystera"
        },
        "content": "                System.out.println(task.toString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nystera"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nystera"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nystera"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nystera"
        },
        "content": "        else{"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nystera"
        },
        "content": "            System.out.println(\"You have no current tasks! Good job!\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nystera"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nystera"
        },
        "content": "        System.out.println(Duke.line);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nystera"
        },
        "content": "    void addToDo(String description, boolean isDone){"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nystera"
        },
        "content": "        ToDo newToDo \u003d new ToDo(description, isDone);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nystera"
        },
        "content": "        list.add(newToDo);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nystera"
        },
        "content": "    void addToDo(String description){"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nystera"
        },
        "content": "        ToDo newToDo \u003d new ToDo(description);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nystera"
        },
        "content": "        list.add(newToDo);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nystera"
        },
        "content": "        System.out.println(Duke.line + \"Got it. I\u0027ve added this task:\" );"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nystera"
        },
        "content": "        System.out.println(\"  \" + newToDo.toString());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nystera"
        },
        "content": "        System.out.println(showCurrTasks());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nystera"
        },
        "content": "        System.out.println(Duke.line);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nystera"
        },
        "content": "    void addDeadline(String description, String time) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nystera"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nystera"
        },
        "content": "            String[] splitDateTime \u003d time.split(\" \");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nystera"
        },
        "content": "            //Temporary solution to check if there exists a time"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nystera"
        },
        "content": "            splitDateTime[1] \u003d \"0\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nystera"
        },
        "content": "            DateTime newTime \u003d new DateTime(time);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nystera"
        },
        "content": "            Deadline newDeadline \u003d new Deadline(description, newTime);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nystera"
        },
        "content": "            list.add(newDeadline);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nystera"
        },
        "content": "            System.out.println(Duke.line + \"Got it. I\u0027ve added this task:\" );"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nystera"
        },
        "content": "            System.out.println(\"  \" + newDeadline.toString());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nystera"
        },
        "content": "            System.out.println(showCurrTasks());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nystera"
        },
        "content": "            System.out.println(Duke.line);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nystera"
        },
        "content": "        } catch(ArrayIndexOutOfBoundsException k){"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nystera"
        },
        "content": "            DukeException n \u003d new DukeException(\"Please input the time of the deadline!\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nystera"
        },
        "content": "            n.getErrorMsg();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nystera"
        },
        "content": "        } catch (DukeException p) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nystera"
        },
        "content": "            p.getErrorMsg();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nystera"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nystera"
        },
        "content": "    void addDeadline(String description, String by, boolean isDone) throws DukeException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nystera"
        },
        "content": "        Deadline newDeadline \u003d new Deadline(description, by, isDone);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nystera"
        },
        "content": "        list.add(newDeadline);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nystera"
        },
        "content": "    void addEvent(String description, String time) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nystera"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nystera"
        },
        "content": "            String[] splitDateTime \u003d time.split(\" \");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nystera"
        },
        "content": "            DateTime newDate \u003d new DateTime(splitDateTime[0], 0);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nystera"
        },
        "content": "            try{"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nystera"
        },
        "content": "                String duration \u003d splitDateTime[1];"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nystera"
        },
        "content": "                Event newEvent \u003d new Event(description, newDate, duration);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nystera"
        },
        "content": "                list.add(newEvent);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nystera"
        },
        "content": "                System.out.println(Duke.line + \"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nystera"
        },
        "content": "                System.out.println(\"  \" + newEvent.toString());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nystera"
        },
        "content": "                System.out.println(showCurrTasks());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nystera"
        },
        "content": "                System.out.println(Duke.line);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nystera"
        },
        "content": "            } catch(ArrayIndexOutOfBoundsException k){"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nystera"
        },
        "content": "                DukeException n \u003d new DukeException(\"Please input the time duration of the event!\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nystera"
        },
        "content": "                n.getErrorMsg();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nystera"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nystera"
        },
        "content": "        } catch(DukeException m){"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nystera"
        },
        "content": "            m.getErrorMsg();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nystera"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nystera"
        },
        "content": "    void addEvent(String description, String date, String duration, boolean isDone) throws DukeException {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nystera"
        },
        "content": "        Event newEvent \u003d new Event(description, date, duration, isDone);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nystera"
        },
        "content": "        list.add(newEvent);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nystera"
        },
        "content": "    void deleteTask(int number) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nystera"
        },
        "content": "            System.out.print(Duke.line);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nystera"
        },
        "content": "            String oldTask \u003d list.get(number).toString();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nystera"
        },
        "content": "            list.remove(number);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "nystera"
        },
        "content": "            System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "nystera"
        },
        "content": "            System.out.println(\"  \" + oldTask);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "nystera"
        },
        "content": "            System.out.println(\"Now you have \" + list.size() + \" tasks in the list\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "nystera"
        },
        "content": "            System.out.print(Duke.line);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "nystera"
        },
        "content": "    void findTask(String keyword){"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "nystera"
        },
        "content": "            System.out.println(Duke.line + \"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "nystera"
        },
        "content": "            int counter \u003d 1;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "nystera"
        },
        "content": "            for(Task task : list){"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "nystera"
        },
        "content": "                if(isContain(task.toString(), keyword)){"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "nystera"
        },
        "content": "                    System.out.println(\"  \" + counter + \".\" + task.toString());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "nystera"
        },
        "content": "                    counter++;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "nystera"
        },
        "content": "                }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "nystera"
        },
        "content": "            }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "nystera"
        },
        "content": "            if(counter \u003d\u003d 1){"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "nystera"
        },
        "content": "                System.out.println(\"  There are currently no tasks that contains \" + \"\\\"\" + keyword + \"\\\".\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "nystera"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "nystera"
        },
        "content": "            System.out.println(Duke.line);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "nystera"
        },
        "content": "    private String showCurrTasks(){"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "nystera"
        },
        "content": "        return \"Now you have \" + list.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "nystera"
        },
        "content": "    // Function checks if the string is numeric which means user wants to tick their task as done."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "nystera"
        },
        "content": "    public static boolean isNumeric(String strNum){"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "nystera"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "nystera"
        },
        "content": "            double d \u003d Double.parseDouble(strNum);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "nystera"
        },
        "content": "        } catch (NumberFormatException | NullPointerException nfe){"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "nystera"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "nystera"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "nystera"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "nystera"
        },
        "content": "    // Function checks if the tasks contains exactly the word"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "nystera"
        },
        "content": "    private static boolean isContain(String task, String keyword){"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "nystera"
        },
        "content": "        String pattern \u003d \"\\\\b\" + keyword + \"\\\\b\";"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "nystera"
        },
        "content": "        Pattern p \u003d Pattern.compile(pattern);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "nystera"
        },
        "content": "        Matcher m \u003d p.matcher(task);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "nystera"
        },
        "content": "        return m.find();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "nystera"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nystera": 163
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nystera"
        },
        "content": "public class ToDo extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nystera"
        },
        "content": "    public ToDo(String description){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nystera"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nystera"
        },
        "content": "    public ToDo(String description, boolean isDone){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nystera"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nystera"
        },
        "content": "        super.isDone \u003d isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nystera"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nystera"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nystera"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nystera"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nystera": 16
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nystera"
        },
        "content": "import java.util.Scanner; // Imports the Scanner Class"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nystera"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nystera"
        },
        "content": "    private Scanner userInput \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nystera"
        },
        "content": "    private final String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nystera"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nystera"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nystera"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nystera"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nystera"
        },
        "content": "    public final void showLine(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nystera"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nystera"
        },
        "content": "    public final void showWelcome(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nystera"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nystera"
        },
        "content": "        System.out.println(\"Hello! Welcome to \");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nystera"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nystera"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nystera"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nystera"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nystera"
        },
        "content": "    public String readInput(){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nystera"
        },
        "content": "        return userInput.nextLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nystera"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nystera"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nystera": 29
    }
  }
]

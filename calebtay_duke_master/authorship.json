[
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calebtay"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calebtay"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    private taskType type;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    private String info;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    public Command(taskType type, String info){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        this.info \u003d info;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    public Command(taskType type){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        this.info \u003d null;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    public void executes(TaskList tasks, Storage storage, UI ui) throws IOException, DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            case todo:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                TaskList.addTask(info);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            case deadline:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                TaskList.addDeadline(info);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            case event:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                TaskList.addEvent(info);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            case done:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                TaskList.completedTask(Integer.parseInt(info));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            case delete:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                TaskList.deleteTask(Integer.parseInt(info));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            case find:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                TaskList.find(info);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            case list:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                TaskList.listTasks();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            case bye:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                ui.exitText();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                throw new DukeException(\"Unexpected value: \", type);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    public Boolean isExit(){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        return type \u003d\u003d taskType.bye;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "calebtay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calebtay": 51
    }
  },
  {
    "path": "src/main/java/Date.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calebtay"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calebtay"
        },
        "content": "public class Date {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    private int day, month, year;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    private Boolean AM \u003d null;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    public Date(String deadline) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        String[] datetime \u003d deadline.split(\" \", 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        String[] date \u003d datetime[0].split(\"/\", 3);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        day \u003d Integer.parseInt(date[0]);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        month \u003d Integer.parseInt(date[1]);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        year \u003d Integer.parseInt(date[2]);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        int time \u003d Integer.parseInt(datetime[1]);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        if(time \u003e 1200){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            AM \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            time \u003d (time -1200) / 100;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            AM \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            time \u003d time / 100;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    public static Boolean isDate(String deadline) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            String[] datetime \u003d deadline.split(\" \", 2);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            String[] date \u003d datetime[0].split(\"/\", 3);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            int time \u003d Integer.parseInt(datetime[1]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            int day \u003d Integer.parseInt(date[0]);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            int month \u003d Integer.parseInt(date[1]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            int year \u003d Integer.parseInt(date[2]);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        } catch (IllegalArgumentException a){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    public String returnDate(){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        String date \u003d null;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        switch(day){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            case 1:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                date \u003d \"1st\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            case 2:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                date \u003d \"2nd\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            case 3:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                date \u003d \"3rd\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            case 21:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                date \u003d \"21st\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            case 22:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                date \u003d \"22nd\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            case 23:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                date \u003d \"23rd\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            case 31:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                date \u003d \"31st\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                date \u003d day + \"th\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        date \u003d date + \" \" + Month.returnMonth(month) + \" \" + year;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "calebtay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calebtay": 77
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calebtay"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    private String deadline \u003d null;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    private Date date \u003d null;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    public Boolean isDate \u003d false;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    Deadline(String name, String deadline) throws ArrayIndexOutOfBoundsException{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        if(Date.isDate(deadline)){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            isDate \u003d true;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            date \u003d new Date(deadline);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        } else this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    public String checkDeadline(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        return deadline;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    public String returnDate(){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        return date.returnDate();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calebtay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calebtay": 24
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calebtay"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    private UI ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    private static Boolean exit \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    private Duke(String filepath) throws IOException, DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            ui \u003d new UI();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            storage \u003d new Storage(filepath);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        } catch (IOException e){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    private void run() throws DukeException, IllegalArgumentException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        while(!exit) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            try{"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                c.executes(tasks, storage, ui);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                exit \u003d c.isExit();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            } catch (IllegalArgumentException a){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                throw new DukeException(\"unknown_command\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            } catch (DukeException g) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                g.printStackTrace();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    public static void main(String[] args) throws IOException, DukeException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        new Duke(\"T:/CS2113T/duke/src/main/data/datafile.txt\").run();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calebtay": 46,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calebtay"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calebtay"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    DukeException(String error, taskType type){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        if( error.equals(\"empty_description\")){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            System.out.println(\"     ☹ OOPS!!! The description of a \"  + type + \" cannot be empty.\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    DukeException(String error){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        if( error.equals(\"unknown_command\") ){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            System.out.println(\"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calebtay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calebtay": 16
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calebtay"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    private String event \u003d null;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    private Date date \u003d null;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    public Boolean isDate \u003d false;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    Event(String name, String event) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        if(Date.isDate(event)){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            this.event \u003d event;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            isDate \u003d true;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            date \u003d new Date(event);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        } else this.event \u003d event;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    public String checkEvent(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        return event;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    public String returnDate(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        return date.returnDate();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calebtay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calebtay": 23
    }
  },
  {
    "path": "src/main/java/Month.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calebtay"
        },
        "content": "public enum Month {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    January, February, March, April, May, June, July, August, September, October, November, December;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    public static String returnMonth(int index){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        switch (index){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            case 1:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                return \"January\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            case 2:"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                return \"February\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            case 3:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                return \"March\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            case 4:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                return \"April\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            case 5:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                return \"May\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            case 6:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                return \"June\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            case 7:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                return \"July\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            case 8:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                return \"August\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            case 9:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                return \"September\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            case 10:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                return \"October\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            case 11:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                return \"November\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            case 12:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                return \"December\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "calebtay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calebtay": 33
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calebtay"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    public static Command parse(String fullCommand) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            String[] inputString \u003d fullCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            taskType curr \u003d taskType.valueOf(inputString[0]);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            Command c \u003d new Command(curr, inputString[1]);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            return c;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException a){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            Command c \u003d new Command(taskType.valueOf(fullCommand));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            return c;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calebtay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calebtay": 16
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calebtay"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calebtay"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calebtay"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calebtay"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calebtay"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calebtay"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calebtay"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    private static String filepath;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    public Storage(String filepath) throws IOException{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        Storage.filepath \u003d filepath;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    public static void ReadFile() throws IOException, DukeException, ArrayIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        File file \u003d new File(filepath);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        while(sc.hasNextLine()){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            String[] output \u003d sc.nextLine().split(\" \\\\| \");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            if( output[0].equals(\"D\") ){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                Deadline curr \u003d new Deadline(output[2], output[3]);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                if( output[1].equals(\"1\") ) curr.completed \u003d true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                TaskList.addDeadline(curr);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            } else if( output[0].equals(\"E\") ){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                Event curr \u003d new Event(output[2], output[3]);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                if( output[1].equals(\"1\") ) curr.completed \u003d true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                TaskList.addEvent(curr);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                Task curr \u003d new Task(output[2]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                if( output[1].equals(\"1\") ) curr.completed \u003d true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                TaskList.addTask(curr);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    public static void SaveFile() throws IOException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter(filepath);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        PrintWriter printWriter \u003d new PrintWriter(fileWriter);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        for (Object obj : TaskList.Tasks ) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            taskType curType;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            String input \u003d null;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            if( obj instanceof Deadline ){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                input \u003d \"D\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                curType \u003d taskType.deadline;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            } else if( obj instanceof Event ){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                input \u003d \"E\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                curType \u003d taskType.event;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                input \u003d \"T\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                curType \u003d taskType.todo;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            input \u003d input + \" | \";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            Task curTask \u003d (Task) obj;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            if( curTask.completed ){"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                input \u003d input + \"1\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            } else input \u003d input + \"0\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            input \u003d input + \" | \";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            input \u003d input + curTask.name;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            if (curType \u003d\u003d taskType.deadline) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                input \u003d input + \" | \" + ((Deadline) obj).checkDeadline();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            } else if (curType \u003d\u003d taskType.event) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                input \u003d input + \" | \" + ((Event) obj).checkEvent();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            //System.out.println(input);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            printWriter.println(input);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        printWriter.close();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    public Storage load(){"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    public String getFilepath(){"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        return filepath;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "calebtay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calebtay": 82
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calebtay"
        },
        "content": "class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    public String name;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    public Boolean completed;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    private static int no_Tasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    Task(String name){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        this.completed \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        int i \u003d ++no_Tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    public void completed(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        completed \u003d true;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calebtay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calebtay": 16
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calebtay"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calebtay"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calebtay"
        },
        "content": "class TaskList {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    public static ArrayList\u003cObject\u003e Tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    TaskList(Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        Storage.ReadFile();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    TaskList(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    public static ArrayList\u003cObject\u003e getTasks(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        return Tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    public static void addTask(String task) throws IOException, DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        if( isBlank(task) ){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            throw new DukeException(\"empty_description\", taskType.todo);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            UI.AddTask();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            System.out.println(\"  [T][✗] \" + task);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            Task input \u003d new Task(task);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            Tasks.add(input);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            System.out.println(\"Now you have \" + Tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            Storage.SaveFile();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    public static void addDeadline(String task) throws IOException, DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        if( isBlank(task) ){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            throw new DukeException(\"empty_description\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            UI.AddTask();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            System.out.print(\"  [D][✗] \");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            Deadline input \u003d new Deadline(task.split(\" /by \")[0] , task.split(\" /by \")[1] );"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            if( input.isDate ){"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                System.out.println(task.split(\" /by \")[0] + \" (by: \" + input.returnDate() + \")\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                System.out.println(task.split(\" /by \")[0] + \" (by: \" + task.split(\" /by \")[1] + \")\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            Tasks.add(input);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            Storage.SaveFile();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    public static void addEvent(String task) throws IOException, DukeException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        if( isBlank(task) ){"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            throw new DukeException(\"empty_description\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            UI.AddTask();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            System.out.print(\"  [E][✗] \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            Event input \u003d new Event(task.split(\" /at \")[0] , task.split(\" /at \")[1] );"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            if( input.isDate ){"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                System.out.println(task.split(\" /at \")[0] + \" (at: \" + input.returnDate() + \")\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                System.out.println(task.split(\" /at \")[0] + \" (at: \" + task.split(\" /at \")[1] + \")\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            Tasks.add(input);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            System.out.println(\"Now you have \" + Tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            Storage.SaveFile();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    public static void addDeadline(Deadline d){ Tasks.add(d); }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    public static void addEvent(Event e){ Tasks.add(e); }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    public static void addTask(Task t){"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        Tasks.add(t);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    private static void printINFO(Object obj){"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        taskType curType;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        if( obj instanceof Deadline ){"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            System.out.print(\"  [D]\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            curType \u003d taskType.deadline;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        } else if( obj instanceof Event ){"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            System.out.print(\"  [E]\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            curType \u003d taskType.event;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            System.out.print(\"  [T]\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            curType \u003d taskType.todo;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        Task curTask \u003d (Task) obj;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        if( curTask.completed ){"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            System.out.print(\"[✓] \");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        } else System.out.print(\"[✗] \");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        System.out.print(curTask.name);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        if (curType \u003d\u003d taskType.deadline) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            if(((Deadline) obj).isDate){"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                System.out.println(\" (by: \" + ((Deadline) obj).returnDate() + \")\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                System.out.println(\" (by: \" + ((Deadline) obj).checkDeadline() + \")\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        } else if (curType \u003d\u003d taskType.event) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            if(((Event) obj).isDate){"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                System.out.println(\" (at: \" + ((Event) obj).returnDate() + \")\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                System.out.println(\" (at: \" + ((Event) obj).checkEvent() + \")\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            System.out.println(\"\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    static void listTasks(){"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        for (Object obj : Tasks) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            System.out.print(count + \".\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            printINFO(obj);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            ++count;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    static void completedTask(int index) throws IOException {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        System.out.print(\"  [✓] \");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        Task curTask \u003d (Task) Tasks.get(index-1);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        System.out.println( curTask.name );"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        curTask.completed();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        Storage.SaveFile();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    static void deleteTask(int index) throws IOException {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        Object obj \u003d Tasks.get(index-1);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        printINFO(obj);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        Tasks.remove(obj);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        Storage.SaveFile();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        System.out.println(\"Now you have \" + Tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    static void find(String word){"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        for (Object obj : Tasks) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            Task currTask \u003d (Task) obj;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            if( currTask.name.contains(word) ){"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                System.out.print(count + \".\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                printINFO(obj);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                ++count;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    private static Boolean isBlank(String s){"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        if (s \u003d\u003d null) return true;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        for (int i \u003d 0; i \u003c s.length(); i++) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            if (!Character.isWhitespace(s.charAt(i))) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "calebtay"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "calebtay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calebtay": 172
    }
  },
  {
    "path": "src/main/java/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calebtay"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calebtay"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    String logo \u003d  \" ____        _        \\n\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calebtay"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    public void showWelcome(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    public void showLine(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    public String readCommand(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        Scanner S \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        return S.nextLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    public String showLoadingError(){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        return \"gg\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    public void exitText(){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "calebtay"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    public static void AddTask(){ System.out.println(\"Got it. I\u0027ve added this task:\"); }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    public static void printNoTasks(){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "calebtay"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "calebtay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calebtay": 40
    }
  },
  {
    "path": "src/main/java/taskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calebtay"
        },
        "content": "public enum taskType {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calebtay"
        },
        "content": "    todo, list, deadline, event, done, delete, find, bye"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calebtay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calebtay": 3
    }
  }
]

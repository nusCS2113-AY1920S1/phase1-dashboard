[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    protected String by, temp;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    protected Date dateInput;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        super.tag \u003d \u0027D\u0027;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        //rewrite by string into DDth of MM YYYY, HHmm(am/pm)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        temp \u003d by;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        if(by.isEmpty()){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            DukeException.emptyDateErr();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        else if(temp.matches(\" ([0-9]{1,2})/([0-9]{1,2})/([0-9]{4}) ([0-9]{4})\")){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            SimpleDateFormat parser \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd MMM yyy, h:mma\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                dateInput \u003d parser.parse(temp);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            by \u003d \" \" + formatter.format(dateInput);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        else if(temp.matches(\" ([0-9]{1,2})/([0-9]{1,2})/([0-9]{4})\")){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            SimpleDateFormat parser \u003d new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd MMM yyy\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                dateInput \u003d parser.parse(temp);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            by \u003d \" \" + formatter.format(dateInput);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        super.description \u003d super.description + \"(by:\" + by + \")\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return  \"[\" + super.tag + \"]\" + \"[\" + super.getStatusIcon() + \"] \"+ super.description;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "A0171206R": 48
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import java.lang.String;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "class Duke{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\\n\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "   /* @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void start(Stage stage) throws Exception {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Label helloWorld \u003d new Label(\"Hello World!\"); // Creating a new Label control"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Scene scene \u003d new Scene(helloWorld); // Setting the scene to be our Label"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        stage.setScene(scene); // Setting the stage to show our screen"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        stage.show(); // Render the stage."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    static void printPartition() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void functionBye() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        printPartition();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        printPartition();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void debug(String[] temp) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        for (int i \u003d 0; i \u003c temp.length; i++) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            System.out.println(temp[i]);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    static void printTaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        printPartition();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            System.out.println(i + 1 + \".[\" + taskList.get(i).getTag() + \"]\" + \"[\" + taskList.get(i).getStatusIcon() + \"] \" + taskList.get(i).description);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        printPartition();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public static void main(String[] args) throws DukeException, ArrayIndexOutOfBoundsException, IOException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Duke d \u003d new Duke();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        BufferedReader reader \u003d null;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        FileReader fr \u003d null;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        File file \u003d null;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Scanner s \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        String filepath \u003d \"C:\\\\duke.txt\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            file \u003d new File(filepath);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            fr \u003d new FileReader(file);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            DukeException.fileNotFoundErr();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            //throw new DukeException(\"File that is trying to be read does not exist! \u003e:( \");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        /*Read file here and insert task objects into taskList first*/"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        reader \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        String line \u003d reader.readLine();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        while (line !\u003d null) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            Task tSave \u003d new Task(null);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            //System.out.println(line);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            String[] fileInputLine \u003d line.split(\" | \", 2);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            if (fileInputLine[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                String[] fileInputLineMore \u003d fileInputLine[1].split(\" | \", 4);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                tSave \u003d new Todo(fileInputLineMore[3]);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                if (fileInputLineMore[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    tSave.getItDone();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                taskList.add(tSave);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            } else if (fileInputLine[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                String[] fileInputLineMore \u003d fileInputLine[1].split(\" | \", 6);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                //System.out.println(fileInputLineMore[5]);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                tSave \u003d new Deadline(fileInputLineMore[3] + \" \", \" \" + fileInputLineMore[5]);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                tSave.toString();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                if (fileInputLineMore[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    tSave.getItDone();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                taskList.add(tSave);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            } else if (fileInputLine[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                String[] fileInputLineMore \u003d fileInputLine[1].split(\" | \", 6);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                //System.out.println(fileInputLineMore[4]);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                tSave \u003d new Event(fileInputLineMore[3] + \" \", \" \" + fileInputLineMore[5]);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                tSave.toString();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                if (fileInputLineMore[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    tSave.getItDone();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                taskList.add(tSave);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            line \u003d reader.readLine();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        reader.close();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        /**************************************END OF FILE READ******************************************/"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            String[] split_more \u003d null;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            String command \u003d null, description \u003d null, after_command \u003d null, by \u003d null, at \u003d null;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            Task t \u003d new Task(description);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            input \u003d s.nextLine();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                if (input.indexOf(\"todo\") \u003d\u003d 0 || input.indexOf(\"deadline\") \u003d\u003d 0 || input.indexOf(\"event\") \u003d\u003d 0 || input.indexOf(\"done\") \u003d\u003d 0 || input.indexOf(\"delete\") \u003d\u003d 0 || input.indexOf(\"find\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    String[] token \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    command \u003d token[0];"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    after_command \u003d token[1];"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    command \u003d input;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                printPartition();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                DukeException.commandNotValid();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                printPartition();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                command \u003d \"\";"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            /****************************************RUNS THE COMMAND INPUT BY USER***********************************/"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    printTaskList(taskList);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    description \u003d after_command;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    t \u003d new Todo(description);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    taskList.add(t);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    printPartition();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    System.out.println(t.toString());"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    System.out.println(\"Now you have \" + taskList.size() + \" in the list.\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    printPartition();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    split_more \u003d after_command.split(\"/by\", 2);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    description \u003d split_more[0];"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    by \u003d split_more[1];"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    if(!by.isEmpty()) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                        t \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                        taskList.add(t);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                        System.out.println(t.toString());"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                        System.out.println(\"Now you have \" + taskList.size() + \" in the list.\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                        printPartition();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    }else{"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                        printPartition();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                        DukeException.emptyDateErr();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                        printPartition();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    split_more \u003d after_command.split(\"/at\", 2);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    description \u003d split_more[0];"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    at \u003d split_more[1];"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    if(!at.isEmpty()) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                        t \u003d new Event(description, at);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                        taskList.add(t);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                        System.out.println(t.toString());"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                        System.out.println(\"Now you have \" + taskList.size() + \" in the list.\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                        printPartition();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    else{"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                        printPartition();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                        DukeException.emptyDateErr();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                        printPartition();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    taskList.get(Integer.parseInt(after_command) - 1).getItDone();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    printPartition();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    System.out.println(\"[\" + taskList.get(Integer.parseInt(after_command) - 1).getStatusIcon() + \"] \" + taskList.get(Integer.parseInt(after_command) - 1).description);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    printPartition();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    printPartition();"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    System.out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    System.out.println(\"[\" + taskList.get(Integer.parseInt(after_command) - 1).getTag() + \"]\" + \"[\" + taskList.get(Integer.parseInt(after_command) - 1).getStatusIcon() + \"] \" + taskList.get(Integer.parseInt(after_command) - 1).description);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    printPartition();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    taskList.remove(Integer.parseInt(after_command) -1 );"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                case \"find\":"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    int x \u003d 1;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    printPartition();"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    System.out.println(\"here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    for(int j \u003d 0; j \u003c taskList.size(); j++){"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                        if(taskList.get(j).description.contains(after_command) ){"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                            System.out.println(x + \".[\" + taskList.get(j).getTag() + \"]\" + \"[\" + taskList.get(j).getStatusIcon() + \"] \" + taskList.get(j).description);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                            x++;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    printPartition();"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                case \"\":"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    //handles the commands without arguments"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                case \"bye\":"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    //write everything in taskList to file now"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    FileWriter fw \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                        char second_param \u003d (taskList.get(i).isDone) ? \u00271\u0027 : \u00270\u0027;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                        char first_param \u003d taskList.get(i).getTag();"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                        String temp;"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                        String third_param \u003d null, fourth_param \u003d null;"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                        if (first_param \u003d\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                            fw.write(first_param + \" | \" + second_param + \" | \" + taskList.get(i).description + \"\\r\\n\");"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                            fw.flush();"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                        } else if (first_param \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                            //System.out.println(taskList.get(i).description);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                            temp \u003d taskList.get(i).description.replaceAll(\"\\\\(\", \"\").replaceAll(\"\\\\)\", \"\");"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                            //System.out.println(\"After: \" + temp);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                            third_param \u003d temp.split(\"by:\", 2)[0];"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                            fourth_param \u003d temp.split(\"by:\", 2)[1];"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                            fw.write(first_param + \" | \" + second_param + \" | \" + third_param + \"|\" + fourth_param + \"\\r\\n\");"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                            fw.flush();"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                        } else if (first_param \u003d\u003d \u0027E\u0027) {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                            temp \u003d taskList.get(i).description.replaceAll(\"\\\\(\", \"\").replaceAll(\"\\\\)\", \"\");"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                            third_param \u003d temp.split(\"at: \", 2)[0];"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                            fourth_param \u003d temp.split(\"at: \", 2)[1];"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                            fw.write(first_param + \" | \" + second_param + \" | \" + third_param + \"| \" + fourth_param + \"\\r\\n\");"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                            fw.flush();"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    d.functionBye();"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    printPartition();"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    DukeException.commandNotValid();"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    printPartition();"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "A0171206R": 249,
      "-": 8
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public static void fileNotFoundErr(){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        System.out.println(\"File that is trying to be read does not exist! \u003e:( \");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public static void emptyDateErr(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        System.out.println(\"OOPS!! Date parameter cannot be empty!\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public static void commandNotValid(){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        System.out.println(\"OOPS!! The command you entered must have arguments!\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "A0171206R": 18
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    protected String at, temp;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    protected Date dateInput;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        super.tag \u003d \u0027E\u0027;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        //rewrite by string into DDth of MM YYYY, HHmm(am/pm)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        temp \u003d at;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        if(at.isEmpty()){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            DukeException.emptyDateErr();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        else if(temp.matches(\" ([0-9]{1,2})/([0-9]{1,2})/([0-9]{4}) ([0-9]{4})\")){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            SimpleDateFormat parser \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd MMM yyy, h:mma\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                dateInput \u003d parser.parse(temp);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            at \u003d \" \" + formatter.format(dateInput);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        else if(temp.matches(\" ([0-9]{1,2})/([0-9]{1,2})/([0-9]{4})\")){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            SimpleDateFormat parser \u003d new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd MMM yyy\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                dateInput \u003d parser.parse(temp);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            at \u003d \" \" + formatter.format(dateInput);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        super.description \u003d super.description + \"(at:\" + at + \")\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return  \"[\" + super.tag + \"]\" + \"[\" + super.getStatusIcon() + \"] \"+ super.description;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "A0171206R": 49
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "class Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    protected char tag;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public Task(String description){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void getItDone(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public String getStatusIcon(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public char getTag(){return tag;}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "A0171206R": 21
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        super.tag \u003d \u0027T\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return  \"[\" + super.tag + \"]\" + \"[\" + super.getStatusIcon() + \"] \"+ super.description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "A0171206R": 12
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "A0171206R": 10
    }
  }
]

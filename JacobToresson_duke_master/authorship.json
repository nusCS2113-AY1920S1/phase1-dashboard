[
  {
    "path": "src/main/java/Deadline.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JacobToresson": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "import java.util.Scanner; // https://www.programiz.com/java-programming/basic-input-output"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public static void main(String[] args) throws DukeExceptions, IOException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        System.out.println(\"\\t\" + \"_\".repeat(50) + \"\\n\\tHello I\u0027m Duke\\n\\tWhat can I do for you?\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        String reply \u003d \"start\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        Task t \u003d null;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        int index1;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        boolean command;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        ReadFile file \u003d new ReadFile();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        file.openFile();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        int i \u003d 0;    // counter to place stuff at the right index in the list of task\u0027s"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        Task[] list \u003d file.readFileAndCreateList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        for(Task task:list){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            if(task \u003d\u003d null) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            else{"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        file.closeFile();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        while (!reply.equals(\"bye\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            System.out.println(\"\\t\" + \"_\".repeat(50) + \"\\n\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            reply \u003d input.nextLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            System.out.println(\"\\t\" + \"_\".repeat(50) + \"\\n\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            command \u003d false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            t \u003d null;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            if (reply.equals(\"bye\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                turnOff(file, list);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                command \u003d true;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            } else if (reply.equals(\"list\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                printList(list);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                command \u003d true;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            } else if (reply.length() \u003e\u003d 5) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                if (reply.substring(0, 5).toLowerCase().equals(\"done \")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                    command \u003d true;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                        if (reply.substring(5).matches(\"^[1-9][0-9]?$|^100$\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                            if (list[Integer.parseInt(reply.substring(5)) - 1] \u003d\u003d null) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                                throw new DukeExceptions(\"No task with that number\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                                list[Integer.parseInt(reply.substring(5)) - 1].markAsDone();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                                System.out.println(\"Nice! I\u0027ve marked this task as done: \\n\\t\" + list[Integer.parseInt(reply.substring(5)) - 1]);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                            throw new DukeExceptions(\"No task with that number\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                    } catch (DukeExceptions e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                        System.out.println(\"☹ OOPS!!! No task with that number \");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                } else if (reply.substring(0, 5).toLowerCase().equals(\"todoo\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                        if (reply.substring(5).replaceAll(\"\\\\s+\", \"\").equals(\"\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                            throw new DukeExceptions(\"No task with that number\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                            t \u003d new ToDos(reply.substring(6));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                    } catch (DukeExceptions e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                        command \u003d true;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                        System.out.println(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                } else if ((reply.substring(0, 5).toLowerCase().equals(\"event\"))) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                    command \u003d true;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                    index1 \u003d reply.indexOf(\"/at \");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                        if (index1 \u003d\u003d -1) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                            throw new DukeExceptions(\"Unvalid event input\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                            t \u003d new Event(reply.substring(6, index1), reply.substring(index1 + 4));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                    } catch (DukeExceptions e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                        System.out.println(\"☹ OOPS!!! An event input most contain the /ay characters.\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                } else if (reply.length() \u003e 9) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                    if (reply.substring(0, 9).toLowerCase().equals(\"deadline \")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                        command \u003d true;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                        index1 \u003d reply.indexOf(\"/by \");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                            if (index1 \u003d\u003d -1) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                                throw new DukeExceptions(\"Unvalid deadline input\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                                t \u003d new Deadline(reply.substring(9, index1), reply.substring(index1 + 4));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                        } catch (DukeExceptions e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                            System.out.println(\"☹ OOPS!!! An deadline input most contain the /at characters.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            if (t !\u003d null \u0026\u0026 !command ) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                list[i] \u003d t;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                System.out.println(\"\\tGot it. I\u0027ve added this task:\\n\\t \" + t + \"\\n\\tNow you have \" + i + \" tasks in the list.\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            } else if (!command) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                    throw new DukeExceptions(\"Unvalid command\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                } catch (DukeExceptions e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                    System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public static void turnOff(ReadFile file, Task[] list) throws IOException {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        System.out.println(\"\\tBye. Hope to see you again soon!\\n\\t\" + \"_\".repeat(50) + \"\\n\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        ReadFile.updateFile(list);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        file.closeFile();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public static void printList(Task[] list) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        int j \u003d 1;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        for (Task thing : list) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            if (thing !\u003d null) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                System.out.println(String.valueOf(j) + \".  \" + thing);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                j++;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JacobToresson": 130,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeExceptions.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "public class DukeExceptions extends Exception { //https://www.javatpoint.com/custom-exception https://www.codejava.net/java-core/exception/how-to-create-custom-exceptions-in-java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    DukeExceptions(String message){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JacobToresson": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public Event(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "JacobToresson": 15
    }
  },
  {
    "path": "src/main/java/ReadFile.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "import java.io.*; // https://www.youtube.com/watch?v\u003d3RNYUKxAgmw"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "import java.lang.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "public class ReadFile {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    private Scanner x;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public void openFile(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            x \u003d new Scanner(new File(\"/Users/JacobT/Desktop/PLUGG/CS1231/duke/src/main/java/duke.txt\"));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        catch(Exception e) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            System.out.println(\"Could not find file\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public Task[] readFileAndCreateList(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        Task[] list \u003d new Task[100];"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        String identifier;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        String next;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        String completed;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        String test;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        String when;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        while(x.hasNext()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            identifier \u003d x.next();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            x.next();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            completed \u003d x.next();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            x.next();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            description \u003d x.next();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            while (x.hasNext()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                test \u003d x.next();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                if (test.equals(\"|\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                    description \u003d description + \" \" + test;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            if(identifier.equals(\"T\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                list[i] \u003d new ToDos(description);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                when \u003d x.next();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                while (x.hasNext()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                    test \u003d x.next();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                    if (test.equals(\"|\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                    else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                        when \u003d when + \" \" + test;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                if (identifier.equals(\"D\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                    list[i] \u003d new Deadline(description, when);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                else if (identifier.equals(\"E\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                    list[i] \u003d new Event(description, when);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                else{"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                    System.out.println(\"NÅGOT ÄR FEL\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            if (completed.equals(\"1\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                list[i].markAsDone();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public void closeFile(){"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        x.close();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public static void updateFile(Task[] list) throws IOException {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        String symbol;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        String j;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        FileWriter fw;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        BufferedWriter bw;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        PrintWriter out;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            fw \u003d new FileWriter(\"/Users/JacobT/Desktop/PLUGG/CS1231/duke/src/main/java/duke.txt\", false);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            bw \u003d new BufferedWriter(fw);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            for (Task task : list) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                if (task \u003d\u003d null) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                symbol \u003d task.toString().substring(1, 2);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                if (task.isDone) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                    j \u003d \"1\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                    j \u003d \"0\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                String output \u003d symbol + \" | \" + j + \" | \" + task.description + \" | \";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                if (symbol.equals(\"E\") || symbol.equals(\"D\")) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                    symbol \u003d symbol + task.by + \" | \";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                fw.append(output);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            fw.flush();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        catch(Exception e){"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            System.out.println(\"Something went wrong while printing the file\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "}"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "JacobToresson": 115
    }
  },
  {
    "path": "src/main/java/Task.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public void markAsDone(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JacobToresson": 23
    }
  },
  {
    "path": "src/main/java/ToDos.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "public class ToDos extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public ToDos(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        return \"[T]\" + super.toString() ;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "JacobToresson": 11
    }
  }
]

[
  {
    "path": "src/main/java/Deadline.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public String toOutput(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        String j;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            j \u003d \"1\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            j \u003d \"0\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        return \"D\" + \" | \" + j + \" | \" + description + \" | \" + by +  \" | \";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JacobToresson": 25
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    private Duke(String filepath) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        storage \u003d new Storage(filepath);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        taskList \u003d new TaskList(storage.readFileAndCreateList());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        ui.welcome();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        String caseX \u003d \"\";     // to keep of track of what to doo"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            ui.printBlankLine();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            input \u003d ui.readCommand();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            ui.printBlankLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            caseX \u003d parser.getCase(ui, input);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            switch (caseX) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                case \"bye\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                    turnOff();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                    ui.printList(taskList.list);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                case \"done \":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                    taskList.doneEvent(ui, input);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                case \"delete \":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                    taskList.deleteEvent(ui, input);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                case \"find \":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                    if (parser.checkFind(ui, input)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                        taskList.findEvent(ui, input);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                case \"todo \":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                    if (parser.checkToDo(ui, input)) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                        taskList.addToDo(ui, input);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                case \"deadline \":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                    if (parser.checkDeadline(ui, input)) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                        String date \u003d parser.convertDate(input.substring(input.indexOf(\"/by\") + 4));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                        String time1 \u003d parser.convertTime(input.substring(input.indexOf(\"/by\") + 15, input.indexOf(\"/by\") + 20));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                        taskList.addDeadline(ui, input, date, time1);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                case \"event \":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                    if (parser.checkEvent(ui, input)) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                        String date \u003d parser.convertDate(input.substring(input.indexOf(\"/at\") + 4));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                        String time1 \u003d parser.convertTime(input.substring(input.indexOf(\"/at\") + 15, input.indexOf(\"/at\") + 20));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                        String time2 \u003d parser.convertTime(input.substring(input.indexOf(\"/at\") + 21, input.indexOf(\"/at\") + 26));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                        taskList.addEvent(ui, input, date, time1, time2);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    private void turnOff() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        ui.messege(\"\\tBye. Hope to see you again soon!\\n\\t\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        ui.printBlankLine();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        storage.updateFile(taskList.list);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        storage.closeFile();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        new Duke(\"/Users/JacobT/Desktop/PLUGG/CS1231/duke/src/main/java/duke.txt\").run();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JacobToresson": 77,
      "-": 2
    }
  },
  {
    "path": "src/main/java/DukeExceptions.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "//https://www.javatpoint.com/custom-exception https://www.codejava.net/java-core/exception/how-to-create-custom-exceptions-in-java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "public class DukeExceptions extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    DukeExceptions(String message){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JacobToresson": 7
    }
  },
  {
    "path": "src/main/java/Event.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public Event(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public String toOutput(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        String j;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            j \u003d \"1\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            j \u003d \"0\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        return \"E\" + \" | \" + j + \" | \" + description + \" | \" + by +  \" | \";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "JacobToresson": 26
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public String getCase(Ui ui, String input){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        String[] commands \u003d {\"bye\", \"list\", \"done \", \"todo \", \"event \", \"deadline \", \"delete \", \"find \"};"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        String caseX \u003d \"\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        input \u003d input + \"          \"; // to avoid slicing a string that\u0027s to short"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            for (String command : commands) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                if (input.substring(0, command.length()).equals(command)) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                    return command;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            throw new DukeExceptions(\"Unvalid command\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        catch (DukeExceptions e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            ui.errorMessege(\" I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        return caseX;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public boolean checkDate (String date){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        return date.matches(\"^([0-2][0-9]|(3)[0-1])(\\\\/)(((0)[0-9])|((1)[0-2]))(\\\\/)\\\\d{4}$\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public boolean checkTime(String time){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        return time.matches(\"([01]?[0-9]|2[0-3]):[0-5][0-9]\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public String convertDate(String date){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        String[] months \u003d {\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" };"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        int index1 \u003d date.indexOf(\"/\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        int index2 \u003d date.indexOf(\"/\", index1+1);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        String year \u003d date.substring(index2+1, index2+5);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        String day \u003d Integer.valueOf(date.substring(0, index1)).toString();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        String month \u003d months[Integer.parseInt(date.substring(index1 + 1, index2)) - 1];"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            // gives right ending to the number"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        String end;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        if(day.equals(\"1\")){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            end \u003d \"st\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        else if(day.equals(\"2\")){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            end \u003d \"nd\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        else{"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            end \u003d \"th\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        return day + end + \" of \" + month + \" \" + year;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public String convertTime(String time){"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        int hour \u003d Integer.parseInt(time.substring(0,2));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        String detail \u003d \"am\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        if(hour \u003e 12 ){"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            detail \u003d \"pm\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            hour \u003d hour -12;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        String minute \u003d time.substring(3,5);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        if(minute.equals(\"00\")){ return hour + detail; }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        else{ return hour + \":\" + minute + detail;}"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public boolean checkFind(Ui ui, String input ){"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            if (input.substring(4).trim().equals(\"\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                throw new DukeExceptions(\"Empty find statement \");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        } catch (DukeExceptions e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            ui.errorMessege(\" A find statement cannot be empty\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public boolean checkToDo(Ui ui, String input){"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            if (input.substring(4).replaceAll(\"\\\\s+\", \"\").equals(\"\")) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                throw new DukeExceptions(\"Unvalid todo statement\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        } catch (DukeExceptions e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            ui.errorMessege(\"A todo statement cannot be empty\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public boolean checkDeadline(Ui ui, String input){"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        int index1;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            index1 \u003d input.indexOf(\"/by\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            if (index1 \u003d\u003d -1) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                throw new DukeExceptions(\"Unvalid deadline input\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            ui.errorMessege(\"Unvalid deadline input, most contain /by\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            if (!checkDate(input.substring(index1 + 4, index1 + 14)) || !checkTime(input.substring(index1 + 15, index1 + 20))) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                throw new DukeExceptions(\"Unvalid deadline input\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            ui.errorMessege(\"Unvalid date/time in the deadline input, most be on format: dd/mm/yyyy hh:mm\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public boolean checkEvent(Ui ui, String input){"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        int index1;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            index1 \u003d input.indexOf(\"/at\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            if (index1 \u003d\u003d -1) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                throw new DukeExceptions(\"Unvalid event input\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            ui.errorMessege(\"Unvalid event input, most contain /at\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            if (!checkDate(input.substring(index1 + 4, index1 + 14)) || !checkTime(input.substring(index1 + 15, index1 + 20)) || !checkTime(input.substring(index1 + 21, index1 + 26))) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                throw new DukeExceptions(\"Unvalid event input\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            ui.errorMessege(\"Unvalid date/time in the event input, most be on format: dd/mm/yyyy hh:mm-hh:mm\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JacobToresson": 139
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "import java.io.*; // https://www.youtube.com/watch?v\u003d3RNYUKxAgmw"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "import java.lang.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    private Scanner x;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    private String filepath;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            x \u003d new Scanner(new File(\"/Users/JacobT/Desktop/PLUGG/CS1231/duke/src/main/java/duke.txt\"));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        catch(Exception e){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            System.out.println(\"File not found\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public ArrayList\u003cTask\u003e readFileAndCreateList(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        String identifier;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        String completed;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        String test;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        String when;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        while(x.hasNext()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            identifier \u003d x.next();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            x.next();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            completed \u003d x.next();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            x.next();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            description \u003d x.next();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            while (x.hasNext()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                test \u003d x.next();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                if (test.equals(\"|\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                    description \u003d description + \" \" + test;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            if(identifier.equals(\"T\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                task \u003d new ToDo(description);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                when \u003d x.next();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                while (x.hasNext()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                    test \u003d x.next();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                    if (test.equals(\"|\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                    else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                        when \u003d when + \" \" + test;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                if (identifier.equals(\"D\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                    task \u003d new Deadline(description, when);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                else if (identifier.equals(\"E\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                    task \u003d new Event(description, when);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                else{"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                    System.out.println(\"Unidentified kind of task\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            if (completed.equals(\"1\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                task.markAsDone();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            list.add(task);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public void closeFile(){"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        x.close();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public void updateFile(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            FileWriter fw \u003d new FileWriter(\"/Users/JacobT/Desktop/PLUGG/CS1231/duke/src/main/java/duke.txt\", false);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            for (Task task : list) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                if (task \u003d\u003d null) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                String output \u003d task.toOutput();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                fw.append(output);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                fw.append(\"\\n\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            fw.flush();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        catch(Exception e){"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            System.out.println(\"Something went wrong while printing to the file\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "}"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "JacobToresson": 102
    }
  },
  {
    "path": "src/main/java/Task.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public void markAsDone(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public String toOutput() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        return \"description\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JacobToresson": 25
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasksFromFile){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        list \u003d tasksFromFile;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public void doneEvent(Ui ui, String input){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            if (list.get(Integer.parseInt(input.substring(5)) - 1) \u003d\u003d null) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                throw new DukeExceptions(\"unvalid done statement\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                list.get(Integer.parseInt(input.substring(5)) - 1).markAsDone();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                System.out.println(\"Nice! I\u0027ve marked this task as done: \\n\\t\" + list.get(Integer.parseInt(input.substring(5)) - 1));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        catch (Exception e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            ui.errorMessege(\"I\u0027m sorry, but there are no task with that number :-(\\\");\\n\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public void deleteEvent(Ui ui, String input){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            ui.messege(\"Noted. I\u0027ve removed this task:\\n\\t\" + list.get(Integer.parseInt(input.substring(7))-1) + \"\\nNow you have \" + list.size() + \"tasks in the list\" );"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            list.remove(Integer.parseInt(input.substring(7)) -1);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        catch(Exception e){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            ui.messege(\"No task with that number\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public void findEvent(Ui ui, String input){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        boolean found \u003d false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        String str1 \u003d \"\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        for (Task task : list) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            if (task.description.contains(input.substring(5))) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                str1 \u003d  str1 + \"\\t\\n\" + i + \". \" + task;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                found \u003d true;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        if(found){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            ui.messege(\"\\tHere are the matching tasks in your list:\" + str1 );"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        else{"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            ui.messege(\"\\tNo matching tasks in your list\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public void addToDo(Ui ui, String input){"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        Task task \u003d new ToDo(input.substring(5));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        addTask(ui, task);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public void addDeadline(Ui ui, String input, String date, String time1){"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        Task task \u003d new Deadline(input.substring(9, input.indexOf(\"/by\")), date + \" \" + time1);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        addTask(ui, task);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public void addEvent(Ui ui, String input, String date, String time1, String time2){"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        Task task \u003d new Event(input.substring(6, input.indexOf(\"/at \")), date + \" \" + time1 + \"-\" + time2);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        addTask(ui, task);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public void addTask(Ui ui, Task task){"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        list.add(task);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        ui.messege(\"\\tGot it. I\u0027ve added this task:\\n\\t \" + task + \"\\n\\tNow you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JacobToresson": 75
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        return \"[T]\" + super.toString() ;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public String toOutput(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        String j;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            j \u003d \"1\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            j \u003d \"0\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        return \"T\" + \" | \" + j + \" | \" + description + \" | \";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "JacobToresson": 22
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "import java.util.Scanner; // https://www.programiz.com/java-programming/basic-input-output"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    Scanner input; // to be able to take input form user"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public Ui(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public void welcome(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        System.out.println(\"\\t\" + \"_\".repeat(50) + \"\\n\\tHello I\u0027m Duke\\n\\tWhat can I do for you?\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public String readCommand(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        return input.nextLine();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public void printBlankLine(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        System.out.println(\"\\t\" + \"_\".repeat(50) + \"\\n\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public void printList(ArrayList\u003cTask\u003e list){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        int j \u003d 1;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        for (Task task : list) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            if (task !\u003d null) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                System.out.println(j + \".  \" + task);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                j++;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public void errorMessege(String messege){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        System.out.println(\"☹ OOPS!!! \" + messege);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    public void messege(String messege){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "        System.out.println(messege);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JacobToresson"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JacobToresson": 43
    }
  }
]

[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "assman"
        },
        "content": "group \u0027main.java\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "assman"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "assman"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter-api:5.3.1\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "assman"
        },
        "content": "    testRuntimeOnly \u0027org.junit.jupiter:junit-jupiter-engine:5.3.1\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "assman"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "assman"
        },
        "content": "test {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "assman"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "assman"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "assman"
        },
        "content": "        showStandardStreams \u003d true"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "assman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "assman"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "assman"
        },
        "content": "    mainClassName \u003d \"main.java.Duke\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "assman": 14,
      "-": 14
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "assman"
        },
        "content": "//package main.java;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "assman"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "assman"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "assman"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "assman"
        },
        "content": " * The Deadline class is an extention of the Task class with a few custom"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "assman"
        },
        "content": " * properties like the type and the deadline date/time"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "assman"
        },
        "content": " * "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "assman"
        },
        "content": " * @author Varun Parmar"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "assman"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "assman"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "assman"
        },
        "content": "    protected LocalDateTime by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "assman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "assman"
        },
        "content": "     * This method is the default constructor for the Deadline class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "assman"
        },
        "content": "     * "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "assman"
        },
        "content": "     * @param title.    Represents the title of the Deadline in String format."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "assman"
        },
        "content": "     * @param deadline. Represents the Date/Time deadline of the Deadline in the"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "assman"
        },
        "content": "     *                  form of a LocalDateTime object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "assman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "assman"
        },
        "content": "    Deadline(String title, LocalDateTime deadline) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "assman"
        },
        "content": "        super(title);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "assman"
        },
        "content": "        this.type \u003d \"[D]\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "assman"
        },
        "content": "        this.by \u003d deadline;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "assman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "assman"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "assman"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "assman"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "assman"
        },
        "content": "        return super.toString() + \" (by: \" + by.format(formatter) + \")\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "assman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "assman"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "assman": 34
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "assman"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "assman"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "assman"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "assman"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "assman"
        },
        "content": " * The Duke program implements an application that serves as a command line personal assistant"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "assman"
        },
        "content": " * "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "assman"
        },
        "content": " * @author Varun Parmar"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "assman"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "assman"
        },
        "content": "    private static final String LOGO \u003d \" ____        _        \\n\" + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "assman"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\" + \"| |_| | |_| |   \u003c  __/\\n\" + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "assman"
        },
        "content": "    private TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "assman"
        },
        "content": "    private Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "assman"
        },
        "content": "    private Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "assman"
        },
        "content": "        System.out.println(\"Hello I\u0027m Duke\\n\" + \"What can I do for you?\\n\" + \"____________________________\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "assman"
        },
        "content": "        Duke myDuke \u003d new Duke();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "assman"
        },
        "content": "        myDuke.run();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "assman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "assman"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "assman"
        },
        "content": "      this.storage.load(this.taskList);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "assman"
        },
        "content": "      Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "assman"
        },
        "content": "      while(input.hasNextLine()){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "assman"
        },
        "content": "        String inputString \u003d input.nextLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "assman"
        },
        "content": "        parser.processUserInput(inputString, this.taskList, this.storage);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "assman"
        },
        "content": "      }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "assman": 30,
      "-": 4
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "assman"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "assman"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "assman"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "assman"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "assman"
        },
        "content": " * The event class is an extention of the Task class with a few custom"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "assman"
        },
        "content": " * properties like the date and time of the event."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "assman"
        },
        "content": " * "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "assman"
        },
        "content": " * @author Varun Parmar"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "assman"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "assman"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "assman"
        },
        "content": "    protected LocalDateTime at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "assman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "assman"
        },
        "content": "     * This method is the default constructor for the Event class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "assman"
        },
        "content": "     * "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "assman"
        },
        "content": "     * @param title. Represents the title of the event in String format."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "assman"
        },
        "content": "     * @param when.  Represents the Date/Time of the event in the form of a"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "assman"
        },
        "content": "     *               LocalDateTime object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "assman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "assman"
        },
        "content": "    Event(String title, LocalDateTime when) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "assman"
        },
        "content": "        super(title);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "assman"
        },
        "content": "        this.type \u003d \"[E]\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "assman"
        },
        "content": "        this.at \u003d when;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "assman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "assman"
        },
        "content": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "assman"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "assman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "assman"
        },
        "content": "     * This method overrides the toString method of the parent class."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "assman"
        },
        "content": "     * "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "assman"
        },
        "content": "     * @return String. Returns the string representation of the event with the date"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "assman"
        },
        "content": "     *         and time appended to its name and type"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "assman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "assman"
        },
        "content": "\u003e\u003e\u003e\u003e\u003e\u003e\u003e gradle"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "assman"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "assman"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "assman"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "assman"
        },
        "content": "        return super.toString() + \" (at: \" + at.format(formatter) + \")\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "assman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "assman"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "assman": 43
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "assman"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "assman"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "assman"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "assman"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "assman"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "assman"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "assman"
        },
        "content": " * The Parser class implements the logic to be executed upon user input."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "assman"
        },
        "content": " * "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "assman"
        },
        "content": " * @author Varun Parmar"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "assman"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "assman"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "assman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "assman"
        },
        "content": "     * This method takes in the users string based input and parses it into a sensible command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "assman"
        },
        "content": "     * @param userInput This is the first parameter to the method which represents the users input in String format."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "assman"
        },
        "content": "     * @param taskList This is the second parameter to the method which is the TaskList of the current user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "assman"
        },
        "content": "     * @param storage This is the third parameter to the method which is used to save the users todos in a persistant file"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "assman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "assman"
        },
        "content": "    public void processUserInput(String userInput, TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "assman"
        },
        "content": "        String[] parts \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "assman"
        },
        "content": "        switch(parts[0]) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "assman"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "assman"
        },
        "content": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "assman"
        },
        "content": "              if(Integer.parseInt(parts[1]) \u003e taskList.size()){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "assman"
        },
        "content": "                Ui.respondToUser(\"Task not found\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "assman"
        },
        "content": "              }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "assman"
        },
        "content": "              else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "assman"
        },
        "content": "               taskList.get((Integer.parseInt(parts[1]) - 1)).setDone(true);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "assman"
        },
        "content": "              Ui.respondToUser(\"Nice! I\u0027ve marked this task as done: \\n\" +"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "assman"
        },
        "content": "                            taskList.get((Integer.parseInt(parts[1]) - 1)).toString());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "assman"
        },
        "content": "              }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "assman"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "assman"
        },
        "content": "              try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "assman"
        },
        "content": "                if(parts[1].isBlank() | parts[1].isEmpty()){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "assman"
        },
        "content": "                  Ui.respondToUser(\"Task not found\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "assman"
        },
        "content": "                  break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "assman"
        },
        "content": "                }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "assman"
        },
        "content": "                if(Integer.parseInt(parts[1]) \u003e taskList.size()){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "assman"
        },
        "content": "                  Ui.respondToUser(\"Task not found\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "assman"
        },
        "content": "                }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "assman"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "assman"
        },
        "content": "                 taskList.get((Integer.parseInt(parts[1]) - 1)).setDone(true);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "assman"
        },
        "content": "                Ui.respondToUser(\"Nice! I\u0027ve marked this task as done: \\n\" +"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "assman"
        },
        "content": "                              taskList.get((Integer.parseInt(parts[1]) - 1)).toString());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "assman"
        },
        "content": "                }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "assman"
        },
        "content": "              } catch (ArrayIndexOutOfBoundsException exception) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "assman"
        },
        "content": "                Ui.respondToUser(\"Task not found\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "assman"
        },
        "content": "              }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "assman"
        },
        "content": "\u003e\u003e\u003e\u003e\u003e\u003e\u003e gradle"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "assman"
        },
        "content": "              break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "assman"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "assman"
        },
        "content": "              System.out.println(\"-----------------------\\nHere are the tasks in your list:\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "assman"
        },
        "content": "              for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "assman"
        },
        "content": "                  System.out.println(i + 1 + \": \" + taskList.get(i).toString());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "assman"
        },
        "content": "              }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "assman"
        },
        "content": "              System.out.println(\"-----------------------\\n\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "assman"
        },
        "content": "              break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "assman"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "assman"
        },
        "content": "              try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "assman"
        },
        "content": "                if(parts[1].isBlank() | parts[1].isEmpty()){"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "assman"
        },
        "content": "                    Ui.respondToUser(\"Which task do you want to delete?\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "assman"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "assman"
        },
        "content": "                  }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "assman"
        },
        "content": "                  if(Integer.parseInt(parts[1]) \u003e taskList.size()){"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "assman"
        },
        "content": "                    Ui.respondToUser(\"Task not found\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "assman"
        },
        "content": "                  }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "assman"
        },
        "content": "                  else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "assman"
        },
        "content": "                    Task deletedTask \u003d taskList.get(Integer.parseInt(parts[1]) - 1);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "assman"
        },
        "content": "                    taskList.getlist().remove(Integer.parseInt(parts[1]) - 1);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "assman"
        },
        "content": "                    Ui.respondToUser(\"Noted. I\u0027ve removed this task: \\n\" +"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "assman"
        },
        "content": "                                  deletedTask.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "assman"
        },
        "content": "                                  \"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "assman"
        },
        "content": "                  }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "assman"
        },
        "content": "              } catch (ArrayIndexOutOfBoundsException exception) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "assman"
        },
        "content": "                  Ui.respondToUser(\"Which task do you want to delete?\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "assman"
        },
        "content": "              }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "assman"
        },
        "content": "              break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "assman"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "assman"
        },
        "content": "              try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "assman"
        },
        "content": "                if(parts[1].isBlank() | parts[1].isEmpty()){"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "assman"
        },
        "content": "                    Ui.respondToUser(\"☹ OOPS!!! The search query cannot be empty.\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "assman"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "assman"
        },
        "content": "                  }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "assman"
        },
        "content": "                String searchQuery \u003d parts[1];"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "assman"
        },
        "content": "                ArrayList\u003cTask\u003e searchResult \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "assman"
        },
        "content": "                for (Task task : taskList.getlist()) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "assman"
        },
        "content": "                    if(task.toString().contains(searchQuery)){"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "assman"
        },
        "content": "                        searchResult.add(task);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "assman"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "assman"
        },
        "content": "                }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "assman"
        },
        "content": "                if(searchResult.size() \u003e 0){"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "assman"
        },
        "content": "                    System.out.println(\"-----------------------\\nHere are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "assman"
        },
        "content": "                    for (int i \u003d 0; i \u003c searchResult.size(); i++) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "assman"
        },
        "content": "                        System.out.println(i + 1 + \": \" + searchResult.get(i).toString());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "assman"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "assman"
        },
        "content": "                    System.out.println(\"-----------------------\\n\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "assman"
        },
        "content": "                }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "assman"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "assman"
        },
        "content": "                    Ui.respondToUser(\"Sorry, no such tasks found :(\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "assman"
        },
        "content": "                }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "assman"
        },
        "content": "              } catch (ArrayIndexOutOfBoundsException exception) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "assman"
        },
        "content": "                    Ui.respondToUser(\"☹ OOPS!!! The search query cannot be empty.\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "assman"
        },
        "content": "              }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "assman"
        },
        "content": "              break;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "assman"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "assman"
        },
        "content": "              Ui.respondToUser(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "assman"
        },
        "content": "              storage.save(taskList);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "assman"
        },
        "content": "              System.exit(0);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "assman"
        },
        "content": "              break;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "assman"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "assman"
        },
        "content": "              try {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "assman"
        },
        "content": "                if(parts[1].isBlank() | parts[1].isEmpty()){"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "assman"
        },
        "content": "                  Ui.respondToUser(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "assman"
        },
        "content": "                  break;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "assman"
        },
        "content": "                }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "assman"
        },
        "content": "                Todo todo \u003d new Todo(parts[1]);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "assman"
        },
        "content": "                taskList.addTask(todo);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "assman"
        },
        "content": "                Ui.respondToUser(\"Got it. I\u0027ve added this task:  \\n\" +"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "assman"
        },
        "content": "                              todo.toString() + \"\\n\" + "
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "assman"
        },
        "content": "                              \"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "assman"
        },
        "content": "              } catch (ArrayIndexOutOfBoundsException exception) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "assman"
        },
        "content": "                Ui.respondToUser(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "assman"
        },
        "content": "              }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "assman"
        },
        "content": "              break;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "assman"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "assman"
        },
        "content": "              try {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "assman"
        },
        "content": "                if(parts[1].isBlank() | parts[1].isEmpty()){"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "assman"
        },
        "content": "                  Ui.respondToUser(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "assman"
        },
        "content": "                  break;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "assman"
        },
        "content": "                }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "assman"
        },
        "content": "                String[] deadline_parts \u003d parts[1].split(\" /by \", 2);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "assman"
        },
        "content": "                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "assman"
        },
        "content": "                LocalDateTime dateTime;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "assman"
        },
        "content": "                try{"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "assman"
        },
        "content": "                  dateTime \u003d LocalDateTime.parse(deadline_parts[1], formatter);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "assman"
        },
        "content": "                }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "assman"
        },
        "content": "                catch(Exception e){"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "assman"
        },
        "content": "                  Ui.respondToUser(\"Invalid Date/Time. Please use the format dd-MM-yyyy HH:mm\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "assman"
        },
        "content": "                  break;                "
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "assman"
        },
        "content": "                }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "assman"
        },
        "content": "                Deadline deadline \u003d new Deadline(deadline_parts[0], dateTime);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "assman"
        },
        "content": "                taskList.addTask(deadline);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "assman"
        },
        "content": "                Ui.respondToUser(\"Got it. I\u0027ve added this task:  \\n\" +"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "assman"
        },
        "content": "                              deadline.toString() + \"\\n\" + "
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "assman"
        },
        "content": "                              \"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "assman"
        },
        "content": "              } catch (ArrayIndexOutOfBoundsException exception) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "assman"
        },
        "content": "                Ui.respondToUser(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "assman"
        },
        "content": "              }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "assman"
        },
        "content": "              break;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "assman"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "assman"
        },
        "content": "              try {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "assman"
        },
        "content": "                if(parts[1].isBlank() | parts[1].isEmpty()){"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "assman"
        },
        "content": "                  Ui.respondToUser(\"☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "assman"
        },
        "content": "                  break;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "assman"
        },
        "content": "                }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "assman"
        },
        "content": "                String[] event_parts \u003d parts[1].split(\" /at \", 2);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "assman"
        },
        "content": "                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "assman"
        },
        "content": "                LocalDateTime dateTime;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "assman"
        },
        "content": "                try{"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "assman"
        },
        "content": "                  dateTime \u003d LocalDateTime.parse(event_parts[1], formatter);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "assman"
        },
        "content": "                }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "assman"
        },
        "content": "                catch(Exception e){"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "assman"
        },
        "content": "                  Ui.respondToUser(\"Invalid Date/Time. Please use the format dd-MM-yyyy HH:mm\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "assman"
        },
        "content": "                  break;                "
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "assman"
        },
        "content": "                }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "assman"
        },
        "content": "                Event event \u003d new Event(event_parts[0], dateTime);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "assman"
        },
        "content": "                taskList.addTask(event);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "assman"
        },
        "content": "                Ui.respondToUser(\"Got it. I\u0027ve added this task:  \\n\" +"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "assman"
        },
        "content": "                              event.toString() + \"\\n\" + "
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "assman"
        },
        "content": "                              \"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "assman"
        },
        "content": "              } catch (ArrayIndexOutOfBoundsException exception) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "assman"
        },
        "content": "                Ui.respondToUser(\"☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "assman"
        },
        "content": "              }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "assman"
        },
        "content": "              break;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "assman"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "assman"
        },
        "content": "              Ui.respondToUser(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "assman"
        },
        "content": "          }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "assman"
        },
        "content": "     }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "assman"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "assman": 181
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "assman"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "assman"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "assman"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "assman"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "assman"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "assman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "assman"
        },
        "content": "    public void load(TaskList tList) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "assman"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "assman"
        },
        "content": "            FileInputStream fis \u003d new FileInputStream(\"tasks.txt\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "assman"
        },
        "content": "            ObjectInputStream ois \u003d new ObjectInputStream(fis);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "assman"
        },
        "content": "            tList.setlist((ArrayList\u003cTask\u003e) ois.readObject());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "assman"
        },
        "content": "            ois.close();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "assman"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "assman"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "assman"
        },
        "content": "                FileOutputStream fos \u003d new FileOutputStream(\"tasks.txt\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "assman"
        },
        "content": "                ObjectOutputStream oos \u003d new ObjectOutputStream(fos);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "assman"
        },
        "content": "                oos.writeObject(tList.getlist());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "assman"
        },
        "content": "                oos.close();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "assman"
        },
        "content": "            } catch (Exception ee) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "assman"
        },
        "content": "                Ui.respondToUser(\"OOPS, unable to write to file\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "assman"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "assman"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "assman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "assman"
        },
        "content": "    public void save(TaskList tList) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "assman"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "assman"
        },
        "content": "            FileOutputStream fos \u003d new FileOutputStream(\"tasks.txt\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "assman"
        },
        "content": "            ObjectOutputStream oos \u003d new ObjectOutputStream(fos);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "assman"
        },
        "content": "            oos.writeObject(tList.getlist());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "assman"
        },
        "content": "            oos.close();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "assman"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "assman"
        },
        "content": "            Ui.respondToUser(\"Error while saving your tasks :(\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "assman"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "assman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "assman"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "assman": 38
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "assman"
        },
        "content": "//package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "assman"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "assman"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "assman"
        },
        "content": " * The Task class serves as the parent class that forms the skeleton for a generic Todo"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "assman"
        },
        "content": " * "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "assman"
        },
        "content": " * @author Varun Parmar"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "assman"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "assman"
        },
        "content": "public class Task implements Serializable {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "assman"
        },
        "content": "    protected String title \u003d null;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "assman"
        },
        "content": "    protected String description \u003d null;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "assman"
        },
        "content": "    protected boolean done \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "assman"
        },
        "content": "    protected String type \u003d null;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "assman"
        },
        "content": "    protected String statusIcon \u003d null;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "assman"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "assman"
        },
        "content": "   * This is the constructor of the class that initializes the title and status icon as not done by default."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "assman"
        },
        "content": "   * @param taskTitle."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "assman"
        },
        "content": "   * @return Nothing."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "assman"
        },
        "content": "   */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "assman"
        },
        "content": "    Task(String taskTitle) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "assman"
        },
        "content": "        title \u003d taskTitle;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "assman"
        },
        "content": "        statusIcon \u003d \"[\\u2718]\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "assman"
        },
        "content": "      }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "assman"
        },
        "content": "    public String getTitle(){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "assman"
        },
        "content": "        return title;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "assman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "assman"
        },
        "content": "    public void setTitle(String todoTitle){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "assman"
        },
        "content": "        title \u003d todoTitle;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "assman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "assman"
        },
        "content": "    public boolean getDone(){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "assman"
        },
        "content": "        return done;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "assman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "assman"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "assman"
        },
        "content": "        return statusIcon;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "assman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "assman"
        },
        "content": "    public void setDone(boolean d){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "assman"
        },
        "content": "        done \u003d d;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "assman"
        },
        "content": "        statusIcon \u003d \"[\\u2713]\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "assman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "assman"
        },
        "content": "    public String getTaskType(){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "assman"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "assman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "assman"
        },
        "content": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "assman"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "assman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "assman"
        },
        "content": "     * This method returns the String representation of the Task."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "assman"
        },
        "content": "     * @return String This returns the string representation of the Task"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "assman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "assman"
        },
        "content": "\u003e\u003e\u003e\u003e\u003e\u003e\u003e gradle"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "assman"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "assman"
        },
        "content": "        return type + statusIcon + title;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "assman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "assman"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "assman": 63
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "assman"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "assman"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "assman"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "assman"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "assman"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "assman"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "assman"
        },
        "content": "        this.taskList.add(task);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "assman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "assman"
        },
        "content": "    public void deleteTask(Integer index) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "assman"
        },
        "content": "        this.taskList.remove(index);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "assman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "assman"
        },
        "content": "    public Integer size() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "assman"
        },
        "content": "        return this.taskList.size();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "assman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "assman"
        },
        "content": "    public Task get(Integer index) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "assman"
        },
        "content": "        return this.taskList.get(index);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "assman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "assman"
        },
        "content": "    public ArrayList\u003cTask\u003e getlist() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "assman"
        },
        "content": "        return this.taskList;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "assman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "assman"
        },
        "content": "    public void setlist(ArrayList\u003cTask\u003e tList) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "assman"
        },
        "content": "        this.taskList \u003d tList;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "assman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "assman"
        },
        "content": "    public void remove(Integer index){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "assman"
        },
        "content": "        this.taskList.remove(index);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "assman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "assman"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "assman": 37
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "assman"
        },
        "content": "//package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "assman"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "assman"
        },
        "content": " * The Todo class is an extention of the Task class with a few custom"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "assman"
        },
        "content": " * properties like the type."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "assman"
        },
        "content": " * "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "assman"
        },
        "content": " * @author Varun Parmar"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "assman"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "assman"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "assman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "assman"
        },
        "content": "     * This method is the default constructor for the Todo class."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "assman"
        },
        "content": "     * "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "assman"
        },
        "content": "     * @param title. Represents the title of the Todo in String format."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "assman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "assman"
        },
        "content": "    Todo(String title) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "assman"
        },
        "content": "        super(title);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "assman"
        },
        "content": "        this.type \u003d \"[T]\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "assman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "assman"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "assman": 21
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "assman"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "assman"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "assman"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "assman"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "assman"
        },
        "content": "    public static void respondToUser(String userResponse) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "assman"
        },
        "content": "        System.out.println(\"-----------------------\\n\" + userResponse + \"\\n-----------------------\\n\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "assman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "assman"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "assman": 10
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "assman"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "assman"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "assman"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "assman"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "assman"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "assman"
        },
        "content": " * This class implements the unit testing code for the Deadline class"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "assman"
        },
        "content": " * "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "assman"
        },
        "content": " * @author Varun Parmar"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "assman"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "assman"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "assman"
        },
        "content": "    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "assman"
        },
        "content": "    LocalDateTime dateTime \u003d LocalDateTime.parse(\"09-06-2019 20:30\", formatter);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "assman"
        },
        "content": "    Deadline deadline \u003d new Deadline(\"test deadline\", dateTime);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "assman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "assman"
        },
        "content": "     * This method tests wether the Deadline class creates a deadline object as"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "assman"
        },
        "content": "     * specified."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "assman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "assman"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "assman"
        },
        "content": "    public void testDeadlineCreation() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "assman"
        },
        "content": "        String title \u003d deadline.getTitle();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "assman"
        },
        "content": "        assertEquals(title, \"test deadline\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "assman"
        },
        "content": "        assertEquals(deadline.by, dateTime);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "assman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "assman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "assman"
        },
        "content": "     * This method verifies the type of the task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "assman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "assman"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "assman"
        },
        "content": "    public void testTaskType() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "assman"
        },
        "content": "        assertEquals(deadline.getTaskType(), \"[D]\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "assman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "assman"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "assman": 37
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "assman"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "assman"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "assman"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "assman"
        },
        "content": " * This class implements the unit testing code for the Duke class"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "assman"
        },
        "content": " * "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "assman"
        },
        "content": " * @author Varun Parmar"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "assman"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "assman"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "assman"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "assman"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "assman"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "assman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "assman"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "assman"
        },
        "content": "    public void testAdd() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "assman"
        },
        "content": "        assertEquals(42, Integer.sum(19, 23));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "assman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "assman"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "assman"
        },
        "content": "    void justAnExample() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "assman"
        },
        "content": "        System.out.println(\"This test method should be run\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "assman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "assman"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "assman": 25
    }
  },
  {
    "path": "src/test/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "assman"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "assman"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "assman"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "assman"
        },
        "content": " * This class implements the unit testing code for the Task class"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "assman"
        },
        "content": " * "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "assman"
        },
        "content": " * @author Varun Parmar"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "assman"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "assman"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "assman"
        },
        "content": "    // @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "assman"
        },
        "content": "    // public void dummyTest() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "assman"
        },
        "content": "    // assertEquals(2, 2);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "assman"
        },
        "content": "    // }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "assman"
        },
        "content": "    // @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "assman"
        },
        "content": "    // public void testAdd() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "assman"
        },
        "content": "    // assertEquals(42, Integer.sum(19, 23));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "assman"
        },
        "content": "    // }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "assman"
        },
        "content": "    Task task \u003d new Task(\"test task\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "assman"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "assman"
        },
        "content": "    public void testTaskCreation() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "assman"
        },
        "content": "        String title \u003d task.getTitle();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "assman"
        },
        "content": "        assertEquals(title, \"test task\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "assman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "assman"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "assman"
        },
        "content": "    public void testMarkTaskAsDone() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "assman"
        },
        "content": "        task.setDone(true);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "assman"
        },
        "content": "        assertEquals(task.getDone(), true);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "assman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "assman"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "assman": 36
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "assman"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "assman"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "assman"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "assman"
        },
        "content": " * This class implements the unit testing code for the Todo class"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "assman"
        },
        "content": " * "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "assman"
        },
        "content": " * @author Varun Parmar"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "assman"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "assman"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "assman"
        },
        "content": "    Todo todo \u003d new Todo(\"test todo\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "assman"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "assman"
        },
        "content": "    public void testTodoCreation() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "assman"
        },
        "content": "        String title \u003d todo.getTitle();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "assman"
        },
        "content": "        assertEquals(title, \"test todo\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "assman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "assman"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "assman"
        },
        "content": "    public void testTaskType() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "assman"
        },
        "content": "        assertEquals(todo.getTaskType(), \"[T]\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "assman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "assman"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "assman"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "assman": 24
    }
  }
]

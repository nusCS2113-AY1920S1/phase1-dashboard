[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * Constructor for Deadline class with only description and by"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * @param description description of deadline task"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * @param by deadline of task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * Constructor for Deadline class"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * @param description description of deadline task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * @param isDone boolean storing whether the deadline task is completed"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * @param by deadline of task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    public Deadline(String description, boolean isDone, String by) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * Returns the deadline in a string format"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * @return deadline in a string format"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        return \"  [D]\" + super.toString() + \"(by: \" + by + \")\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Catherinetan99": 34
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    private static final String filePath \u003d \"C:\\\\Users\\\\Catherine Tan\\\\IdeaProjects\\\\duke\\\\data\\\\duke.txt\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        Storage.loadFile(filePath, taskList);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        Ui.sayHi();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        String input \u003d Ui.readIn();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        while(!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "            Parser parser \u003d new Parser(input, taskList);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "            parser.executeCmd(input, taskList);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "            Storage.updateFile(taskList);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "            input \u003d Ui.readIn();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        Ui.sayBye();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Catherinetan99": 15,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "public class DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * Prints out error statement when description of task is empty"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * @param taskType the type of task, eg todo, deadline, event"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    public void emptyDescription (String taskType) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        System.out.println(\"☹ OOPS!!! The description of a \" + taskType + \" cannot be empty.\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * Prints out error statement when input instruction is not recognised"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    public void invalidInput () {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * Prints out error statement when the input task number is empty or invalid"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    public void emptyTaskNo () {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        System.out.println(\"☹ OOPS!!! The task number cannot be empty/is not valid.\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Catherinetan99": 24
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * Constructor for Event class with only description and at"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * @param description description of event"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * @param at date and time of event"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * Constructor for Event class"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * @param description description of event"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * @param isDone boolean storing whether the event is completed"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * @param at date and time of event"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    public Event(String description, boolean isDone, String at) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * Returns event in a string format"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * @return event in a string format"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        return \"  [E]\" + super.toString() +\"(at: \" + at + \")\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Catherinetan99": 33
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    protected String input;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    protected TaskList taskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * Constructor for Parser class"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * @param input command input by user"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * @param taskList list of tasks currently"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    public Parser (String input, TaskList taskList) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * Executes command input by user"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * @param input command input by user"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * @param taskList list of tasks currently"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    public void executeCmd (String input, TaskList taskList) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        String command[] \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        switch (command[0]) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                taskList.listTask();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                taskList.markAsDone(command[1]);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                taskList.deleteTask(command[1]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                taskList.findTask(command[1]);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                taskList.addTask(\"todo\", command[1]);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                taskList.addTask(\"event\", command[1]);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                taskList.addTask(\"deadline\", command[1]);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                DukeException errorMessage \u003d new DukeException();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                errorMessage.invalidInput();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Catherinetan99": 49
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    private static final String filePath \u003d \"C:\\\\Users\\\\Catherine Tan\\\\IdeaProjects\\\\duke\\\\data\\\\duke.txt\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * Loads file contents saved from last use of application"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * @param filePath the location of the saved file"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * @param taskList an empty task list to contain the tasks in the file"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * @throws IOException throws exception if input file is invalid/cannot be accessed"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    public static void loadFile (String filePath, TaskList taskList) throws IOException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        BufferedReader br \u003d new BufferedReader(new FileReader(filePath));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        String st;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        while((st\u003dbr.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "            String[] phrase \u003d st.split(\"\\\\[\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "            boolean isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "            if (phrase[2].contains(\"✓\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                isDone \u003d true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "            String description \u003d phrase[2].substring(3);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "            if (phrase[1].startsWith(\"T\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                Todo todo \u003d new Todo(description, isDone);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                taskList.tasks.add(todo);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "            } else if (phrase[1].startsWith(\"D\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                String[] phrase2 \u003d phrase[2].split(\"\\\\(\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                int length \u003d phrase2[1].length();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                String by \u003d phrase2[1].substring(4, length);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                Deadline deadline \u003d new Deadline(description, isDone, by);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                taskList.tasks.add(deadline);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "            } else { // event"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                String[] phrase2 \u003d phrase[2].split(\"\\\\(\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                int length \u003d phrase2[1].length();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                String at \u003d phrase2[1].substring(4, length);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                Event event \u003d new Event(description, isDone, at);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                taskList.tasks.add(event);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * Creates a new file with the updated contents to replace the old file"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * @param taskList contains list of tasks currently"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    public static void updateFile (TaskList taskList) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "            PrintWriter outputStream \u003d new PrintWriter(f);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.tasks.size(); i++) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                Task task \u003d taskList.tasks.get(i);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                outputStream.println(task.toString());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "            outputStream.close();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Catherinetan99": 59
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * Constructor for Task class"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * @param description description of task"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * @param isDone boolean storing whether the task is completed"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * Constructor for Task class with only description input, isDone is set to false"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * @param description description of task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * Getter for isDone"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * @return whether the task is completed"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    public boolean isDone() { return isDone; }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * Returns the status icon of the task based on the state of isDone"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * @return the status icon of the task (tick or cross symbols)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * Getter for description"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * @return description of task"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    public String getDescription() { return description; }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * Sets isDone of task to true"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    public void markAsDone () {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * Returns the task in a string format"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * @return task in a string format"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Catherinetan99": 58
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * Constructor for TaskList class"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        this.tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * Getter for TaskList"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * @return list of tasks in ArrayList\u003cTask\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() { return tasks; }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * Getter for a specific task in TaskList"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * @param index the index of the task in the ArrayList"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * @return the task"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    public Task getSpecificTask(int index) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * Adds task into TaskList"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * @param taskType type of task, eg todo, deadline, event"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * @param description description of task"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    public void addTask(String taskType, String description) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        switch(taskType) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                    Todo todo \u003d new Todo(description);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                    tasks.add(todo);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                            + todo.toString() + \"\\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                            + \"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                    DukeException errorMessage \u003d new DukeException();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                    errorMessage.emptyDescription(\"todo\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                    String[] split \u003d description.split(\"\\\\/\", 2);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                        split[1] \u003d formatDate(split[1].substring(3));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                    } catch (ParseException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                        e.printStackTrace();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                    Deadline deadline \u003d new Deadline(split[0], split[1]);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                    tasks.add(deadline);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                            + deadline.toString() + \"\\n\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                            + \"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                    DukeException errorMessage \u003d new DukeException();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                    errorMessage.emptyDescription(\"deadline\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                    String[] split \u003d description.split(\"\\\\/\", 2);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                        split[1] \u003d formatDate(split[1].substring(3));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                    } catch (ParseException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                        e.printStackTrace();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                    Event event \u003d new Event(split[0], split[1]);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                    tasks.add(event);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                            + event.toString() + \"\\n\""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                            + \"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                    DukeException errorMessage \u003d new DukeException();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                    errorMessage.emptyDescription(\"event\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                }break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * Format input date of user"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * @param date input date of user"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * @return the formatted date"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * @throws ParseException throws exception if input date is in invalid format"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    public String formatDate(String date) throws ParseException {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        SimpleDateFormat outputFormat \u003d new SimpleDateFormat(\"dd MMMM yyyy HHmm\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        Date inputDate \u003d new SimpleDateFormat(\"d/MM/yyyy HHmm\").parse(date);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        String outputDate \u003d outputFormat.format(inputDate);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        String suffix;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        switch(outputDate.substring(0, 2)) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "            case \"11\":"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "            case \"12\":"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "            case \"13\":"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                suffix \u003d \"th of\";"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "            default: switch (outputDate.substring(1, 2)) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                case \"1\":"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                    suffix \u003d \"st of\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                case \"2\":"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                    suffix \u003d \"nd of\";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                case \"3\":"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                    suffix \u003d \"rd of\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                    suffix \u003d \"th of\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        outputDate \u003d outputDate.substring(0,2) + suffix + outputDate.substring(2);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        if (outputDate.substring(0, 1).equals(\"0\")) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "            outputDate \u003d outputDate.substring(1);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        int size \u003d outputDate.length();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        if (Integer.parseInt(outputDate.substring(size - 4, size - 2)) \u003e 12) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "            String hour \u003d \"\" + (Integer.parseInt(outputDate.substring(size - 4, size - 2)) - 12);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "            outputDate \u003d outputDate.substring(0, size - 4) + hour + \".\" +outputDate.substring(size - 2) + \"pm\";"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "            outputDate \u003d outputDate.substring(0, size - 2) + \".\" + outputDate.substring(size - 2) + \"am\";"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "            if (outputDate.substring(size - 4, size - 3).equals(\"0\")) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                outputDate \u003d outputDate.substring(0, size - 4) + outputDate.substring(size - 3);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        return outputDate;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * Deletes task from TaskList"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * @param taskNumber task number in TaskList"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    public void deleteTask(String taskNumber) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        int taskNo \u003d Integer.parseInt(taskNumber);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        Task t \u003d tasks.get(taskNo - 1);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        tasks.remove(t);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task: \\n\" +"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                t + \"\\n\" +"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                \"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * Finds task based on keyword input in TaskList"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * @param keyword keyword to find task"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    public void findTask (String keyword) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        ArrayList\u003cTask\u003e results \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        for (Task t: tasks) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "            if (t.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                results.add(t);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list: \");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        for (int j \u003d 0; j \u003c results.size(); j++) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "            Task task \u003d results.get(j);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "            System.out.println((j + 1) + \".\" + task.toString());"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * Marks the task as completed"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * @param taskNumber task number in TaskList"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    public void markAsDone (String taskNumber) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "            int taskNo \u003d Integer.parseInt(taskNumber);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "            Task task \u003d tasks.get(taskNo - 1);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "            System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "            System.out.println(\"  \" + task.toString());"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "            DukeException errorMessage \u003d new DukeException();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "            errorMessage.emptyTaskNo();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * Lists all the tasks in TaskList"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    public void listTask () {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        System.out.println(\"Here are the tasks in your list: \");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        for (int j \u003d 0; j \u003c tasks.size(); j++) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "            Task task \u003d tasks.get(j);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "            System.out.println((j + 1)+ \".\" + task.toString());"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Catherinetan99": 195
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * Constructor for Todo class with only description"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * @param description description of todo"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * Constructor for Todo class"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * @param description description of todo"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * @param isDone boolean storing whether the todo is completed"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * Returns todo in a string format"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * @return todo in a string format"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        return \"  [T]\" + super.toString();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Catherinetan99": 28
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * Prints out welcome statement"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    public static void sayHi () {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        System.out.println(\" ____        _        \\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke \\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "                + \"What can I do for you?\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * Prints out bye statement"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    public static void sayBye () {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * Reads in user input and returns user input"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     * @return String input by user"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    public static String readIn () {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        Scanner myInput \u003d new Scanner(System.in); // Create a scanner object"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        String myString \u003d myInput.nextLine(); // Read user input"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        return myString;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Catherinetan99": 34
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        assertEquals(2,2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Catherinetan99": 10
    }
  },
  {
    "path": "src/test/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    public void testMarkAsDoneMethod() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        Todo todo \u003d new Todo(\"finish assignment\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        todo.markAsDone();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        assertEquals(\"\\u2713\", todo.getStatusIcon());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    public void testGetDescription() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        Task task \u003d new Task(\"finish assignment\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        assertEquals(\"finish assignment\", task.description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Catherinetan99": 18
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    public void testTodoConstructor() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        TaskList test \u003d new TaskList();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        Todo todo \u003d new Todo(\"water the flowers\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "        assertEquals(\"  [T][✘] water the flowers\", todo.toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Catherinetan99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Catherinetan99": 12
    }
  }
]

[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "woblek"
        },
        "content": "public class Deadline extends TaskforDuke {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "woblek"
        },
        "content": "    protected Integer[] by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "woblek"
        },
        "content": "    public Deadline(String description, Integer[] by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "woblek"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "woblek"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "woblek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "woblek"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "woblek"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "woblek"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + getDate() + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "woblek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "woblek"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "woblek"
        },
        "content": "    public String getDate(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "woblek"
        },
        "content": "        String result \u003d by[0] + \"/\" + by[1] + \"/\" + by[2] + \" \" + by[3];"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "woblek"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "woblek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "woblek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "woblek": 23
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "woblek"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "woblek"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "woblek"
        },
        "content": "import java.util.Formatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "woblek"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "woblek"
        },
        "content": "    private static Parser prsr \u003d new Parser();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "woblek"
        },
        "content": "    private static Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "woblek"
        },
        "content": "    private static Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "woblek"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "woblek"
        },
        "content": "        int counterTaskList \u003d 0;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "woblek"
        },
        "content": "        ArrayList\u003cTaskforDuke\u003e taskList \u003d new ArrayList\u003cTaskforDuke\u003e(0);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "woblek"
        },
        "content": "        // Get the file"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "woblek"
        },
        "content": "        File f \u003d new File(\"C:\\\\Users\\\\Lee Raiyan\\\\Documents\\\\1. NUS\\\\Semester 3\\\\CS2113T Software Engineering\\\\duke\\\\data\\\\dukedata.txt\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "woblek"
        },
        "content": "        // Check if the specified file"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "woblek"
        },
        "content": "        // Exists or not"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "woblek"
        },
        "content": "        if (f.exists()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "woblek"
        },
        "content": "            taskList \u003d storage.load();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "woblek"
        },
        "content": "            counterTaskList \u003d storage.counterTaskList;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "woblek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "woblek"
        },
        "content": "        else"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "woblek"
        },
        "content": "            System.out.println(\"Does not Exists\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \"     ____        _        \\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"    |  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"    | | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"    | |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"    |____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"    Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "woblek"
        },
        "content": "        System.out.println(\"    __________________________________________________________________________________________\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "woblek"
        },
        "content": "        System.out.println(\"    Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "woblek"
        },
        "content": "        System.out.println(\"    What can I do for you?\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "woblek"
        },
        "content": "        System.out.println(\"    __________________________________________________________________________________________\\n\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "woblek"
        },
        "content": "        String s \u003d \"null\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "woblek"
        },
        "content": "        while(true){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "woblek"
        },
        "content": "            Scanner myObj \u003d new Scanner(System.in);  // Create a Scanner object"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "woblek"
        },
        "content": "            s \u003d myObj.nextLine();  // Read user input"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "woblek"
        },
        "content": "            if (s.equals(\"bye\")){"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "woblek"
        },
        "content": "                //save all data into text file"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "woblek"
        },
        "content": "                createFile g \u003d new createFile();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "woblek"
        },
        "content": "                g.openFile();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "woblek"
        },
        "content": "                g.addRecords(counterTaskList,taskList);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "woblek"
        },
        "content": "                g.closeFile();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "woblek"
        },
        "content": "                //print goodbye message"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "woblek"
        },
        "content": "                System.out.println(\"    __________________________________________________________________________________________\\n\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "woblek"
        },
        "content": "                System.out.println(\"    Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "woblek"
        },
        "content": "                System.out.println(\"    __________________________________________________________________________________________\\n\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "woblek"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "woblek"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "woblek"
        },
        "content": "            else if (s.equals(\"list\")){"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "woblek"
        },
        "content": "                if(counterTaskList\u003e0) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "woblek"
        },
        "content": "                    System.out.println(\"    __________________________________________________________________________________________\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "woblek"
        },
        "content": "                    System.out.println(\"    Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "woblek"
        },
        "content": "                    for (int i \u003d 0; i \u003c counterTaskList; i++) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "woblek"
        },
        "content": "                        System.out.println(\"    \" + (i + 1) + \". \" + taskList.get(i).toString());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "woblek"
        },
        "content": "                        //                    System.out.println(\"    \" + (i+1) + \". [\" + taskList[i].type + \"][\" + taskList[i].getStatusIcon() + \"] \" + taskList[i].description + \"\\n\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "woblek"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "woblek"
        },
        "content": "                    System.out.println(\"    __________________________________________________________________________________________\\n\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "woblek"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "woblek"
        },
        "content": "                else{"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "woblek"
        },
        "content": "                    System.out.println(\"    __________________________________________________________________________________________\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "woblek"
        },
        "content": "                    System.out.println(\"    Your list is empty!\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "woblek"
        },
        "content": "                    System.out.println(\"    __________________________________________________________________________________________\\n\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "woblek"
        },
        "content": "                }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "woblek"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "woblek"
        },
        "content": "            else if (s.contains(\"done\")){"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "woblek"
        },
        "content": "                int indexDone \u003d Integer.parseInt(s.replaceAll(\"[\\\\D]\", \"\"));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "woblek"
        },
        "content": "                if(indexDone \u003e 0) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "woblek"
        },
        "content": "                    taskList.get(indexDone - 1).setDone();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "woblek"
        },
        "content": "                    System.out.println(\"    __________________________________________________________________________________________\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "woblek"
        },
        "content": "                    System.out.println(\"    Nice! I\u0027ve marked this task as done: \" + \"\\n\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "woblek"
        },
        "content": "                    System.out.println(\"    \" + taskList.get(indexDone - 1).toString());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "woblek"
        },
        "content": "//                    System.out.println(\"    \" + taskList[indexDone - 1].getStatusIcon() + \" \" + taskList[indexDone - 1].description + \"\\n\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "woblek"
        },
        "content": "                    System.out.println(\"    __________________________________________________________________________________________\\n\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "woblek"
        },
        "content": "                }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "woblek"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "woblek"
        },
        "content": "            else if(s.contains(\"delete\")){"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "woblek"
        },
        "content": "                if(taskList.size() \u003e 0){"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "woblek"
        },
        "content": "                    int indexDelete \u003d Integer.parseInt(s.replaceAll(\"[\\\\D]\", \"\"));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "woblek"
        },
        "content": "                    String sDelete \u003d taskList.get(indexDelete-1).toString();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "woblek"
        },
        "content": "                    taskList.remove(indexDelete - 1);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "woblek"
        },
        "content": "                    counterTaskList--;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "woblek"
        },
        "content": "                    //inform user of deletion"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "woblek"
        },
        "content": "                    System.out.println(\"    __________________________________________________________________________________________\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "woblek"
        },
        "content": "                    System.out.println(\"    Noted! I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "woblek"
        },
        "content": "                    System.out.println(\"    \" + sDelete);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "woblek"
        },
        "content": "                    System.out.println(\"    You now have \" + taskList.size() + \" tasks in the list\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "woblek"
        },
        "content": "                    System.out.println(\"    __________________________________________________________________________________________\\n\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "woblek"
        },
        "content": "                }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "woblek"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "woblek"
        },
        "content": "            else if ((s.contains(\"todo\"))){"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "woblek"
        },
        "content": "                //to check if the string is empty"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "woblek"
        },
        "content": "                if(prsr.isEmpty(s)){"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "woblek"
        },
        "content": "                    ui.dialogueEmpty(s);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "woblek"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "woblek"
        },
        "content": "                }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "woblek"
        },
        "content": "                //adding the object to the object array"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "woblek"
        },
        "content": "                String sExtracted \u003d s.replaceAll(\"todo \", \"\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "woblek"
        },
        "content": "                taskList.add(new Todo(sExtracted));"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "woblek"
        },
        "content": "                counterTaskList++;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "woblek"
        },
        "content": "                System.out.println(\"    __________________________________________________________________________________________\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "woblek"
        },
        "content": "                System.out.println(\"    Got it. I\u0027ve added this task: \" + sExtracted + \"\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "woblek"
        },
        "content": "                System.out.println(\"      \" + taskList.get(counterTaskList - 1).toString());"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "woblek"
        },
        "content": "                System.out.println(\"    You now have \" + counterTaskList + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "woblek"
        },
        "content": "                System.out.println(\"    __________________________________________________________________________________________\\n\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "woblek"
        },
        "content": "            }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "woblek"
        },
        "content": "            else if (s.contains(\"deadline\")){"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "woblek"
        },
        "content": "                //to check if the string is empty"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "woblek"
        },
        "content": "                if(prsr.isEmpty(s)){"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "woblek"
        },
        "content": "                    ui.dialogueEmpty(s);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "woblek"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "woblek"
        },
        "content": "                }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "woblek"
        },
        "content": "                //adding the object to the object array"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "woblek"
        },
        "content": "                String sExtracted \u003d s.replaceAll(\"deadline \", \"\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "woblek"
        },
        "content": "                String[] details \u003d sExtracted.split(\"/by \", 2);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "woblek"
        },
        "content": "                String[] dateString \u003d details[1].split(\"/\", 3);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "woblek"
        },
        "content": "                String[] timeString \u003d dateString[2].split(\" \", 2);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "woblek"
        },
        "content": "                Integer[] date \u003d new Integer[4];"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "woblek"
        },
        "content": "                date[0] \u003d Integer.parseInt(dateString[0]);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "woblek"
        },
        "content": "                date[1] \u003d Integer.parseInt(dateString[1]);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "woblek"
        },
        "content": "                date[2] \u003d Integer.parseInt(timeString[0]);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "woblek"
        },
        "content": "                date[3] \u003d Integer.parseInt(timeString[1]);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "woblek"
        },
        "content": "                taskList.add(new Deadline(details[0], date));"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "woblek"
        },
        "content": "                counterTaskList++;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "woblek"
        },
        "content": "                //inform user of the new record"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "woblek"
        },
        "content": "                System.out.println(\"    __________________________________________________________________________________________\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "woblek"
        },
        "content": "                System.out.println(\"    Got it. I\u0027ve added this task: \" + details[0] + \"\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "woblek"
        },
        "content": "                System.out.println(\"      \" + taskList.get(counterTaskList-1).toString());"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "woblek"
        },
        "content": "                System.out.println(\"    You now have \" + counterTaskList + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "woblek"
        },
        "content": "                System.out.println(\"    __________________________________________________________________________________________\\n\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "woblek"
        },
        "content": "            }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "woblek"
        },
        "content": "            else if(s.contains(\"event\")){"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "woblek"
        },
        "content": "                //to check if the string is empty"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "woblek"
        },
        "content": "                if(prsr.isEmpty(s)){"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "woblek"
        },
        "content": "                    ui.dialogueEmpty(s);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "woblek"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "woblek"
        },
        "content": "                }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "woblek"
        },
        "content": "                //adding the object to the object array"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "woblek"
        },
        "content": "                String sExtracted \u003d s.replaceAll(\"event\", \"\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "woblek"
        },
        "content": "                String[] details \u003d sExtracted.split(\"/at \", 2);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "woblek"
        },
        "content": "                String[] dateString \u003d details[1].split(\"/\", 3);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "woblek"
        },
        "content": "                String[] timeString \u003d dateString[2].split(\" \", 2);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "woblek"
        },
        "content": "                Integer[] date \u003d new Integer[4];"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "woblek"
        },
        "content": "                date[0] \u003d Integer.parseInt(dateString[0]);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "woblek"
        },
        "content": "                date[1] \u003d Integer.parseInt(dateString[1]);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "woblek"
        },
        "content": "                date[2] \u003d Integer.parseInt(timeString[0]);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "woblek"
        },
        "content": "                date[3] \u003d Integer.parseInt(timeString[1]);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "woblek"
        },
        "content": "                taskList.add(new Event(details[0], date));"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "woblek"
        },
        "content": "                counterTaskList++;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "woblek"
        },
        "content": "                //inform user of new record"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "woblek"
        },
        "content": "                System.out.println(\"    __________________________________________________________________________________________\");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "woblek"
        },
        "content": "                System.out.println(\"    Got it. I\u0027ve added this task: \" + details[0] + \"\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "woblek"
        },
        "content": "                System.out.println(\"      \" + taskList.get(counterTaskList-1).toString());"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "woblek"
        },
        "content": "                System.out.println(\"    You now have \" + counterTaskList + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "woblek"
        },
        "content": "                System.out.println(\"    __________________________________________________________________________________________\\n\");"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "woblek"
        },
        "content": "            }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "woblek"
        },
        "content": "            else if(s.contains(\"find\")){"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "woblek"
        },
        "content": "                String[] toFind \u003d s.split(\" \", 2);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "woblek"
        },
        "content": "                System.out.println(\"    __________________________________________________________________________________________\");"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "woblek"
        },
        "content": "                System.out.println(\"    Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "woblek"
        },
        "content": "                for(int i \u003d 0; i \u003c counterTaskList; i++){"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "woblek"
        },
        "content": "                    if(taskList.get(i).description.contains(toFind[1])){"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "woblek"
        },
        "content": "                        System.out.println(\"    \" + (i + 1) + \". \" + taskList.get(i).toString());"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "woblek"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "woblek"
        },
        "content": "                }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "woblek"
        },
        "content": "                System.out.println(\"    __________________________________________________________________________________________\\n\");"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "woblek"
        },
        "content": "            }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "woblek"
        },
        "content": "            else{"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "woblek"
        },
        "content": "                System.out.println(\"    __________________________________________________________________________________________\");"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "woblek"
        },
        "content": "                System.out.println(\"    ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "woblek"
        },
        "content": "                System.out.println(\"    __________________________________________________________________________________________\\n\");"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "woblek"
        },
        "content": "            }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "woblek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "woblek": 209,
      "-": 9
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "woblek"
        },
        "content": "public class Event extends TaskforDuke {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "woblek"
        },
        "content": "    protected Integer[] at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "woblek"
        },
        "content": "    public Event(String description, Integer[] at) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "woblek"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "woblek"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "woblek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "woblek"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "woblek"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "woblek"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + getDate() + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "woblek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "woblek"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "woblek"
        },
        "content": "    public String getDate(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "woblek"
        },
        "content": "        String result \u003d at[0] + \"/\" + at[1] + \"/\" + at[2] + \" \" + at[3];"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "woblek"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "woblek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "woblek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "woblek": 20
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "woblek"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "woblek"
        },
        "content": "    public String parseInputTodo(String s){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "woblek"
        },
        "content": "        return s.replaceAll(\"todo \", \"\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "woblek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "woblek"
        },
        "content": "    public boolean isEmpty(String s){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "woblek"
        },
        "content": "        Character first \u003d s.charAt(0);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "woblek"
        },
        "content": "        if(first.equals(\u0027t\u0027)){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "woblek"
        },
        "content": "            String checker0 \u003d s.replaceAll(\"todo\", \"\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "woblek"
        },
        "content": "            String checker1 \u003d checker0.replaceAll(\" \", \"\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "woblek"
        },
        "content": "            return checker1.isEmpty();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "woblek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "woblek"
        },
        "content": "        else if(first.equals(\u0027d\u0027)){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "woblek"
        },
        "content": "            String checker0 \u003d s.replaceAll(\"deadline\", \"\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "woblek"
        },
        "content": "            String checker1 \u003d checker0.replaceAll(\" \", \"\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "woblek"
        },
        "content": "            return checker1.isEmpty();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "woblek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "woblek"
        },
        "content": "        else if(first.equals(\u0027e\u0027)){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "woblek"
        },
        "content": "            String checker0 \u003d s.replaceAll(\"event\", \"\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "woblek"
        },
        "content": "            String checker1 \u003d checker0.replaceAll(\" \", \"\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "woblek"
        },
        "content": "            return checker1.isEmpty();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "woblek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "woblek"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "woblek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "woblek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "woblek": 32
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "woblek"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "woblek"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "woblek"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "woblek"
        },
        "content": "    public Integer counterTaskList \u003d 0;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "woblek"
        },
        "content": "    public ArrayList\u003cTaskforDuke\u003e load() throws IOException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "woblek"
        },
        "content": "        ArrayList\u003cTaskforDuke\u003e taskList \u003d new ArrayList\u003cTaskforDuke\u003e(0);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "woblek"
        },
        "content": "        File file \u003d new File(\"C:\\\\Users\\\\Lee Raiyan\\\\Documents\\\\1. NUS\\\\Semester 3\\\\CS2113T Software Engineering\\\\duke\\\\data\\\\dukedata.txt\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "woblek"
        },
        "content": "        BufferedReader br \u003d new BufferedReader(new FileReader(file));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "woblek"
        },
        "content": "        String st;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "woblek"
        },
        "content": "        while ((st \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "woblek"
        },
        "content": "            Character first \u003d st.charAt(0);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "woblek"
        },
        "content": "            if (first.equals(\u0027T\u0027)){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "woblek"
        },
        "content": "                //splitting string"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "woblek"
        },
        "content": "                String[] details \u003d st.split(\",\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "woblek"
        },
        "content": "                //create todo and add task"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "woblek"
        },
        "content": "                taskList.add(new Todo(details[2]));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "woblek"
        },
        "content": "                if(details[1].equals(\"true\")){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "woblek"
        },
        "content": "                    taskList.get(counterTaskList).setDone();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "woblek"
        },
        "content": "                }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "woblek"
        },
        "content": "                counterTaskList++;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "woblek"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "woblek"
        },
        "content": "            else if (first.equals(\u0027D\u0027)){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "woblek"
        },
        "content": "                //split string"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "woblek"
        },
        "content": "                String[] details \u003d st.split(\",\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "woblek"
        },
        "content": "                String[] dateString \u003d details[3].split(\"/\", 3);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "woblek"
        },
        "content": "                String[] timeString \u003d dateString[2].split(\" \", 2);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "woblek"
        },
        "content": "                Integer[] date \u003d new Integer[4];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "woblek"
        },
        "content": "                date[0] \u003d Integer.parseInt(dateString[0]);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "woblek"
        },
        "content": "                date[1] \u003d Integer.parseInt(dateString[1]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "woblek"
        },
        "content": "                date[2] \u003d Integer.parseInt(timeString[0]);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "woblek"
        },
        "content": "                date[3] \u003d Integer.parseInt(timeString[1]);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "woblek"
        },
        "content": "                //create and add deadline to tasklist"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "woblek"
        },
        "content": "                taskList.add(new Deadline(details[2], date));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "woblek"
        },
        "content": "                if(details[1].equals(\"true\")){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "woblek"
        },
        "content": "                    taskList.get(counterTaskList).setDone();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "woblek"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "woblek"
        },
        "content": "                //update counterTasklist"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "woblek"
        },
        "content": "                counterTaskList++;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "woblek"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "woblek"
        },
        "content": "            else if (first.equals(\u0027E\u0027)){"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "woblek"
        },
        "content": "                //split string"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "woblek"
        },
        "content": "                String[] details \u003d st.split(\",\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "woblek"
        },
        "content": "                String[] dateString \u003d details[3].split(\"/\", 3);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "woblek"
        },
        "content": "                String[] timeString \u003d dateString[2].split(\" \", 2);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "woblek"
        },
        "content": "                Integer[] date \u003d new Integer[4];"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "woblek"
        },
        "content": "                date[0] \u003d Integer.parseInt(dateString[0]);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "woblek"
        },
        "content": "                date[1] \u003d Integer.parseInt(dateString[1]);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "woblek"
        },
        "content": "                date[2] \u003d Integer.parseInt(timeString[0]);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "woblek"
        },
        "content": "                date[3] \u003d Integer.parseInt(timeString[1]);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "woblek"
        },
        "content": "                //create and add deadline to tasklist"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "woblek"
        },
        "content": "                taskList.add(new Event(details[2], date));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "woblek"
        },
        "content": "                if(details[1].equals(\"true\")){"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "woblek"
        },
        "content": "                    taskList.get(counterTaskList).setDone();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "woblek"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "woblek"
        },
        "content": "                //update counterTasklist"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "woblek"
        },
        "content": "                counterTaskList++;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "woblek"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "woblek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "woblek"
        },
        "content": "        br.close();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "woblek"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "woblek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "woblek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "woblek": 81
    }
  },
  {
    "path": "src/main/java/TaskforDuke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "woblek"
        },
        "content": "public class TaskforDuke {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "woblek"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "woblek"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "woblek"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "woblek"
        },
        "content": "    public TaskforDuke(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "woblek"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "woblek"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "woblek"
        },
        "content": "//        this.type \u003d \"T\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "woblek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "woblek"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "woblek"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "woblek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "woblek"
        },
        "content": "    public String getDescription(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "woblek"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "woblek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "woblek"
        },
        "content": "    public String getDate(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "woblek"
        },
        "content": "        return \"There is no date for Todo\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "woblek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "woblek"
        },
        "content": "    public void setDone(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "woblek"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "woblek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "woblek"
        },
        "content": "//    public void setType(String s){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "woblek"
        },
        "content": "//        type \u003d s;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "woblek"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "woblek"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "woblek"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + getDescription() ;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "woblek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "woblek"
        },
        "content": "    //..."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "woblek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "woblek": 35
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "woblek"
        },
        "content": "public class Todo extends TaskforDuke {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "woblek"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "woblek"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "woblek"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "woblek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "woblek"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "woblek"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "woblek"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "woblek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "woblek"
        },
        "content": "//    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "woblek"
        },
        "content": "//    public void setType(String s){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "woblek"
        },
        "content": "//        super.setType(s);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "woblek"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "woblek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "woblek": 18
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "woblek"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "woblek"
        },
        "content": "    public void dialogueEmpty(String s){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "woblek"
        },
        "content": "        Character first \u003d s.charAt(0);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "woblek"
        },
        "content": "        if(first.equals(\u0027t\u0027)){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "woblek"
        },
        "content": "            System.out.println(\"    __________________________________________________________________________________________\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "woblek"
        },
        "content": "            System.out.println(\"    ☹ OOPS!!! The description of a todo cannot be empty!\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "woblek"
        },
        "content": "            System.out.println(\"    __________________________________________________________________________________________\\n\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "woblek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "woblek"
        },
        "content": "        else if(first.equals(\u0027d\u0027)){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "woblek"
        },
        "content": "            System.out.println(\"    __________________________________________________________________________________________\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "woblek"
        },
        "content": "            System.out.println(\"    ☹ OOPS!!! The description of a deadline cannot be empty!\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "woblek"
        },
        "content": "            System.out.println(\"    __________________________________________________________________________________________\\n\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "woblek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "woblek"
        },
        "content": "        else if(first.equals(\u0027e\u0027)){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "woblek"
        },
        "content": "            System.out.println(\"    __________________________________________________________________________________________\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "woblek"
        },
        "content": "            System.out.println(\"    ☹ OOPS!!! The description of an event cannot be empty!\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "woblek"
        },
        "content": "            System.out.println(\"    __________________________________________________________________________________________\\n\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "woblek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "woblek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "woblek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "woblek": 24
    }
  },
  {
    "path": "src/main/java/createFile.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "woblek"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "woblek"
        },
        "content": "import java.lang.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "woblek"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "woblek"
        },
        "content": "public class createFile {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "woblek"
        },
        "content": "    private Formatter x;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "woblek"
        },
        "content": "    public void openFile(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "woblek"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "woblek"
        },
        "content": "            x \u003d new Formatter(\"C:\\\\Users\\\\Lee Raiyan\\\\Documents\\\\1. NUS\\\\Semester 3\\\\CS2113T Software Engineering\\\\duke\\\\data\\\\dukedata.txt\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "woblek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "woblek"
        },
        "content": "        catch (Exception e){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "woblek"
        },
        "content": "            System.out.println(\"Error Opening the File!!!\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "woblek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "woblek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "woblek"
        },
        "content": "    public void addRecords(Integer a, ArrayList\u003cTaskforDuke\u003e taskList){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "woblek"
        },
        "content": "        for (int i \u003d 0; i \u003c a; i++) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "woblek"
        },
        "content": "            Character c1 \u003d taskList.get(i).toString().charAt(1);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "woblek"
        },
        "content": "            if(c1.equals(\u0027T\u0027)){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "woblek"
        },
        "content": "                x.format(\"T,%s,%s\\n\", String.valueOf(taskList.get(i).isDone), taskList.get(i).description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "woblek"
        },
        "content": "            }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "woblek"
        },
        "content": "            if(c1.equals(\u0027D\u0027)){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "woblek"
        },
        "content": "                x.format(\"D,%s,%s,%s\\n\", String.valueOf(taskList.get(i).isDone), taskList.get(i).description, taskList.get(i).getDate());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "woblek"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "woblek"
        },
        "content": "            if(c1.equals(\u0027E\u0027)){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "woblek"
        },
        "content": "                x.format(\"E,%s,%s,%s\\n\", String.valueOf(taskList.get(i).isDone), taskList.get(i).description, taskList.get(i).getDate());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "woblek"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "woblek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "woblek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "woblek"
        },
        "content": "    public void closeFile(){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "woblek"
        },
        "content": "        x.close();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "woblek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "woblek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "woblek": 38
    }
  },
  {
    "path": "src/main/java/fileReader.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "woblek"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "woblek"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "woblek"
        },
        "content": "public class fileReader {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "woblek"
        },
        "content": "    public void openFile(){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "woblek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "woblek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "woblek": 9
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "woblek"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "woblek"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "woblek"
        },
        "content": "class EventTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "woblek"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "woblek"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "woblek"
        },
        "content": "        Integer[] date \u003d {05,10,2019,1800};"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "woblek"
        },
        "content": "        String eventName \u003d \"watch movies with friends\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "woblek"
        },
        "content": "        Event event \u003d new Event(eventName, date);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "woblek"
        },
        "content": "        assertEquals(\"[E][✘] watch movies with friends (at: 5/10/2019 1800)\", event.toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "woblek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "woblek"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "woblek"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "woblek"
        },
        "content": "    void getDate() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "woblek"
        },
        "content": "        Integer[] date \u003d {05,10,2019,1800};"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "woblek"
        },
        "content": "        String eventName \u003d \"watch movies with friends\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "woblek"
        },
        "content": "        Event event \u003d new Event(eventName, date);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "woblek"
        },
        "content": "        assertEquals(\"5/10/2019 1800\", event.getDate());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "woblek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "woblek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "woblek": 23
    }
  }
]

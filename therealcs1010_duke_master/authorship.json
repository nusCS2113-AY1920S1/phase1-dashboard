[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    modules \u003d [\u0027javafx.controls\u0027, \u0027javafx.fxml\u0027]"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therealcs1010": 6,
      "-": 17
    }
  },
  {
    "path": "src/main/java/Actions.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "public enum Actions {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    LIST,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    EVENT,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    DONE,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    FIND,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    DELETE,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    BYE"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      }
    ],
    "authorContributionMap": {
      "therealcs1010": 15
    }
  },
  {
    "path": "src/main/java/Classes/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "package Classes;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    private Date myDeadline \u003d new Date();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    public Deadline(String description, String type, String by) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        super(description, type);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            setDate(this.by);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        return \"[D][\" + super.getStatusIcon() + \"] \" + super.getDescription() + \" (by: \" + this.by + \")\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    public String doneBy() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    private void setDate(String a) throws ParseException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "      SimpleDateFormat f1 \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "      this.myDeadline \u003d f1.parse(this.by);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therealcs1010": 37
    }
  },
  {
    "path": "src/main/java/Classes/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "package Classes;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    String at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    Date myTime \u003d new Date();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    public Event(String description, String type, String at) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        super(description, type);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            setDate(this.at);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        return \"[E][\" + super.getStatusIcon() + \"] \" + super.getDescription() + \" (at: \" + this.at + \")\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    public String doneAt() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        return this.at;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    private void setDate(String a) throws ParseException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        SimpleDateFormat f1 \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        this.myTime \u003d f1.parse(this.at);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therealcs1010": 33
    }
  },
  {
    "path": "src/main/java/Classes/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "package Classes;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    public Task(String description, String type) {  //Constructor which sets up the description of the task and sets it to undone"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        return this.description; //returns the description"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        this.isDone \u003d true; //set as done"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    public boolean checkDone() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        return this.isDone; //checks if done."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    public String checkType() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        return this.type;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        return \"[T][\" + this.getStatusIcon() + \"] \" + this.getDescription();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    //..."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therealcs1010": 38
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "import Classes.Deadline;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "import Classes.Event;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "import Classes.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "//    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "//    public void start(Stage stage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "//        Label helloWorld \u003d new Label(\"Hello World!\");// Creating a new Label control"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "//        helloWorld.accessibleTextProperty"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "//        Scene scene \u003d new Scene(helloWorld); // Setting the scene to be our Label"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "//        Scene scene2 \u003d new Scene(new Label(\"WOWOWOWO\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "//        stage.setScene(scene); // Setting the stage to show our screen"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "//        stage.show();// Render the stage."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "//        stage.setScene(scene2);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "//        stage.show();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    private static ArrayList\u003cTask\u003e messages \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    private static PrintStream out;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    static {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            out \u003d new PrintStream(System.out, true, \"UTF-8\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        } catch (UnsupportedEncodingException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    private static Scanner s \u003d new Scanner(System.in); //Scans in input from cmd line"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @param args"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @throws FileNotFoundException"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * @throws UnsupportedEncodingException"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * This main method prints the welcome message, then reads in the input from the file to determine the previous inputs,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * The scanner class then reads in any input on the terminal before determining action."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     * Upon receiving \"goodbye\", it will update the file before terminating the program."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    public static void main(String[] args) throws FileNotFoundException, UnsupportedEncodingException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        new Printer(messages, \"welcome\"); //prints the welcome message"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        readFiles(); //reads in previous file input"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            String formatLine \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            System.out.println(formatLine);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            String action \u003d s.next(); //reads in string if there is any"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            if (action.equals(\"bye\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                updateDatabase();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                new Printer(messages, \"bye\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                s.close();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            System.out.println(formatLine);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            decideAction(action);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    private static void decideAction(String a) throws UnsupportedEncodingException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        Actions currentAction;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            currentAction \u003d Actions.valueOf(a.toUpperCase());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            out.println(\"\\tOOPS!!! I\u0027m sorry, but I don\u0027t know what that means.\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            s.nextLine();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        switch(currentAction) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            case LIST:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                new Printer(messages, \"list\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                createTodo();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                createEvent();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                createDeadline();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            case DONE:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                setItem();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            case FIND:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                findItem();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            case DELETE:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                deleteItem();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    private static void createDeadline() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        String item;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        String [] arr;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        item \u003d s.nextLine();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            arr \u003d item.split(\"/by \");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            arr[0] \u003d arr[0].trim();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            Deadline newDeadline \u003d new Deadline(arr[0], \"D\", arr[1]);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            messages.add(newDeadline);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            // printAdded(newDeadline);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            System.out.println(\"\\tOOPS!!! The format is unreadable.\\n\" +"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                    \"\\tPlease follow this format:\\n\" +"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                    \"\\tdeadline [Event] /by [Deadline]\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    private static void createEvent() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        String item;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        String [] arr;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        item \u003d s.nextLine();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            arr \u003d item.split(\"/at \");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            arr[0] \u003d arr[0].trim();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            Event newEvent \u003d new Event(arr[0], \"E\", arr[1]);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            messages.add(newEvent);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            //  new Printer(out, messages, newEvent);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            System.out.println(\"\\tOOPS!!! The format is unreadable.\\n\" +"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                    \"\\tPlease follow this format:\\n\" +"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                    \"\\tevent [Event] /at [Time period]\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    private static void createTodo() {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        String item;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        String [] arr;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        item \u003d s.nextLine();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        item \u003d item.trim();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        Task newTask \u003d new Task(item, \"T\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        messages.add(newTask);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        out.println(\"\\tNew task added:\\n\\t\" + newTask.toString());"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    private static void setItem() {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        int val \u003d s.nextInt();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        val--;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        Task atHand \u003d messages.get(val);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        atHand.setDone();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        messages.set(val, atHand);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        out.println(\"\\tNoted. I\u0027ve set task as done:\\n\\t\" + atHand.toString());"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    private static void deleteItem() {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        int val \u003d s.nextInt();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        val --;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        Task x \u003d messages.get(val);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        messages.remove(val);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        out.println(\"\\tNoted. I\u0027ve removed this task:\\n\\t\" + x.toString() + \"\\n\\tNow you have \" + messages.size() + \" tasks in your list\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    private static void findItem() {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        String item \u003d s.next();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        ArrayList\u003cString\u003e found \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        for (Task i : messages) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            String x \u003d i.getDescription();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            if (x.contains(item)) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                found.add(i.toString());"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        out.println(\"\\tHere are the matching tasks in your list.\\n\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        int start \u003d 1;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        for (String i : found) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            out.println(\"\\t\" + start + \".\" + i);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            start ++;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     *"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     *  Important functions fundamental to the program IO."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     *"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "     */"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    private static void readFiles() throws FileNotFoundException {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        FileReader myTasks \u003d new FileReader(\"src/duketask.txt\");"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        Scanner s \u003d new Scanner(myTasks);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        while (s.hasNextLine()) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            String input \u003d s.nextLine();"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            String [] arr \u003d input.split(\"/\");"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            switch(arr[0]) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                case \"T\" :"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                    Task a \u003d new Task(arr[2], \"T\");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                    if (arr[1].equals(\"1\")){"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                        a.setDone();"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                    messages.add(a);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                case \"D\" :"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                    Deadline b \u003d new Deadline(arr[2], \"D\", arr[3]);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                    if (arr[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                        b.setDone();"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                    messages.add(b);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                case \"E\" :"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                    Event c \u003d new Event(arr[2], \"E\", arr[3]);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                    if (arr[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                        c.setDone();"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                    messages.add(c);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        s.close();"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    private static void updateDatabase() {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        try (FileWriter out \u003d new FileWriter(\"src/duketask.txt\", false)) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            for (Task i : messages) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                switch (i.checkType()) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                    case \"T\" :"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                        out.write(\"T/\");"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                    case \"D\" :"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                        out.write(\"D/\");"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                    case \"E\" :"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                        out.write(\"E/\");"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                } //Checks the type of task"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                if (i.checkDone())"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                    out.write(\"1/\");"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                else"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                    out.write(\"0/\");"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                out.write(i.getDescription());"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                if (i.checkType().equals(\"D\")) {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                    Deadline temp \u003d (Deadline) i;"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                    out.write(\"/\" + temp.doneBy());"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                else if (i.checkType().equals(\"E\")) {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                    Event temp \u003d (Event) i;"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                    out.write(\"/\" + temp.doneAt());"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                out.write(\"\\n\");"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            System.out.println(\"\\tUnable to store events in database\");"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therealcs1010": 265,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "package PACKAGE_NAME;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "public class DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therealcs1010": 4
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "//    public static void main(String[] args) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "//        Application.launch(Duke.class, args);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therealcs1010": 11
    }
  },
  {
    "path": "src/main/java/Printer.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "import Classes.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "public class Printer {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    private static PrintStream out \u003d new PrintStream(System.out, true, StandardCharsets.UTF_8);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    public Printer(ArrayList\u003cTask\u003e messages, String a) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        switch (a) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            case \"welcome\" :"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                out.println(\"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                        \"     Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                        \"     What can I do for you?\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            case \"bye\" :"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                out.println(\"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                        \"     Bye. Hope to see you again soon!\\n\" +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                        \"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "            case \"list\" :"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                int i \u003d 1;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                for (Task x : messages) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                    out.println(\"\\t\" + i + \".\" + x.toString());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                    i++;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "therealcs1010"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therealcs1010": 35
    }
  }
]

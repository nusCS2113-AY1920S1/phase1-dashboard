[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limsiying"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limsiying"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    implementation \u0027com.google.code.gson:gson:2.8.5\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limsiying"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limsiying"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limsiying"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limsiying"
        },
        "content": "run {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limsiying"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limsiying": 16,
      "-": 13
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limsiying"
        },
        "content": "import Duke.TimedTask;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limsiying"
        },
        "content": "import Duke.UserInterface;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limsiying"
        },
        "content": "import Duke.Utility.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limsiying"
        },
        "content": "import Duke.Utility.Tokenizer;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limsiying"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limsiying"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    Command() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     * executes user command"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     * @param command not the command itself but actually the whole user input"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     * @param task object that stores past to do list items"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     * @throws DukeException thrown if invalid command is given"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    void userCommand(String command, List\u003cTimedTask\u003e task) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        Tokenizer tokenizer \u003d new Tokenizer(command); // breakdown user input"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        switch (command.split(\" \")[0]) { // process desired action"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                System.out.println(\"\\tBye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                UserInterface.list(task);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                    int taskNum \u003d Integer.parseInt(command.replaceAll(\"[^\\\\d-]\", \"\")) - 1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                    if ((command.split(\" \")[0]).equals(\"done\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                        task.get(taskNum).setDone();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                        System.out.print(UserInterface.done(task.get(taskNum)));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                        System.out.print(UserInterface.delete(task.get(taskNum), task.size()));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                        task.remove(taskNum);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                    throw new DukeException(\"\\tPlease input a valid task number.\\n\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                UserInterface.find(task, tokenizer.getDescription());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                char symbol \u003d Character.toUpperCase(command.split(\" \")[0].charAt(0));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                task.add(new TimedTask(symbol, tokenizer.getDescription(), tokenizer.getBy()));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                System.out.print(UserInterface.add(task.get(task.size() - 1), task.size()));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            case \"todo\": // to do"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                task.add(new TimedTask(\u0027T\u0027, tokenizer.getDescription()));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                System.out.print(UserInterface.add(task.get(task.size() - 1), task.size()));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                throw new DukeException(\"\\tPlease input a valid command.\\n\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "limsiying"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limsiying": 59
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limsiying"
        },
        "content": "import Duke.UserInterface;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limsiying"
        },
        "content": "import Duke.Utility.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limsiying"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limsiying"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     * reads in user command"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     * @param args"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    public static void main(String[] args) throws IOException, DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        HardDisk hardDisk \u003d new HardDisk(); //  enable usage of HardDisk methods"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        UserInterface userInterface \u003d new UserInterface(); // enable usage of UserInterface methods"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        System.out.print(userInterface.home()); // DUKE welcome"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        String in \u003d \"\"; // initialise user input"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        while (!in.equals(\"bye\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                in \u003d sc.nextLine(); // read in user input"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                userInterface.dash();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                hardDisk.process(in);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            } catch (DukeException ignored) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                userInterface.dash();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        hardDisk.writeState();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limsiying": 33,
      "-": 3
    }
  },
  {
    "path": "src/main/java/Duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limsiying"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limsiying"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    public char symbol;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    public String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    public Boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     * creates an instance of task to be added to object List"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     * @param symbol"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    public Task(char symbol, String description) { // initialise object"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        this.symbol \u003d symbol;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     * changes boolean value when task is completed"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    public void setDone() { // set isDone to true"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     * @return task details"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    public String toString() { // return all state values"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        String unicode \u003d isDone ? \"YES\" : \"NO\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        return \"[\" + symbol + \"][\" + unicode + \"] \" + description;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     * @return description state"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    public String getDescription() { // return only description"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limsiying"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limsiying": 40
    }
  },
  {
    "path": "src/main/java/Duke/TimedTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limsiying"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limsiying"
        },
        "content": "public class TimedTask extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    public String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     * under-loading parameter to access parent class"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     * @param symbol T"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     * @param description description of task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    public TimedTask(char symbol, String description) { // initialise object"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        super(symbol, description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     * borrows behaviour of parent class"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     * @param symbol D or E"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     * @param description description of task"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     * @param by date/time"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    public TimedTask(char symbol, String description, String by) { // initialise object"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        super(symbol, description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     * @return task details"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    public String toUser() { // return all state values"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        String unicode \u003d isDone ? \"YES\" : \"NO\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        return (symbol \u003d\u003d \u0027T\u0027) ? toString() :"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                \"[\" + symbol + \"][\" + unicode + \"] \" + description + \" (\" + by + \")\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limsiying"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limsiying": 34
    }
  },
  {
    "path": "src/main/java/Duke/UserInterface.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limsiying"
        },
        "content": "package Duke; // declare that this is a package"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limsiying"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limsiying"
        },
        "content": "public class UserInterface {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    public UserInterface() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    public void dash() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        System.out.print(\"\\t----------------------\\n\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    public String home() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        String logo \u003d \"\\t ____        _        \\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                + \"\\t|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                + \"\\t| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                + \"\\t| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                + \"\\t|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        return \"\\tHello from\\n\" + logo +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                \"\\tHello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                \"\\tWhat can I do for you?\\n\" +"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                \"\\t----------------------\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     * goes through object List\u003cTask\u003e and prints out every single item in it"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     * @param task to do list"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    public static void list(List\u003cTimedTask\u003e task) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        System.out.println(\"\\tHere are the tasks in your list\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        for (TimedTask t : task) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            System.out.println(\"\\t  \" + index + \".\" + t.toUser());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     * goes through object List\u003cTask\u003e and prints out all descriptions where"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     * a given string is its substring"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     * @param task to do list"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     * @param findString substring"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    public static void find(List\u003cTimedTask\u003e task, String findString) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        System.out.println(\"\\tHere are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        for (TimedTask t : task) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            if ((t.getDescription()).contains(findString)) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                System.out.print(\"\\t  \" + index + \".\" + t.toUser() + \"\\n\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     * @param t task to be added"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     * @param taskSize size of to do list"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     * @return inform user that task was added"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    public static String add(TimedTask t, int taskSize) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        return \"\\tGot it. I\u0027ve added this task:\\n\" +"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                \"\\t  \" + t.toUser() + \"\\n\" +"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                \"\\tNow you have \" + taskSize + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     * @param t task to be marked as done"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     * @return inform user task was marked as down"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    public static String done(TimedTask t) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        return \"\\tNice! I\u0027ve marked this task as done:\\n\" +"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                \"\\t  \" + t.toUser() + \"\\n\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     * @param t task to be deleted"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     * @param taskSize size of to do list"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     * @return inform user task was deleted"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    public static String delete(TimedTask t, int taskSize) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        return \"\\tNoted. I\u0027ve removed this task:\\n\" +"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                \"\\t  \" + t.toUser() + \"\\n\" +"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                \"\\tNow you have \" + taskSize + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "limsiying"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limsiying": 85
    }
  },
  {
    "path": "src/main/java/Duke/Utility/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limsiying"
        },
        "content": "package Duke.Utility;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limsiying"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     * @param string error message that will be sent back to user"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    public DukeException(String string) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        System.out.print(string);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limsiying"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limsiying": 10
    }
  },
  {
    "path": "src/main/java/Duke/Utility/Tokenizer.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limsiying"
        },
        "content": "package Duke.Utility;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limsiying"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limsiying"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limsiying"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limsiying"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limsiying"
        },
        "content": " *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limsiying"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limsiying"
        },
        "content": "public class Tokenizer {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    private String[] src;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     * creates and instance of Tokenizer that processes user input"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     * @param str user input"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     * @throws DukeException please see error message as thrown"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    public Tokenizer(String str) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        this.src \u003d str.split(\" \");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        setDescription();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     * returns day suffix of a given date"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     * @param day"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    private static String returnDaySuffix(String day) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        int i \u003d Integer.parseInt(day);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        switch (i % 10) { // m8 y r u building a fucking pyramid"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            case 1:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                if (i !\u003d 11) return \"st\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            case 2:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                if (i !\u003d 11 \u0026\u0026 i !\u003d 12) return \"nd\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            case 3:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                if (i !\u003d 11 \u0026\u0026 i !\u003d 12 \u0026\u0026 i !\u003d 13) return \"rd\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                return \"th\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     * parse date as input by user in dd/MM/yyyy hhmm (time in 24hr clock) format"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     * into d MMM yyyy, h:mm (time in am/ pm) format"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     * @param by state of Tokenizer class"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     * @throws DukeException thrown when parse input is not formatted correctly"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    public void setBy(String by) throws DukeException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            DateTimeFormatter inputFormat \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"); // date/time user input format"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            LocalDateTime localDateTime \u003d LocalDateTime.parse(by, inputFormat);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            DateTimeFormatter outputFormat \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy, h:mma\"); // date/time output format"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            String tempDateTime \u003d localDateTime.format(outputFormat); // date/time output"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            int indexSpace \u003d tempDateTime.indexOf(\" \"); // insert day suffix by first finding index of first \" \""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            String dayNum \u003d tempDateTime.substring(0, indexSpace);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            String suffix \u003d returnDaySuffix(dayNum);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            this.by \u003d dayNum + suffix + tempDateTime.substring(indexSpace); // assign final by string"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            throw new DukeException(\"\\tPlease input the date/time as such: \\n\\t  eg 01/12/2019 1400\\n\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     * parse description of task from user input"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     * @throws DukeException thrown if date/time input by user is in incorrect format"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    private void setDescription() throws DukeException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        int slashIndex \u003d src.length - 1; // initialise slashIndex to length of src in case task is to do"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        this.by \u003d \"\"; // initialise to null for to do case"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        if (src[0].equals(\"deadline\") || src[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            int tempIndex \u003d 0;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            for (String str : src) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                if (str.equals(\"/by\") || str.equals(\"/at\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                    slashIndex \u003d tempIndex; // find index of \"/\" to get by string"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                tempIndex++;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            String[] destBy \u003d new String[src.length - slashIndex - 1];"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            System.arraycopy(src, slashIndex + 1, destBy, 0, destBy.length); // copy out by details"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            String tempBy \u003d String.join(\" \", destBy); // join together to form string"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            setBy(tempBy); // method assigns by via this.by and translates date/time"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            slashIndex--; // minus to shrink siz"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        String[] destDescription \u003d new String[slashIndex];"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        System.arraycopy(src, 1, destDescription, 0, destDescription.length); // copy out description"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        this.description \u003d String.join(\" \", destDescription); // form description strin"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     * returns Tokenizer state description"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     * @return description string"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     * @throws DukeException thrown when description is null"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    public String getDescription() throws DukeException {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        if (description.isEmpty()) throw new DukeException(\"\\tThe description of a task cannot be empty.\\n\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     * returns Tokenizer state by"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     * @return by string"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     * @throws DukeException thrown when by is null"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    public String getBy() throws DukeException {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        if (by.isEmpty()) throw new DukeException(\"\\tThe date/time of the task is missing.\\n\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "limsiying"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limsiying": 113
    }
  },
  {
    "path": "src/main/java/HardDisk.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limsiying"
        },
        "content": "import Duke.TimedTask;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limsiying"
        },
        "content": "import Duke.Utility.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limsiying"
        },
        "content": "import com.google.gson.Gson;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limsiying"
        },
        "content": "import com.google.gson.reflect.TypeToken;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limsiying"
        },
        "content": "import com.google.gson.stream.JsonReader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limsiying"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limsiying"
        },
        "content": "import java.lang.reflect.Type;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limsiying"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limsiying"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limsiying"
        },
        "content": "public class HardDisk extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    private List\u003cTimedTask\u003e task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    HardDisk() throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        this.task \u003d readState();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    void process(String input) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        userCommand(input, task);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     * saves state of Duke class before user terminates program"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     * saves two version, one in txt and one as a json"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     * @throws IOException if file to write to is not found"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    void writeState() throws IOException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        File txtFile \u003d new File(System.getProperty(\"user.dir\") + File.separator"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                + \"data\" + File.separator + \"duke.txt\"); // get text file path"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        File parentDir \u003d txtFile.getParentFile();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        if (!parentDir.exists()) parentDir.mkdirs(); // create parent dir and ancestors if not existing"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        FileWriter txtFW \u003d new FileWriter(txtFile);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        for (TimedTask t : task) {// convert task to text file"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            String str \u003d t.toUser();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            txtFW.append(str).append(String.valueOf(\u0027\\n\u0027));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        txtFW.flush();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        txtFW.close();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        File jsonFile \u003d new File(System.getProperty(\"user.dir\") + File.separator"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                + \"data\" + File.separator + \"duke.json\"); // get json file path"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        FileWriter jsonFW \u003d new FileWriter(jsonFile); // set path to write json file"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        Gson gson \u003d new Gson(); // convert List to json"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        String jsonStr \u003d gson.toJson(task);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        jsonFW.write(jsonStr);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        jsonFW.flush();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        jsonFW.close();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     * retrieves any previously saved to do lists"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     * @return the previously saved list as object List\u003cTimedTask\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "limsiying"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    private List\u003cTimedTask\u003e readState() throws DukeException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        List\u003cTimedTask\u003e temp \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            File jsonFile \u003d new File(System.getProperty(\"user.dir\") + File.separator"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                    + \"data\" + File.separator + \"duke.json\"); // get json file path"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            File parentDir \u003d jsonFile.getParentFile(); // create parent dir and ancestors if not existing"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            if (!parentDir.exists()) parentDir.mkdirs();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            Reader jsonRead \u003d new FileReader(jsonFile);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            JsonReader jsonStr \u003d new JsonReader(jsonRead);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            Gson gson \u003d new Gson(); // convert json to java object"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            Type dataType \u003d new TypeToken\u003cArrayList\u003cTimedTask\u003e\u003e() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            }.getType();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            temp \u003d gson.fromJson(jsonStr, dataType);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            throw new DukeException(\"\\tThere was no previously saved todo list.\\n\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            return temp; // runs regardless if exception is present"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "limsiying"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limsiying": 72
    }
  },
  {
    "path": "src/main/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limsiying"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limsiying"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limsiying"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limsiying"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limsiying": 10
    }
  },
  {
    "path": "src/main/test/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limsiying"
        },
        "content": "import Duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limsiying"
        },
        "content": "import Duke.Utility.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limsiying"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limsiying"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limsiying"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    public void validTask() throws DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        assertEquals(new Task(\u0027T\u0027, \"go buy track shoes\").toString(), \"[T][NO] go buy track shoes\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limsiying"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limsiying": 12
    }
  },
  {
    "path": "src/main/test/java/TimedTaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limsiying"
        },
        "content": "import Duke.TimedTask;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limsiying"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limsiying"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limsiying"
        },
        "content": "public class TimedTaskTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    public void validEvent() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        assertEquals(new TimedTask(\u0027E\u0027, \"SOC career fair\", \"09/11/2019 1.30PM\").toUser(), \"[E][NO] SOC career fair (09/11/2019 1.30PM)\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    public void validDeadline() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        assertEquals(new TimedTask(\u0027D\u0027, \"cs2113 A-Exception\", \"09/11/2019 1.30PM\").toUser(), \"[D][NO] cs2113 A-Exception (09/11/2019 1.30PM)\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limsiying"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limsiying": 16
    }
  },
  {
    "path": "src/main/test/java/TokenizerTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limsiying"
        },
        "content": "import Duke.Utility.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limsiying"
        },
        "content": "import Duke.Utility.Tokenizer;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limsiying"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limsiying"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limsiying"
        },
        "content": "public class TokenizerTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    public void invalidTaskDukeExceptionThrown() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e  {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            new Tokenizer(\"deadline deadline invalid\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        });"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limsiying"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limsiying": 14
    }
  }
]

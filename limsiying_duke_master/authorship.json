[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limsiying"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limsiying"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    implementation \u0027com.google.code.gson:gson:2.8.5\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limsiying"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limsiying"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limsiying"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limsiying"
        },
        "content": "run {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limsiying"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limsiying": 16,
      "-": 13
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limsiying"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    Deadline(String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limsiying"
        },
        "content": "//        String unicode \u003d isDone ? \"\\u2713\" : \"\\u2718\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        String unicode \u003d isDone ? \"YES\" : \"NO\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        return \"[D][\" + unicode + \"] \" + this.description + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    String getBy() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limsiying"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limsiying": 19
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limsiying"
        },
        "content": "import Duke.TimedTask;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limsiying"
        },
        "content": "import Duke.UserInterface;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limsiying"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limsiying"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limsiying"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        List\u003cTimedTask\u003e task \u003d new ArrayList\u003cTimedTask\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        UserInterface userInterface \u003d new UserInterface();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        System.out.print(userInterface.home()); // DUKE welcome"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        String in \u003d \"\"; // initialise input"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        while (!in.equals(\"bye\")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                in \u003d sc.nextLine(); // read in user input"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                userInterface.dash();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                Tokenizer tokenizer \u003d new Tokenizer(in); // breakdown user input"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                switch (in.split(\" \")[0]) { // process desired action"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                    case \"bye\": System.out.println(\"\\tBye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                    case \"list\": UserInterface.list(task);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                    case \"done\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                        task.get(Integer.parseInt(in.replaceAll(\"[^\\\\d-]\", \"\")) - 1).setDone();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                        System.out.print(UserInterface.done(task.get("
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                                Integer.parseInt(in.replaceAll(\"[^\\\\d-]\", \"\")) - 1)));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                    case \"find\": UserInterface.find(task, tokenizer.getDescription());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                    case \"delete\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                        System.out.print(UserInterface.delete(task.get("
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                                Integer.parseInt(in.replaceAll(\"[^\\\\d-]\", \"\")) - 1), task.size()));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                        task.remove(Integer.parseInt(in.replaceAll(\"[^\\\\d-]\", \"\")) - 1);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                    case \"deadline\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                    case \"event\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                        char symbol \u003d Character.toUpperCase(in.split(\" \")[0].charAt(0));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                        task.add(new TimedTask(symbol, tokenizer.getDescription(), tokenizer.getBy()));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                        System.out.print(UserInterface.add(task.get(task.size() - 1), task.size()));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                    default: // to do"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                        task.add(new TimedTask(\u0027T\u0027, tokenizer.getDescription()));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                        System.out.print(UserInterface.add(task.get(task.size() - 1), task.size()));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                userInterface.dash();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limsiying": 51,
      "-": 4
    }
  },
  {
    "path": "src/main/java/Duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limsiying"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limsiying"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    public char symbol;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    public String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    public Boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    Task(char symbol, String description) { // initialise object"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        this.symbol \u003d symbol;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    public void setDone() { // set isDone to true"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    public String toString() { // return all state values"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        String unicode \u003d isDone ? \"YES\" : \"NO\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        return \"[\" + symbol + \"][\" + unicode + \"] \" + description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    public String getDescription() { // return only description"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limsiying"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limsiying": 26
    }
  },
  {
    "path": "src/main/java/Duke/TimedTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limsiying"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limsiying"
        },
        "content": "public class TimedTask extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    public String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    public TimedTask(char symbol, String description) { // initialise object"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        super(symbol, description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    public TimedTask(char symbol, String description, String by) { // initialise object"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        super(symbol, description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    public String toUser() { // return all state values"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        String unicode \u003d isDone ? \"YES\" : \"NO\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        return (symbol \u003d\u003d \u0027T\u0027) ? toString() :"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                \"[\" + symbol + \"][\" + unicode + \"] \" + description + \" (\" + by + \")\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limsiying"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limsiying": 20
    }
  },
  {
    "path": "src/main/java/Duke/UserInterface.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limsiying"
        },
        "content": "package Duke; // declare that this is a package"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limsiying"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limsiying"
        },
        "content": "public class UserInterface {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    public UserInterface() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    public void dash() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        System.out.print(\"\\t----------------------\\n\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    public String home() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        String logo \u003d \"\\t ____        _        \\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                + \"\\t|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                + \"\\t| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                + \"\\t| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                + \"\\t|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        return \"\\tHello from\\n\" + logo +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                \"\\tHello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                \"\\tWhat can I do for you?\\n\" +"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                \"\\t----------------------\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    public static void list(List\u003cTimedTask\u003e task) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        System.out.println(\"\\tHere are the tasks in your list\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        for (TimedTask t : task) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            System.out.println(\"\\t  \" + index + \".\" + t.toUser());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    public static void find(List\u003cTimedTask\u003e task, String findString) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        System.out.println(\"\\tHere are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        for (TimedTask t : task) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            if ((t.getDescription()).contains(findString)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                System.out.print(\"\\t  \" + index + \".\" + t.toUser() + \"\\n\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    public static String add(TimedTask t, int taskSize) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        return \"\\tGot it. I\u0027ve added this task:\\n\" +"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                \"\\t  \" + t.toUser() + \"\\n\" +"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                \"\\tNow you have \" + taskSize + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    public static String done(TimedTask t) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        return \"\\tNice! I\u0027ve marked this task as done:\\n\" +"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                \"\\t  \" + t.toUser() + \"\\n\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    public static String delete(TimedTask t, int taskSize) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        return \"\\tNoted. I\u0027ve removed this task:\\n\" +"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                \"\\t  \" + t.toUser() + \"\\n\" +"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                \"\\tNow you have \" + taskSize + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "limsiying"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limsiying": 61
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limsiying"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limsiying"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        System.out.print(errorMessage);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    DukeException(int errorNum) throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        /* index 0: error message for invalid task type"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        1: missing description string"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        2: invalid task number"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        3: invalid date/time format"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        4: missing /at or /by"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        5: missing date/time input"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limsiying"
        },
        "content": "         */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        String[] errorMessage \u003d new String[6];"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        errorMessage[0] \u003d \"\\tOOPS! Invalid input was detected.\\n\" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                \"\\tPlease ensure input command is one of the below:\\n\" +"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                \"\\t  todo, deadline, event, list, find, done, delete, bye\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        errorMessage[1] \u003d \"\\tOOPS! Description of a task cannot be empty.\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        errorMessage[2] \u003d \"\\tOOPS! Task number is invalid. Please enter a valid task number.\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        errorMessage[3] \u003d \"\\tOOPS! The date/time input was formatted incorrectly! Please follow as below:\\n\" +"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                \"\\t  eg 09/05/2019 1800\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        errorMessage[4] \u003d \"\\tOOPS! Task input followed incorrect format. Please follow as below:\\n\" +"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                \"\\t  deadline geh1049 essay /by 12/09/2019 2359\\n\" +"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                \"\\t event SEP information session /at 03/09/2019 1000\\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        errorMessage[5] \u003d \"\\tOOPS! Please input date/time details for this event.\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        throw new DukeException(errorMessage[errorNum]);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limsiying"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limsiying": 31
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limsiying"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    Event(String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        String unicode \u003d isDone ? \"YES\" : \"NO\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        return \"[E][\" + unicode + \"] \" + this.description + \" (at: \" + by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    String getBy() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limsiying"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limsiying": 18
    }
  },
  {
    "path": "src/main/java/HardDisk.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limsiying"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limsiying"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limsiying"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limsiying"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limsiying"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limsiying"
        },
        "content": "class HardDisk {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    HardDisk() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    void writeHardDisk(List\u003cTask\u003e task) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            // get text file path"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            File txtFile \u003d new File(System.getProperty(\"user.dir\") + File.separator"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                    + \"data\" + File.separator + \"duke.txt\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            File parentDir \u003d txtFile.getParentFile();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            // create parent dir and ancestors if not existing"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            if (!parentDir.exists()) parentDir.mkdirs();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            FileWriter txtFW \u003d new FileWriter(txtFile);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            // convert task to txt file"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            for (Task t : task) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                String str \u003d t.toString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                txtFW.append(str).append(String.valueOf(\u0027\\n\u0027));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            txtFW.flush();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            txtFW.close();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limsiying"
        },
        "content": "//            // get json file path"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limsiying"
        },
        "content": "//            File jsonFile \u003d new File(System.getProperty(\"user.dir\") + File.separator"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limsiying"
        },
        "content": "//                    + \"data\" + File.separator + \"duke.json\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limsiying"
        },
        "content": "//            FileWriter jsonFW \u003d new FileWriter(jsonFile);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limsiying"
        },
        "content": "//            // convert List to json"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limsiying"
        },
        "content": "//            Gson gson \u003d new Gson();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limsiying"
        },
        "content": "//            String jsonStr \u003d gson.toJson(task);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limsiying"
        },
        "content": "//            jsonFW.write(jsonStr);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limsiying"
        },
        "content": "//            jsonFW.flush();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limsiying"
        },
        "content": "//            jsonFW.close();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    List\u003cTask\u003e readHardDisk() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        List\u003cTask\u003e task \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            // get txt file path"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            File txtFile \u003d new File(System.getProperty(\"user.dir\") + File.separator"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                    + \"data\" + File.separator + \"duke.txt\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            // create parent dir and ancestors if not existing"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            File parentDir \u003d txtFile.getParentFile();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            if (!parentDir.exists()) parentDir.mkdirs();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            // read txt file"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            Scanner sc \u003d new Scanner(txtFile);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                // read entry"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                String str \u003d sc.nextLine();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "limsiying"
        },
        "content": "//                [D][NO] do geh1049 essay (by: sat 2359)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                char type \u003d str.charAt(1);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                char bool \u003d str.charAt(4);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                // process description and by if valid"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                String[] srcArr \u003d str.split(\" \");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                // process input"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                if (type \u003d\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                    String[] arr \u003d new String[srcArr.length - 1];"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                    System.arraycopy(srcArr, 1, arr, 0, arr.length);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                    String description \u003d String.join(\" \", arr);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                    Task tempTask \u003d new Task(description);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                    if (bool \u003d\u003d \u0027Y\u0027) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                        tempTask.hardDiskDone();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                    task.add(tempTask);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                    int separate \u003d 0;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                    // finds index slicing description and by"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                    for (String s : srcArr) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                        if (s.equals(\"(by:\") || s.equals(\"(at:\")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                        separate++;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                    // description string"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                    String[] arrDes \u003d new String[separate - 1];"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                    System.arraycopy(srcArr, 1, arrDes, 0, arrDes.length);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                    String description \u003d String.join(\" \", arrDes);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                    // by string"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                    String[] arrBy \u003d new String[srcArr.length - separate - 1];"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                    System.arraycopy(srcArr, separate + 1, arrBy, 0, arrBy.length);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                    String by \u003d String.join(\" \", arrBy);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                    by \u003d by.substring(0, by.length() - 1);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                    if (type \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                        Deadline tempTask \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                        if (bool \u003d\u003d \u0027Y\u0027) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                            tempTask.hardDiskDone();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                        task.add(tempTask);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                        Event tempTask \u003d new Event(description, by);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                        if (bool \u003d\u003d \u0027Y\u0027) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                            tempTask.hardDiskDone();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                        task.add(tempTask);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            /*JsonReader jsonStr \u003d new JsonReader(txtFR);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            // convert json to java object"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            Gson gson \u003d new Gson();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            Type dataType \u003d new TypeToken\u003cArrayList\u003cTask\u003e\u003e() {}.getType();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            return gson.fromJson(jsonStr, dataType);*/"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            // exception should be when thr are no previously saved files"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            // system will create new file upon \"bye\""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "limsiying"
        },
        "content": "//            e.printStackTrace();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "limsiying"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limsiying": 117
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limsiying"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    Boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    void setDone() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        System.out.println(\"\\tNice! I\u0027ve marked this task as done: \\n\\t  \" + toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        String unicode \u003d isDone ? \"YES\" : \"NO\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        return \"[T][\" + unicode + \"] \" + description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    String getDescription() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    void hardDiskDone() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limsiying"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limsiying": 27
    }
  },
  {
    "path": "src/main/java/Tokenizer.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limsiying"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limsiying"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limsiying"
        },
        "content": "class Tokenizer {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    private String[] src;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    Tokenizer(String str) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            this.src \u003d str.split(\" \");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            setDescription();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    private String returnDaySuffix(String day) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        int i \u003d Integer.parseInt(day) % 10;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        switch (i) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            case 1:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                return \"st\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            case 2:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                return \"nd\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            case 3:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                return \"rd\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                return \"th\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    private void setBy(String by) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        DateTimeFormatter inputFormat \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"); // date/time user input format"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        LocalDateTime localDateTime \u003d LocalDateTime.parse(by, inputFormat);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        DateTimeFormatter outputFormat \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy, h:mma\"); // date/time output format"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        String tempDateTime \u003d localDateTime.format(outputFormat); // date/time output"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        int indexSpace \u003d tempDateTime.indexOf(\" \"); // insert day suffix by first finding index of first \" \""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        String dayNum \u003d tempDateTime.substring(0, indexSpace);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        String suffix \u003d returnDaySuffix(dayNum);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        this.by \u003d dayNum + suffix + tempDateTime.substring(indexSpace); // assign final by string"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        System.out.println(localDateTime);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    private void setDescription() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        int slashIndex \u003d src.length - 1; // initialise slashIndex to length of src in case task is to do"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        this.by \u003d \"\"; // initialise to null for to do case"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        if (src[0].equals(\"deadline\") || src[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            int tempIndex \u003d 0;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            for (String str : src) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                if (str.equals(\"/by\") || str.equals(\"/at\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                    slashIndex \u003d tempIndex; // find index of \"/\" to get by string"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "limsiying"
        },
        "content": "                tempIndex++;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            String[] destBy \u003d new String[src.length - slashIndex - 1];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            System.arraycopy(src, slashIndex + 1, destBy, 0, destBy.length); // copy out by details"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            String tempBy \u003d String.join(\" \", destBy); // join together to form string"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            setBy(tempBy); // method assigns by via this.by and translates date/time"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "limsiying"
        },
        "content": "            slashIndex--; // minus to shrink size"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        String[] destDescription \u003d new String[slashIndex];"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        System.arraycopy(src, 1, destDescription, 0, destDescription.length); // copy out description"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        this.description \u003d String.join(\" \", destDescription); // form description string"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    String getDescription() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "limsiying"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    String getBy() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "limsiying"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "limsiying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "limsiying"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limsiying": 70
    }
  }
]

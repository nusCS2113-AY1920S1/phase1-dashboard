[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kenlhc": 1,
      "-": 15
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    protected String input;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    public abstract void execute (TaskList taskList, Ui ui, Storage storage) throws DukeException, ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kenlhc": 7
    }
  },
  {
    "path": "src/main/java/Converter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "public class Converter {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    public static String dateTime(String dateTime) throws ParseException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        SimpleDateFormat simpleDateFormat1 \u003d new SimpleDateFormat(\"d/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        Date date \u003d simpleDateFormat1.parse(dateTime);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        SimpleDateFormat simpleDateFormat2 \u003d new SimpleDateFormat(\"EEE dd MMMM yyyy hh:mm a\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        return simpleDateFormat2.format(date);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kenlhc": 12
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        return \"[D][\" + super.getStatusIcon() + \"] \" + super.description + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kenlhc": 13
    }
  },
  {
    "path": "src/main/java/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    public DeadlineCommand (String input) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    public void execute(TaskList list, Ui ui, Storage storage) throws DukeException, ParseException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        String[] words \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        if (words.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        String[] splitter \u003d words[1].split(\"/by\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        String[] dateTime \u003d splitter[1].trim().split(\" \");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        if (dateTime.length \u003e 1) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "            Task task \u003d new Deadline(splitter[0].trim(), Converter.dateTime(splitter[1].trim()));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "            list.store(task);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "            storage.writeFile(list);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! The time for a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kenlhc": 28
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    public DeleteCommand(String input) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    public void execute(TaskList list, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        String[] words \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        if (words.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "            throw new DukeException (\"\\u2639 OOPS!!! You did not specify a task number to delete.\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "            int check \u003d Integer.parseInt(words[1].trim()) - 1;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "            list.delete(check);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "            storage.writeFile(list);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kenlhc": 21
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    public DoneCommand(String input) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    public void execute(TaskList list, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        String[] words \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        if (words.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! You did not specify a task to mark as done.\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        int check \u003d Integer.parseInt(words[1].trim()) - 1;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        list.complete(check);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        storage.writeFile(list);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kenlhc": 20
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    public Duke (String filename) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        storage \u003d new Storage(filename);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "            tasks \u003d new TaskList(storage.readFile());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        ui.greet();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                String input \u003d ui.readInput();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                Command command \u003d parser.parse(input);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                command.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                isExit \u003d command.isExit();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                System.out.println(\"Please enter a task.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                System.out.println(\"Please enter date in the correct format dd/mm/yyyy hhmm\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                System.out.println(\"Please specify a task number to delete.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                System.out.println(\"The task number you entered does not exist.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        new Duke(\"C:\\\\Users\\\\user\\\\Desktop\\\\duke\\\\data\\\\tasks.txt\").run();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kenlhc": 47,
      "-": 5
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    public DukeException (String message){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kenlhc": 6
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        return \"[E][\" + super.getStatusIcon() + \"] \" + super.description + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kenlhc": 13
    }
  },
  {
    "path": "src/main/java/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    public EventCommand (String input) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    public void execute(TaskList list, Ui ui, Storage storage) throws DukeException, ParseException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        String[] words \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        if (words.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        String[] splitter \u003d words[1].split(\"/at\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        String[] dateTime \u003d splitter[1].trim().split(\" \");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        if (dateTime.length \u003e 1) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "            Task task \u003d new Event(splitter[0].trim(), Converter.dateTime(splitter[1].trim()));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "            list.store(task);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "            storage.writeFile(list);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! The time for an event cannot be empty.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kenlhc": 28
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        ui.exit();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kenlhc": 13
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    public FindCommand(String input) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    public void execute(TaskList list, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        String[] words \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        if (words.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! You did not specify a keyword.\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        list.find(words[1].trim());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kenlhc": 18
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    public void execute(TaskList list, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        list.listTask();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kenlhc": 13
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    public Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        String[] words \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        } else if (input.isEmpty()) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! You did not enter anything.\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        } else if (words[0].equals(\"done\") || words[0].equals(\"Done\")) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "            return new DoneCommand(input);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        } else if (words[0].equals(\"delete\") || words[0].equals(\"Delete\")) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "            return new DeleteCommand(input);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        } else if (words[0].equals(\"find\") || words[0].equals(\"Find\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "            return new FindCommand(input);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        } else if (words[0].equals(\"todo\") || words[0].equals(\"Todo\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "            return new TodoCommand(input);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        } else if (words[0].equals(\"deadline\") || words[0].equals(\"Deadline\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "            return new DeadlineCommand(input);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        } else if (words[0].equals(\"event\") || words[0].equals(\"Event\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "            return new EventCommand(input);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! I do not understand what command you just told me.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kenlhc": 27
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    private static String filename;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    public Storage(String filename) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        this.filename \u003d filename;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    public static void writeFile(TaskList list) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "            BufferedWriter bufferedWriter \u003d new BufferedWriter(new FileWriter(filename));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "            for (int i \u003d 0; i \u003c list.getSize(); i++) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                bufferedWriter.write(list.getTaskList(i) + \"\\n\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "            bufferedWriter.close();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        } catch (IOException e){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "            System.out.println(\"There\u0027s no file\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    public ArrayList\u003cTask\u003e readFile() throws FileNotFoundException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "            BufferedReader bufferedReader \u003d new BufferedReader(new FileReader(filename));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "            String input \u003d bufferedReader.readLine();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "            int count \u003d 0;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "            String status;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "            while (input !\u003d null) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                status \u003d input.substring(3, 6);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                if (input.startsWith(\"[T]\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                    input \u003d input.substring(7).trim();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                    Task task \u003d new Todo(input);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                    list.add(task);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                    if (status.equals(\"[\\u2713]\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                        list.get(count).markAsDone();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                    count +\u003d 1;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                } else if (input.startsWith(\"[D]\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                    input \u003d input.substring(7);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                    String[] splitter \u003d input.split(\"\\\\(by:\", 2);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                    String remove_bracket \u003d splitter[1].substring(0, splitter[1].length() - 1);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                    Task task \u003d new Deadline(splitter[0].trim(), remove_bracket.trim());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                    list.add(task);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                    if (status.equals(\"[\\u2713]\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                        list.get(count).markAsDone();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                    count +\u003d 1;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                } else if (input.startsWith(\"[E]\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                    input \u003d input.substring(7);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                    String[] splitter \u003d input.split(\"\\\\(at:\", 2);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                    String remove_bracket \u003d splitter[1].substring(0, splitter[1].length() - 1);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                    Task task \u003d new Event(splitter[0].trim(), remove_bracket.trim());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                    list.add(task);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                    if (status.equals(\"[\\u2713]\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                        list.get(count).markAsDone();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                    count +\u003d 1;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                input \u003d bufferedReader.readLine();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "            bufferedReader.close();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "            System.out.println(\"There\u0027s no file\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kenlhc": 73
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kenlhc": 19
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    private static ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    public Task getTaskList(int i) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        return list.get(i);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    public static void store(Task a) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        list.add(a);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        if (list.size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                    + \"   \" + a.toString() + \"\\nNow you have \" + list.size() + \" task in the list\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                    + \"   \" + a.toString() + \"\\nNow you have \" + list.size() + \" tasks in the list\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    public static void delete(int i) throws NumberFormatException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\\n\" + \"   \" + list.get(i).toString() );"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        list.remove(i);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        System.out.println(\"Now you have \" + list.size() + \" tasks in the list\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    public static void complete(int i) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        list.get(i).markAsDone();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + \"  \" + list.get(i).toString());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    public static void find(String match) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your lists:\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        int count \u003d 0;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "            if (list.get(i).description.contains(match)) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                System.out.println(count+1 + \".\" + list.get(i).toString());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    public static void listTask() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "            System.out.println(i+1 + \".\" + list.get(i).toString());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kenlhc": 60
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        return \"[T][\" + super.getStatusIcon() + \"] \" + super.description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kenlhc": 10
    }
  },
  {
    "path": "src/main/java/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    public TodoCommand(String input) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    public void execute(TaskList list, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        String[] words \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        if (words.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        Task task \u003d new Todo(words[1].trim());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        list.store(task);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        storage.writeFile(list);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kenlhc": 20
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    public String readInput() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        Scanner obj \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        return obj.nextLine();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        System.out.println(\"Sorry. The file does not exist.\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    public void exit() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kenlhc": 21
    }
  }
]

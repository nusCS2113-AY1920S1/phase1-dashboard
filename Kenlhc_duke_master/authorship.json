[
  {
    "path": "build.gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kenneth Lee": 1,
      "Jeffry Lum": 15
    }
  },
  {
    "path": "settings.gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "rootProject.name \u003d \u0027duke\u0027"
      }
    ],
    "authorContributionMap": {
      "Jeffry Lum": 1
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "        return \"[D][\" + super.getStatusIcon() + \"] \" + super.description + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kenneth Lee": 12,
      "Kenlhc": 1
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    public Duke () {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "    private static ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "    private static final String FILENAME \u003d \"C:\\\\Users\\\\user\\\\Desktop\\\\duke\\\\data\\\\tasks.txt\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "    private static void greet() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "    private static void exit() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "    private static void storeTask(Task a) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "        list.add(a);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "        writeFile();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "        if (list.size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                    + \"   \" + a.toString() + \"\\nNow you have \" + list.size() + \" task in the list\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                    + \"   \" + a.toString() + \"\\nNow you have \" + list.size() + \" tasks in the list\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "    private static void echo() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "            System.out.println(i+1 + \".\" + list.get(i).toString());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "    private static void taskComplete(int i) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "        list.get(i).markAsDone();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "        writeFile();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "        System.out.println(list.get(i).toString());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    private static void deleteTask(int i) throws NumberFormatException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        System.out.println(\"   \" + list.get(i).toString());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "        list.remove(i);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        System.out.println(\"Now you have \" + list.size() + \" tasks in the list\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "        writeFile();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    private static void findTask(String match) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your lists:\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        int count \u003d 0;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "            if (list.get(i).description.contains(match)) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                System.out.println(count+1 + \".\" + list.get(i).toString());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "    private static String convertDateTime(String dateTime) throws ParseException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "        SimpleDateFormat simpleDateFormat1 \u003d new SimpleDateFormat(\"d/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "        Date date \u003d simpleDateFormat1.parse(dateTime);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "        SimpleDateFormat simpleDateFormat2 \u003d new SimpleDateFormat(\"EEE dd MMMM yyyy hh:mm a\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "        return simpleDateFormat2.format(date);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "    private static String convertDateOnly(String dateOnly) throws ParseException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "        SimpleDateFormat simpleDateFormat1 \u003d new SimpleDateFormat(\"d/MM/yyyy\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "        Date date \u003d simpleDateFormat1.parse(dateOnly);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "        SimpleDateFormat simpleDateFormat2 \u003d new SimpleDateFormat(\"EEE dd MMMM yyyy\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "        return simpleDateFormat2.format(date);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "    private static void writeFile() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "            BufferedWriter bufferedWriter \u003d new BufferedWriter(new FileWriter(Duke.FILENAME));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "            for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                bufferedWriter.write(list.get(i) + \"\\n\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "            bufferedWriter.close();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "        } catch (IOException e){"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "            System.out.println(\"There\u0027s no file\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "    private static void readFile() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "            BufferedReader bufferedReader \u003d new BufferedReader(new FileReader(Duke.FILENAME));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "            String input \u003d bufferedReader.readLine();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "            int count \u003d 0;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "            String status;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "            while (input !\u003d null) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                status \u003d input.substring(3, 6);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                if (input.startsWith(\"[T]\")) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                    input \u003d input.substring(7).trim();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                    Task task \u003d new Todo(input);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                    list.add(task);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                    if (status.equals(\"[\\u2713]\")) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                        list.get(count).markAsDone();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                    count +\u003d 1;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                } else if (input.startsWith(\"[D]\")) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                    input \u003d input.substring(7);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                    String[] splitter \u003d input.split(\"\\\\(by:\",2);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                    String remove_bracket \u003d splitter[1].substring(0, splitter[1].length()-1);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                    Task task \u003d new Deadline(splitter[0].trim(), remove_bracket.trim());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                    list.add(task);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                    if (status.equals(\"[\\u2713]\")) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                        list.get(count).markAsDone();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                    count +\u003d 1;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                } else if (input.startsWith(\"[E]\")) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                    input \u003d input.substring(7);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                    String[] splitter \u003d input.split(\"\\\\(at:\", 2);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                    String remove_bracket \u003d splitter[1].substring(0, splitter[1].length()-1);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                    Task task \u003d new Event(splitter[0].trim(), remove_bracket.trim());"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                    list.add(task);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                    if (status.equals(\"[\\u2713]\")) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                        list.get(count).markAsDone();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                    count +\u003d 1;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                input \u003d bufferedReader.readLine();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "            bufferedReader.close();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "            System.out.println(\"File does not exist\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "            System.out.println(\"There\u0027s no file\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "        greet();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "        Scanner obj \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "        readFile();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                input \u003d obj.nextLine();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                    exit();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                    echo();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                } else if (input.isEmpty()) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                    throw new DukeException(\"\\u2639 OOPS!!! You did not enter anything.\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                    String[] words \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                    switch (words[0]) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                        case \"done\":"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                        case \"Done\": {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                            if (words.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                                throw new DukeException(\"\\u2639 OOPS!!! You did not specify a task to mark as done.\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                            int check \u003d Integer.parseInt(words[1].trim()) - 1;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                            taskComplete(check);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                        case \"delete\":"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                        case \"Delete\": {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                            int check \u003d Integer.parseInt(words[1].trim()) - 1;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                            if (check \u003e\u003d list.size()) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                                throw new ArrayIndexOutOfBoundsException(\"\\u2639 OOPS!!! That task number does not exist.\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                            deleteTask(check);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                        case \"find\":"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                        case \"Find\": {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                            if (words.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                                throw new DukeException(\"\\u2639 OOPS!!! You did not specify a keyword.\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                            findTask(words[1].trim());"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                        case \"todo\": {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                            if (words.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                                throw new DukeException(\"\\u2639 OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                            Task task \u003d new Todo(words[1].trim());"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                            storeTask(task);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                        case \"deadline\": {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                            if (words.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                                throw new DukeException(\"\\u2639 OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                            String[] splitter \u003d words[1].split(\"/by\");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                            String[] dateTime \u003d splitter[1].trim().split(\" \");"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                            if (dateTime.length \u003e 1) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                                Task task \u003d new Deadline(splitter[0].trim(), convertDateTime(splitter[1].trim()));"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                                storeTask(task);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                                Task task \u003d new Deadline(splitter[0].trim(), convertDateOnly(splitter[1].trim()));"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                                storeTask(task);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                        case \"event\": {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                            if (words.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                                throw new DukeException(\"\\u2639 OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                            String[] splitter \u003d words[1].split(\"/at\");"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                            String[] dateTime \u003d splitter[1].trim().split(\" \");"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                            if (dateTime.length \u003e 1) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                                Task task \u003d new Event(splitter[0].trim(), convertDateTime(splitter[1].trim()));"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                                storeTask(task);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                                Task task \u003d new Event(splitter[0].trim(), convertDateOnly(splitter[1].trim()));"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                                storeTask(task);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                        default:"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                            throw new DukeException(\"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                System.out.println(\"Please enter a task.\");"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "                System.out.println(\"Please enter date in the correct format dd/mm/yyyy and 24H time convention if needed\");"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                System.out.println(\"Please specify a task number to delete\");"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kenneth Lee": 198,
      "Kenlhc": 41,
      "Jeffry Lum": 2,
      "-": 2
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "    public DukeException (String message){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kenneth Lee": 6
    }
  },
  {
    "path": "src/main/java/Event.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "        return \"[E][\" + super.getStatusIcon() + \"] \" + super.description + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kenneth Lee": 12,
      "Kenlhc": 1
    }
  },
  {
    "path": "src/main/java/Task.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kenlhc"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kenneth Lee": 17,
      "Kenlhc": 2
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "        return \"[T][\" + super.getStatusIcon() + \"] \" + super.description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kenneth Lee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kenneth Lee": 10
    }
  }
]

[
  {
    "path": "build.gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "//    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "//shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "//    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "//    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "//    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "//    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "//}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "test {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tessa-z": 21,
      "-": 16
    }
  },
  {
    "path": "data/duke.txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "T | 1 | eat breakfast"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "T | 1 | be happy"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "D | 0 | do project tasks | wed"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "E | 1 | stay chill | all times"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "T | 1 | have hope dude"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "T | 0 | oops"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "D | 1 | duke this | wed"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "E | 1 | birthday | everyday"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "D | 0 | assignment | 12/02/99 0900"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "D | 0 | be born | 12th of February 1999, 4.19am"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "D | 0 | be born | 12th of February 1999, 4.19am"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "D | 0 | be born | 12th of February 1999, 4.19am"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "D | 1 | be born | 12th of February 1999, 2.19pm"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "D | 1 | be born | 12th of February 1999, 2.19pm"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "D | 1 | be born | 22nd of March 2020, 12.00am"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "E | 0 | annivesary | 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "E | 1 | bread | 13th of February 1997, 8.00pm"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "T | 0 | helllooo"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "D | 0 | sing song | null"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "D | 0 | sing song | 12th of February 2019"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "D | 0 | sing song | null"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "D | 0 | sing song | 12th of February 2019, 9.00am"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "D | 0 | sing | 12th of February 1999, 9.00am"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "D | 0 | sing | 12th of February 2019"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "E | 0 | singing | 12th of February 1999"
      }
    ],
    "authorContributionMap": {
      "tessa-z": 25
    }
  },
  {
    "path": "src/main/java/Date.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "public class Date {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    public String convertDate(String dateString) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        String[] dateTime \u003d dateString.split(\" \");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        String[] date \u003d dateTime[0].split(\"/\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        if (date.length \u003d\u003d 3) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            if (dateTime.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                return getDay(date[0]) + \" of \" + getMonth(Integer.parseInt(date[1])) + \" \""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                        + date[2];"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            } else if (dateTime.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                return getDay(date[0]) + \" of \" + getMonth(Integer.parseInt(date[1])) + \" \""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                        + date[2] + \", \" + getTime(dateTime[1]);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            } else return \"null\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        } else return \"null\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    public String getDay(String day) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        if (day.charAt(0) !\u003d \u00271\u0027) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            if (day.charAt(1) \u003d\u003d \u00271\u0027) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                return day + \"st\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            } else if (day.charAt(1) \u003d\u003d \u00272\u0027) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                return day + \"nd\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            } else if (day.charAt(1) \u003d\u003d \u00273\u0027) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                return day + \"rd\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                return day + \"th\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            return day + \"th\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    public String getMonth(int month) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            switch (month) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                case 1:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    return \"January\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                case 2:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    return \"February\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                case 3:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    return \"March\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                case 4:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    return \"April\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                case 5:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    return \"May\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                case 6:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    return \"June\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                case 7:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    return \"July\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                case 8:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    return \"August\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                case 9:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    return \"September\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                case 10:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    return \"October\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                case 11:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    return \"November\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                case 12:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    return \"December\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    return \"null\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    public String getTime(String time) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        String hour \u003d null;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        String minutes \u003d null;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        String indicator \u003d null;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        if ((time.charAt(0) \u003d\u003d \u00270\u0027) || (Integer.parseInt(time.substring(0,2)) \u003c\u003d 12)) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "//            System.out.println(time.substring(0,2));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            if (time.charAt(1) \u003d\u003d \u00270\u0027) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                hour \u003d \"12\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                minutes \u003d time.substring(2);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                hour \u003d String.valueOf(time.charAt(1));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "//                System.out.println(hour);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                minutes \u003d time.substring(2);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            indicator \u003d \"am\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            hour \u003d Integer.toString(Integer.parseInt(time.substring(0,2)) - 12);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "//            System.out.println(hour);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            minutes \u003d time.substring(2);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            indicator \u003d \"pm\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        return hour + \".\" + minutes + indicator;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tessa-z": 92
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    public Deadline(String description, String date) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        this.type \u003d \"D\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    public Deadline(String description, String date, boolean state) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        this.type \u003d \"D\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        this.isDone \u003d state;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        return \"[\" + getType() + \"]\" + \"[\" + super.getStatusIcon() + \"] \" + super.getDescription() + \"(by: \" + super.getDate() + \")\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    public String toData() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        return super.getType() + \" | \" + super.getStatus() + \" | \" + super.getDescription() + \"| \" + super.getDate();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tessa-z": 25
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        System.out.println(\"     Hello! I\u0027m Duke\\n     What can I do for you?\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            FileReading reader \u003d new FileReading();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            tasks \u003d reader.ReadFile();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            String input \u003d in.nextLine();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            String[] taskInfo \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                System.out.println(\"     Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            } else if (taskInfo[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    if ((taskInfo.length \u003c 2) || !(taskInfo[1].trim().length() \u003e 0)) throw new DukeException();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    if (Integer.parseInt(taskInfo[1]) \u003e tasks.size()) throw new DukeException();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    String oldString \u003d tasks.get(Integer.parseInt(taskInfo[1]) - 1).toData();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    tasks.get(Integer.parseInt(taskInfo[1]) - 1).markAsDone();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    System.out.println(\"     Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    System.out.println(\"       [\" + tasks.get(Integer.parseInt(taskInfo[1]) - 1).getStatusIcon() + \"] \" + tasks.get(Integer.parseInt(taskInfo[1]) - 1).description);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    String newString \u003d tasks.get(Integer.parseInt(taskInfo[1]) - 1).toData();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "//                    System.out.println(newString);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    FileWriting writer \u003d new FileWriting();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    writer.ModifyFile(oldString, newString);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    e.incompleteFields(DukeException.ErrorType.DONE);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            } else if (taskInfo[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    if ((taskInfo.length \u003c 2) || !(taskInfo[1].trim().length() \u003e 0)) throw new DukeException();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    Todo t \u003d new Todo(taskInfo[1]);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    tasks.add(t);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    System.out.println(\"     Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    System.out.println(\"       [T][✘] \" + taskInfo[1]);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    System.out.println(\"     Now you have \" + tasks.size() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    FileWriting writer \u003d new FileWriting();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    writer.WriteFile(t.toData(), true);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    e.incompleteFields(DukeException.ErrorType.TODO);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            } else if (taskInfo[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    if ((taskInfo.length \u003c 2) || !(taskInfo[1].trim().length() \u003e 0)) throw new DukeException();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    if (!taskInfo[1].contains(\"/by\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                        throw new DukeException();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    String[] dateInfo \u003d taskInfo[1].split(\"/by \");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    if ((dateInfo.length \u003c 2) || (dateInfo[1].equals(\" \")) || (dateInfo[0].equals(\"\")))"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                        throw new DukeException();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    Date d \u003d new Date();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    dateInfo[1] \u003d d.convertDate(dateInfo[1]);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    if (dateInfo[1].equals(\"null\")) { throw new DukeException(); }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    Deadline t \u003d new Deadline(dateInfo[0], dateInfo[1]);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    tasks.add(t);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    System.out.println(\"     Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    System.out.println(\"       [D][✘] \" + dateInfo[0] + \"(by: \" + dateInfo[1] + \")\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    System.out.println(\"     Now you have \" + tasks.size() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    FileWriting writer \u003d new FileWriting();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    writer.WriteFile(t.toData(), true);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    e.incompleteFields(DukeException.ErrorType.DEADLINE);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            } else if (taskInfo[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    if ((taskInfo.length \u003c 2) || !(taskInfo[1].trim().length() \u003e 0)) throw new DukeException();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    if (!taskInfo[1].contains(\"/at\")) throw new DukeException();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    String[] dateInfo \u003d taskInfo[1].split(\"/at \");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    if ((dateInfo.length \u003c 2) || (dateInfo[1].equals(\" \")) || (dateInfo[0].equals(\"\")))"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                        throw new DukeException();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    Date d \u003d new Date();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    dateInfo[1] \u003d d.convertDate(dateInfo[1]);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    if (dateInfo[1].equals(\"null\")) { throw new DukeException(); }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    Event t \u003d new Event(dateInfo[0], dateInfo[1]);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    tasks.add(t);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    System.out.println(\"     Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    System.out.println(\"       [E][✘] \" + dateInfo[0] + \"(at: \" + dateInfo[1] + \")\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    System.out.println(\"     Now you have \" + tasks.size() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    FileWriting writer \u003d new FileWriting();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    writer.WriteFile(t.toData(), true);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    e.incompleteFields(DukeException.ErrorType.EVENT);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            } else if (taskInfo[0].equals(\"list\")) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    if (tasks.isEmpty()) throw new DukeException();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    System.out.println(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    int count \u003d 0;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    for (Task task : tasks) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                        ++count;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                        System.out.println(\"     \" + count + \".\" + task.toString());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                } catch (DukeException e){"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    e.listEmpty();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    throw new DukeException();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                } catch (DukeException e){"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    e.invalidCommand();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "tessa-z": 137,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    DukeException() {}"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    //if list command but list is empty"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    public void listEmpty() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        System.out.println(\"     ☹ WOT? Task list is empty. Please input a task before\\n       viewing list.\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    //if command is invalid"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    public void invalidCommand() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        System.out.println(\"     ☹ WOT? I don\u0027t understand what you have entered.\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    enum ErrorType {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        DONE,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        TODO,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        DEADLINE,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        EVENT,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "//        DATE"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    //if incomplete fields for task commands"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    public void incompleteFields(ErrorType error) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        switch(error) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            case DONE: System.out.println(\"     ☹ WOT? Expected format: \\\"done [index of task]\\\"\"); break;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            case TODO: System.out.println(\"     ☹ WOT? Expected format: \\\"todo [description of task]\\\"\"); break;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            case DEADLINE: System.out.println(\"     ☹ WOT? Expected format: \\\"deadline [description of task] /by\\n      DD/MM/YYYY HHMM\\\"\"); break;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            case EVENT: System.out.println(\"     ☹ WOT? Expected format: \\\"event [description of event] /at\\n      DD/MM/YYYY HHMM\"); break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "//            case DATE: System.out.println(\"     ☹ WOT? Please enter the date and time details in this \\n     format: DD/MM/YYYY HHMM\"); break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "tessa-z": 34
    }
  },
  {
    "path": "src/main/java/Event.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    public Event(String description, String date) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        this.type \u003d \"E\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    public Event(String description, String date, boolean state) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        this.type \u003d \"E\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        this.isDone \u003d state;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        return \"[\" + getType() + \"]\" + \"[\" + super.getStatusIcon() + \"] \" + super.getDescription() + \"(at: \" + getDate() + \")\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    public String toData() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        return super.getType() + \" | \" + super.getStatus() + \" | \" + super.getDescription() + \"| \" + getDate();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tessa-z": 25
    }
  },
  {
    "path": "src/main/java/FileManagement.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "public class FileManagement {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    static final String FILE_PATH \u003d \"/home/tessa/Documents/CS2113/duke/data/duke.txt\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tessa-z": 3
    }
  },
  {
    "path": "src/main/java/FileReading.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "public class FileReading extends FileManagement {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    public ArrayList\u003cTask\u003e ReadFile() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        File file \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        FileReader fr \u003d null;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        BufferedReader br \u003d null;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            fr \u003d new FileReader(file);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            ArrayList\u003cTask\u003e listContent \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            String line \u003d br.readLine();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            while (line !\u003d null) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                String[] data \u003d line.split(\"\\\\| \");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                if (data[0].equals(\"T \")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    Todo t \u003d new Todo(data[2], data[1].contains(\"1\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    listContent.add(t);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                } else if (data[0].equals(\"D \")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    Deadline t \u003d new Deadline(data[2], data[3], data[1].contains(\"1\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    listContent.add(t);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                } else if (data[0].equals(\"E \")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    Event t \u003d new Event(data[2], data[3], data[1].contains(\"1\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    listContent.add(t);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                line \u003d br.readLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            return listContent;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tessa-z": 42
    }
  },
  {
    "path": "src/main/java/FileWriting.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "public class FileWriting extends FileManagement {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    public void WriteFile(String s, boolean append) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        File file \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        FileWriter fw \u003d null;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        BufferedWriter bw \u003d null;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            fw \u003d new FileWriter(file, append);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            bw \u003d new BufferedWriter(fw);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            bw.write(s);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            bw.newLine();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                bw.close();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                fw.close();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    public void ModifyFile(String oldString, String newString) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        File file \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        FileReader fr \u003d null;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        BufferedReader br \u003d null;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            fr \u003d new FileReader(file);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            String oldContent \u003d \"\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            String line \u003d br.readLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "//            System.out.println(newString);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            while (line !\u003d null) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                oldContent \u003d oldContent + line + System.lineSeparator();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                line \u003d br.readLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            oldContent \u003d oldContent.substring(0, oldContent.length() - 1);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "//            System.out.println(oldContent);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            String newContent \u003d oldContent.replace(oldString, newString);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "//            System.out.println(newContent);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            FileWriting writer \u003d new FileWriting();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            writer.WriteFile(newContent, false);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tessa-z": 54
    }
  },
  {
    "path": "src/main/java/ReadFromFile.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "//import java.io.BufferedReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "//import java.io.FileReader;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "//import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "//public class ReadFromFile {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "//    try {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "//        FileReader readfile \u003d new FileReader(\"/home/tessa/Documents/CS2113/duke/data/duke.txt\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "//        BufferedReader readbuffer \u003d new BufferedReader(readfile);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "//        for (int i \u003d 1; lineNumber \u003c 10; lineNumber++) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "//            if (lineNumber \u003d\u003d 7) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "//                text \u003d readbuffer.readLine();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "//            } else"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "//                readbuffer.readLine();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "//    } catch ("
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "//    IOException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "//        e.printStackTrace();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "//}"
      }
    ],
    "authorContributionMap": {
      "tessa-z": 19
    }
  },
  {
    "path": "src/main/java/Task.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    public String getDescription() { return description; }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    public String getType() { return type; }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    public String getDate() { return date; }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    public int getStatus() { return (isDone ? 1 : 0); }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        return \"[\" + getType() + \"]\" + \"[\" + getStatusIcon() + \"] \" + getDescription();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    public String toData() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        return getType() + \" | \" + getStatus() + \" | \" + getDescription();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tessa-z": 33
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        this.type \u003d \"T\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    public Todo(String description, boolean state) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        this.isDone \u003d state;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        this.type \u003d \"T\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tessa-z": 14
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tessa-z": 2
    }
  }
]

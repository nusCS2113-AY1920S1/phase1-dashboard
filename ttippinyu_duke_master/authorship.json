[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "test {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ttippinyu": 22,
      "-": 19
    }
  },
  {
    "path": "src/main/java/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "public class AddDeadlineCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * Creates command object for adding deadline"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @param description string of description of deadline"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @param date string of date of deadline"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    public AddDeadlineCommand(String description, String date) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * Adding the deadline object into task list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @param taskList the task list object the deadline object will be added into"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @param ui the Ui object used for the program"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @param storage the Storage object used for the program"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        taskList.add(new Deadline(this.description, this.date));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        ui.showAddTask(taskList.get(taskList.size() - 1), taskList.size());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        storage.save(taskList.getList());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ttippinyu": 28
    }
  },
  {
    "path": "src/main/java/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "public class AddEventCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * Creates command object for adding event"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @param description string of description of event"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @param date string of date of event"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    public AddEventCommand(String description, String date) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * Adding the event object into task list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @param taskList the task list object the event object will be added into"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @param ui the Ui object used for the program"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @param storage the Storage object used for the program"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        taskList.add(new Event(this.description, this.date));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        ui.showAddTask(taskList.get(taskList.size() - 1), taskList.size());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        storage.save(taskList.getList());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ttippinyu": 28
    }
  },
  {
    "path": "src/main/java/AddTodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "public class AddTodoCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * Creates command object for adding to do"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @param description string of description of to do"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    public AddTodoCommand(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * Adding the to do object into task list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @param taskList the task list object the to do object will be added into"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @param ui the Ui object used for the program"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @param storage the Storage object used for the program"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        taskList.add(new Todo(description));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        ui.showAddTask(taskList.get(taskList.size() - 1), taskList.size());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        storage.save(taskList.getList());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ttippinyu": 25
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "abstract public class Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    protected boolean isExit;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * Check status of isExit flag"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        return this.isExit;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * Adding the object into task list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @param taskList task list object that object will be added into"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @param ui the Ui object used by the program"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @param storage the Storage object used by the program"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    abstract public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ttippinyu": 19
    }
  },
  {
    "path": "src/main/java/DateTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "public class DateTime {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    private int day;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    private int month;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    private int year;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    private int hour;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    private int min;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * Converts the string format of datetime into the object DateTime"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @param input the string for the datetime in dd/mm/yy hh:mm"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @throws DukeException When the format of the input is wrong"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    public DateTime (String input) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        List\u003cString\u003e dateTimeSplit \u003d Arrays.asList(input.split(\" \"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        //get the date"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "            String date \u003d dateTimeSplit.get(0);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "            String time \u003d dateTimeSplit.get(1);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "            List\u003cString\u003e dateParts \u003d Arrays.asList(date.split(\"/\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "            this.day \u003d Integer.parseInt(dateParts.get(0));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "            this.month \u003d Integer.parseInt(dateParts.get(1));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "            this.year \u003d Integer.parseInt(dateParts.get(2));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "            List\u003cString\u003e timeParts \u003d Arrays.asList(time.split(\":\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "            this.hour \u003d Integer.parseInt(timeParts.get(0));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "            this.min \u003d Integer.parseInt(timeParts.get(1));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "            if (this.day \u003c 0 || this.month \u003c 0 || this.year \u003c 0 || this.min \u003c 0 || this.hour \u003c 0 ||"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                    this.day \u003e 31 || this.month \u003e 12 || this.hour \u003e 23 || this.min \u003e 59) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                throw new DukeException(\"Invalid datetime value\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        } catch (NumberFormatException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "            throw new DukeException(\"Invalid format: dd/mm/yy hh:mm\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * Gives the string of the object"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @return dd/mm/yyyy hh:mm"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        return String.format(\"%02d/%02d/%04d %02d:%02d\", this.day, this.month, this.year, this.hour, this.min);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ttippinyu": 51
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    private DateTime date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * Creates the deadline object"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @param description the description of the deadline"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @param inputDate the datetime of the deadline"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @throws DukeException if the format of the datetime is wrong"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    public Deadline(String description, String inputDate) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        date \u003d new DateTime(inputDate);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * The string format of the object"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @return [D] description (by: datetime)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + this.date.toString() + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * The string format of the object saved into the file"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @return D|description|datetime"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    public String saveFormat() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        return \"D|\" + super.saveFormat() + \"|\" + this.date.toString();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ttippinyu": 34
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * Creates command object for deleting task"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @param index index of task"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    public DeleteCommand(Integer index) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * Delete the task from the taskList"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @param taskList task list object that the task will be removed from"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @param ui the Ui object used by the program"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @param storage the Storage object used by the program"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "            Task removed \u003d taskList.get(index);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "            taskList.remove(index);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "            ui.showDeleted(removed, taskList.size());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "            storage.save(taskList.getList());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "            throw new DukeException(\"The task number is invalid :((\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ttippinyu": 30
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * Creates command object for marking task as done"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @param index index of task to mark as done"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    public DoneCommand(Integer index) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * Mark the task at index as done"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @param taskList task list object that the task to be marked as done is from"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @param ui the Ui object used by the program"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @param storage the Storage object used by the program"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "            taskList.get(index).markAsDone();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "            ui.showDone(taskList.get(index));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "            storage.save(taskList.getList());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "            throw new DukeException(\"The task number is invalid :((\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ttippinyu": 29
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * Creates a new Duke program"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @param filePath name of file to store"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "            ui.showLoadingError(e.getMessage());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * Starts the Duke program"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        new Duke(\"data.txt\").run();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ttippinyu": 43,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * Creates DukeException object"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @param message message of exception"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ttippinyu": 9
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    private DateTime start;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    private DateTime end;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * Creates the event object"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @param description the description of the event"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @param inputDate the datetime of the event"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @throws DukeException if the format of the datetime is wrong"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    public Event(String description, String inputDate) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        List\u003cString\u003e dates \u003d Arrays.asList(inputDate.split(\" to \"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "            start \u003d new DateTime(dates.get(0));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "            end \u003d new DateTime(dates.get(1));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "            throw new DukeException(\"Invalid date format: dd/mm/yy hh:mm to dd/mm/yy hh:mm\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * The string format of the object"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @return [E] description (at: datetimeStart to datetimeEnd)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.start.toString() + \" to \" + this.end.toString() + \")\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * The string format of the object saved into the file"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @return E|description|datetimeStart to datetimeEnd"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    public String saveFormat() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        return \"E|\" + super.saveFormat() + \"|\" + this.start.toString() + \" to \" + this.end.toString();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ttippinyu": 42
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * Create command for exit"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        this.isExit \u003d true;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * Exit the program"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @param taskList task list used by the program"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @param ui the Ui object used by the program"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @param storage the Storage object used by the program"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        ui.showExit();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ttippinyu": 20
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * Create command for finding task with keyword"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @param keyword the keyword to find"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * Find the tasks that contain keyword"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @param taskList task list object to search from"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @param ui the Ui object used by the program"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @param storage the Storage object used by the program"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        List\u003cTask\u003e found \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        for (Task task : taskList.getList())"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "            if (task.containsKeyword(keyword))"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                found.add(task);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        ui.showFind(found);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ttippinyu": 31
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * Show the list of tasks"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @param taskList task list object to show"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @param ui the Ui object used by the program"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @param storage the Storage object used by the program"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        ui.showList(taskList.getList());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ttippinyu": 13
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * Gives the type of command based on the string input"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @param fullCommand the string input"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @return the correct command object"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @throws DukeException when the command is not possible"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    static public Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        List\u003cString\u003e words \u003d Arrays.asList(fullCommand.split(\" \"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        switch (words.get(0)) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                return new ExitCommand();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                    int index \u003d Integer.parseInt(words.get(1)) - 1;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                    return new DoneCommand(index);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                    throw new DukeException(\"Not a number\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                    throw new DukeException(\"Please give a number\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                    int index \u003d Integer.parseInt(words.get(1)) - 1;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                    return new DeleteCommand(index);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                    throw new DukeException(\"Not a number\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                    throw new DukeException(\"Please give a number\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                if (words.size() \u003c 2)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                    throw new DukeException(\"Sorry, you need to add a keyword.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                String keyword \u003d String.join(\" \", words.subList(1, words.size()));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                return new FindCommand(keyword);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                String todoDescription \u003d fullCommand.substring(words.indexOf(\" \") + 1);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                todoDescription \u003d todoDescription.trim();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                // if no description"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                if (todoDescription.equals(\"todo\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The description cannot be empty.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                return new AddTodoCommand(todoDescription);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                String deadlineDescription \u003d fullCommand.substring(words.indexOf(\" \") + 1);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                if (deadlineDescription.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The description cannot be empty.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                List\u003cString\u003e deadlineContent \u003d Arrays.asList(deadlineDescription.split(\" /by \"));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                if (deadlineContent.size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                    throw new DukeException(\"Please supply a description or date\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                return new AddDeadlineCommand(deadlineContent.get(0), deadlineContent.get(1));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                String eventDescription \u003d fullCommand.substring(words.indexOf(\" \") + 1);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                if (eventDescription.equals(\"event\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The description cannot be empty.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                List\u003cString\u003e eventContent \u003d Arrays.asList(eventDescription.split(\" /at \"));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                if (eventContent.size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                    throw new DukeException(\"Please supply a description or date\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                return new AddEventCommand(eventContent.get(0), eventContent.get(1));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ttippinyu": 83
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    private String filename;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * Create storage object"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @param filename the name of the file"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    public Storage(String filename) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        this.filename \u003d filename;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * Load the file content"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @return a list of the tasks"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @throws DukeException if file opening has problems"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    public List\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "            BufferedReader inStream \u003d new BufferedReader(new FileReader(this.filename));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "            List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "            while ((line \u003d inStream.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                List\u003cString\u003e words \u003d Arrays.asList(line.split(\"\\\\|\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                switch (words.get(0)) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                        tasks.add(new Todo(words.get(2)));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                    case \"E\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                        tasks.add(new Event(words.get(2), words.get(3)));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                        tasks.add(new Deadline(words.get(2), words.get(3)));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                if (words.get(1).equals(\"1\")) tasks.get(tasks.size()-1).markAsDone();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "            System.out.println(\"FileNotFound, creating new file...\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "            return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "            System.out.println(\"Exception: \" + e.getMessage());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "            return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "            System.out.println(\"Index out of bounds exception: \" + e.getMessage());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "            return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * Saves the list of tasks into the file"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @param tasks the list of tasks to be saved"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    public void save(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "            BufferedWriter outStream \u003d new BufferedWriter(new FileWriter(this.filename));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                outStream.write(task.saveFormat());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                outStream.newLine();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "            outStream.close();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ttippinyu": 72
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "public class Task implements Serializable {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * Creates task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @param description the description of task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * Mark the task as done"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * Gives the string format of the object"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @return [done] description"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        return \"[\" + (this.isDone ? \"\\u2713\" : \"\\u2718\") + \"] \" + this.description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * Gives the string format to be saved"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @return done|description"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    public String saveFormat() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        return (this.isDone ? \"1\" : \"0\") + \"|\" + this.description;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * Check if description contains keyword"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @param keyword keyword to be searched"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @return true or false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    public boolean containsKeyword(String keyword) {return this.description.contains(keyword); }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ttippinyu": 45
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * Create the object based on list of tasks"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @param tasks list of tasks to create object from"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * Gives the list object of tasks"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @return list object of tasks"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    public List\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * Gives the task at index i"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @param index the index of task to be returned"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @return the task at index i"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    public Task get(int index) { return tasks.get(index); }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * Removes the task at index i"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @param index the index of task to be removed"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    public void remove(int index) { tasks.remove(index); }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * Gives size of list"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @return size of list"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    public int size() { return tasks.size(); }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * Add task to end of list"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @param task task to be added"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    public void add(Task task) { tasks.add(task); }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ttippinyu": 46
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * Creates to do task object"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    public Todo (String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * Gives string format of task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @return string format of task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * Gives string format to be saved"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @return string format to be saved"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    public String saveFormat() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        return \"T|\" + super.saveFormat();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ttippinyu": 27
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * Creates Ui object"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        this.scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * Prints indented form of line"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @param line the line to be indented"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    public void printIndent(String line) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        System.out.println(\"    \" + line);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * Prints a line"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        printIndent(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * Prints the welcome message"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        printIndent(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        printIndent(\"What can I do for you?\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * Prints the exit message"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    public void showExit() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        printIndent(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * Prints the error message"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @param message the error message"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    public void showLoadingError(String message) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        printIndent(message);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * Prints the error"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @param message the error message"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    public void showError(String message) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        printIndent(message);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * Reads the input"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @return the string input"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        return this.scanner.nextLine();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * Prints the message for marking a task as done"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @param task the task that was marked as done"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    public void showDone(Task task) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        printIndent(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        printIndent(\"   \" + task.toString());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * Prints the message for deleting a task"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @param task the task that was deleted"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @param size the size of the list"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    public void showDeleted(Task task, int size) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        printIndent(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        printIndent(\"   \" + task.toString());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        printIndent(\"Now you have \" + size + (size \u003d\u003d 1 ? \" task \" : \" tasks \") + \"in the list.\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * Prints the list of tasks with numbers"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @param tasks the list of tasks"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    public void showNumberedTasks(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        for (Task x : tasks) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "            printIndent(counter + \". \" + x);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * Prints the list of all the tasks"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @param tasks the list of tasks"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    public void showList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        printIndent(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        showNumberedTasks(tasks);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * Prints the list of tasks that contain the keyword"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @param tasks the list of tasks that contains the keyword"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    public void showFind(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        printIndent(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        showNumberedTasks(tasks);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * Prints the message for adding a task"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @param task the task to be added"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     * @param size the size of the list"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    public void showAddTask(Task task, int size) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        printIndent(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        printIndent(\"   \" + task);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        printIndent(\"Now you have \" + size + (size \u003d\u003d 1 ? \" task \" : \" tasks \") + \"in the list.\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ttippinyu": 130
    }
  },
  {
    "path": "src/test/CommandParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "public class CommandParserTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    public void commandTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        public List\u003cString\u003e commandStrings \u003d new ArrayList\u003c\u003e(Arrays.asList("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                \"todo read book\","
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                \"event Sports /at 23/09/19 11:00 to 23/09/19 13:00\","
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                \"deadline Task /by 27/09/19 23:59\","
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                \"list\","
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                \"bye\","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                \"find a\","
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                \"done 1\","
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                \"delete 1\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        ));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        public List\u003cCommand\u003e commandTypes \u003d new ArrayList\u003c\u003e(Arrays.asList("
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                new AddTodoCommand(\"read book\"),"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                new AddEventCommand(\"Sports\", \"23/09/19 11:00 to 23/09/19 13:00\"),"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                new AddDeadlineCommand(\"Task\", \"27/09/19 23:59\"),"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                new ListCommand(),"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                new ExitCommand(),"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                new FindCommand(\"a\"),"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                new DoneCommand(1),"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                new DeleteCommand(1)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        ));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        for (int i\u003d0; i\u003c8; i++) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "            assertEquals(Parser.parse(commandStrings.get(i)), commandTypes.get(i));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ttippinyu": 38
    }
  },
  {
    "path": "src/test/DateTimeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "public class DateTimeTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    public void formatTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        public List\u003cString\u003e dateStrings \u003d new ArrayList\u003c\u003e(Arrays.asList("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                \"23/09/19 11:00\","
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                \"23/09/19 13:00\","
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                \"27/09/19 23:59\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        ));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        public List\u003cString\u003e dateFormatted \u003d new ArrayList\u003c\u003e(Arrays.asList("
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                \"23/09/2019 11:00\","
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                \"23/09/2019 13:00\","
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "                \"27/09/2019 23:59\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        ));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        for (int i\u003d0; i\u003c3; i++) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "            assertEquals(dateStrings.get(i).toString(), dateFormatted.get(i));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ttippinyu": 27
    }
  },
  {
    "path": "src/test/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    public void testingAdd() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        Task task \u003d new Todo(\"Do work\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "        assertEquals(taskList.get(0), task);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ttippinyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ttippinyu": 16
    }
  }
]

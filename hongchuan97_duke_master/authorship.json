[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "test {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "run {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    systemProperty \u0027file.encoding\u0027, \u0027UTF-8\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hongchuan97": 23,
      "-": 14
    }
  },
  {
    "path": "src/main/java/AllTask/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "package AllTask;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    public Deadline(String description, boolean done, String by) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        super(description, done);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    public String saveFormat() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        return \"D | \" + super.isDone + \" | \" + super.description + \" | \" + this.by;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hongchuan97": 20
    }
  },
  {
    "path": "src/main/java/AllTask/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "package AllTask;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * Initialise all varible of event."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * @param description String that contains description of event."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * @param done        String that contains the state of event."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * @param date        String That contains the date of event."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * @param time        Strings that contains the time of the event."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    public Event(String description, boolean done, String date, String time) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        super(description, done);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + date + \" \" + time + \")\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    public String saveFormat() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        return \"E | \" + super.isDone + \" | \" + super.description + \" | \" + this.date + \" | \" + this.time;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hongchuan97": 31
    }
  },
  {
    "path": "src/main/java/AllTask/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "package AllTask;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * AllTask.Task constructor"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * @param description The description of the task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * @param done        The state of task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    public Task(String description, boolean done) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        this.isDone \u003d done;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    public void Done() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    public boolean contain(String word) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        return description.contains(word);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    //..."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "hongchuan97": 36
    }
  },
  {
    "path": "src/main/java/AllTask/ToDos.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "package AllTask;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "public class ToDos extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    public ToDos(String description, boolean done) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        super(description, done);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    public String saveFormat() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        return \"T | \" + super.isDone + \" | \" + super.description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hongchuan97": 16
    }
  },
  {
    "path": "src/main/java/Command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import AllTask.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import Data.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import Exceptions.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import Storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import Ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    private Task add;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    public AddCommand(Task add) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        this.add \u003d add;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        tasks.addTask(this.add);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        ui.showAdded(this.add);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        ui.showSize(tasks.list());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hongchuan97": 22
    }
  },
  {
    "path": "src/main/java/Command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import Data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import Exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import Storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import Ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    abstract public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hongchuan97": 14
    }
  },
  {
    "path": "src/main/java/Command/DelCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import AllTask.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import Data.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import Exceptions.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import Storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import Ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "public class DelCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    public DelCommand(int index) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        this.index \u003d index - 1;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        Task del \u003d tasks.delTask(this.index);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        ui.showDel(del);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        ui.showSize(tasks.list());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hongchuan97": 22
    }
  },
  {
    "path": "src/main/java/Command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import AllTask.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import Data.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import Exceptions.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import Storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import Ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        this.index \u003d index - 1;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "            Task done \u003d tasks.doneTask(this.index);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "            ui.showDone(done);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "            storage.saveFile(tasks.list());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hongchuan97": 26
    }
  },
  {
    "path": "src/main/java/Command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import Data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import Exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import Storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import Ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        Ui.showExit();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hongchuan97": 18
    }
  },
  {
    "path": "src/main/java/Command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import AllTask.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import Data.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import Exceptions.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import Storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import Ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        ArrayList\u003cTask\u003e newlist \u003d tasks.find(this.keyword);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        ui.showMatch(newlist);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hongchuan97": 24
    }
  },
  {
    "path": "src/main/java/Command/ShowCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import Data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import Exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import Storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import Ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "public class ShowCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        ui.showList(tasks.list());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hongchuan97": 13
    }
  },
  {
    "path": "src/main/java/Data/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "package Data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import AllTask.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import Exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    private ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * Initialise ArrayList of task to the List input."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * @param list List of task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * Initialise new ArrayList."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        this.list \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * Get the list of task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * @return List of task"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    public ArrayList\u003cTask\u003e list() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        return this.list;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * Mark the task in index as done."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * @param index index of task to mark as done"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * @return Task that is mark as done"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * @throws DukeException Error is input is invalid"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    public Task doneTask(int index) throws DukeException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "            Task done \u003d list.get(index);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "            done.Done();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "            return done;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "            throw new DukeException(\"\\t \\u2639 OOPS!!! The index you entered is not valid.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * Add task into list of task."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * @param task task to be add"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        list.add(task);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * Delete the task at index given."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * @param index index of task to be deleted"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * @return Task that is deleted"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * @throws DukeException Error is input is invalid"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    public Task delTask(int index) throws DukeException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "            Task del \u003d list.get(index);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "            list.remove(index);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "            return del;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "            throw new DukeException(\"\\t \\u2639 OOPS!!! The index you entered is not valid.\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * Search for task that have the word in the descriptions."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * @param word String to search for"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * @return list that contains the word"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    public ArrayList\u003cTask\u003e find(String word) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        ArrayList\u003cTask\u003e newlist \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        for (Task t : list) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "            if (t.contain(word)) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                newlist.add(t);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        return newlist;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hongchuan97": 97
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import Command.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import Data.TaskList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import Exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import Parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import Storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import Ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import java.util.StringTokenizer;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        new Duke(\".\\\\src\\\\main\\\\java\\\\Data\\\\duke.txt\").run();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * Load all requirement before running duke."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * @param filePath String of path to file that contains task list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * Run Duke."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                StringTokenizer fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hongchuan97": 54,
      "-": 4
    }
  },
  {
    "path": "src/main/java/Exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "package Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    public DukeException(String err) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        super(err);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hongchuan97": 7
    }
  },
  {
    "path": "src/main/java/Parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "package Parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import Command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import Exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import AllTask.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import java.util.NoSuchElementException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import java.util.StringTokenizer;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import Command.*;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * Parse string into individual commands according to string."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * @param msg The entire command string in the form of token."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * @return Command object according to the string."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * @throws DukeException Error if input is incorrect"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    public static Command parse(StringTokenizer msg) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        switch (msg.nextToken()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                return new ExitCommand();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                return new ShowCommand();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                    return new DoneCommand(Integer.parseInt(msg.nextToken()));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                    throw new DukeException(\" \\u2639 OOPS!!! Please enter the index of which task to be done.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                    String description \u003d msg.nextToken();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                    while (msg.hasMoreTokens()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                        description +\u003d \" \" + msg.nextToken();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                    Task toDos \u003d new ToDos(description, false);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                    return new AddCommand(toDos);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                    throw new DukeException(\" \\u2639 OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                    String holder \u003d msg.nextToken();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                    String check \u003d msg.nextToken();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                    while (!\"/by\".equals(check)) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                        holder +\u003d \" \" + check;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                        check \u003d msg.nextToken();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                    String by \u003d parseDate(msg.nextToken());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                    Task deadline \u003d new Deadline(holder, false, by);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                    return new AddCommand(deadline);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                    throw new DukeException(\" \\u2639 OOPS!!! Error in deadline input.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                    String eventholder \u003d msg.nextToken();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                    String check2 \u003d msg.nextToken();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                    while (!\"/at\".equals(check2)) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                        eventholder +\u003d \" \" + check2;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                        check2 \u003d msg.nextToken();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                    String date \u003d parseDate(msg.nextToken());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                    String time \u003d parseTime(msg.nextToken());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                    Task event \u003d new Event(eventholder, false, date, time);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                    return new AddCommand(event);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                    throw new DukeException(\" \\u2639 OOPS!!! Error in event input.\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                    return new DelCommand(Integer.parseInt(msg.nextToken()));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                    throw new DukeException(\" \\u2639 OOPS!!! Please enter the index of which task to be deleted.\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                    String keyword \u003d msg.nextToken();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                    while (msg.hasMoreTokens()) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                        keyword +\u003d \" \" + msg.nextToken();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                    return new FindCommand(keyword);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                    throw new DukeException(\" \\u2639 OOPS!!!\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                throw new DukeException(\" \\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * Reformat time from 24hour notation to 12hour notation."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * @param time String of time in 24hour notation."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * @return String of time in 12hour notation."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * @throws DukeException Error if time input is incorrect"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    private static String parseTime(String time) throws DukeException {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "            SimpleDateFormat Format \u003d new SimpleDateFormat(\"HHmm\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "            Date dateForm \u003d Format.parse(time);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "            SimpleDateFormat newFormat \u003d new SimpleDateFormat(\"K:mmaa\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "            return newFormat.format(dateForm);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "            throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * Reformat the date from dd/MM/yyyy to month and date."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * @param date String of date in dd/MM/yyyy."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * @return String of date in month and date."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * @throws DukeException Error if date format is incorrect"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    private static String parseDate(String date) throws DukeException {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "            SimpleDateFormat Format \u003d new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "            Date dateForm \u003d Format.parse(date);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "            SimpleDateFormat newFormat \u003d new SimpleDateFormat(\"MMM dd\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "            return newFormat.format(dateForm);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "            throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hongchuan97": 138
    }
  },
  {
    "path": "src/main/java/Storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "package Storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import AllTask.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import AllTask.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import AllTask.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import AllTask.ToDos;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import Exceptions.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * Load file from storage into a Task List."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * @return A List of task"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * @throws DukeException Error if file cannot be loaded."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "            File fw \u003d new File(filePath);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "            Scanner fileReader \u003d new Scanner(fw);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "            while (fileReader.hasNext()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                String[] component \u003d fileReader.nextLine().split(\" \\\\| \");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                switch (component[0]) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                        Task todo \u003d new ToDos(component[2], \"true\".equals(component[1]));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                        list.add(todo);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                        Task deadline \u003d new Deadline(component[2], \"true\".equals(component[1]), component[3]);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                        list.add(deadline);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                    case \"E\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                        Task event \u003d new Event(component[2], \"true\".equals(component[1]), component[3], component[4]);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                        list.add(event);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "            return list;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "            throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * Save TaskList into file."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * @param list List of Task."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * @throws DukeException Error if file cannot be save."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    public void saveFile(ArrayList\u003cTask\u003e list) throws DukeException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(f);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "            for (Task t : list) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                String line;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                if (t instanceof Deadline) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                    line \u003d ((Deadline) t).saveFormat();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                } else if (t instanceof ToDos) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                    line \u003d ((ToDos) t).saveFormat();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                    line \u003d ((Event) t).saveFormat();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                fileWriter.write(line + \"\\n\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "            throw new DukeException(\"File not found: \" + e.getMessage());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hongchuan97": 85
    }
  },
  {
    "path": "src/main/java/Ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "package Ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import AllTask.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import java.util.StringTokenizer;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    private Scanner Input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * Print welcome interface."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        System.out.println(\"\\t Hello! I\u0027m Duke \\n\\t What can I do for you?\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * Print dividing line."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        String lines \u003d \"\\t____________________________________________________________\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        System.out.println(lines);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * Reads inputs from users."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * @return User input in form of token."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    public StringTokenizer readCommand() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        return new StringTokenizer(this.Input.nextLine());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * Print error message."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * @param message String that contains error message."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    public void showError(String message) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        System.out.println(\"\\t \" + message);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * Print loading error interface."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        System.out.println(\"\\t Failed to load file\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * Print show task interface."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * @param list ArrayList of task to be printed."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    public void showList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        System.out.println(\"\\t Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        printList(list);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * Print the list of task."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * @param list ArrayList of task to be printed."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    public void printList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "            System.out.println(\"\\t \" + (i + 1) + \".\" + list.get(i).toString());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "            ;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * Print done task interface."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * @param done Task object that is done."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    public void showDone(Task done) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        System.out.println(\"\\t Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        System.out.println(\"\\t \" + done.toString());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * Print the size of the list provided."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * @param list ArrayList of task."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    public void showSize(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        System.out.println(\"\\t Now you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * Print add task interface."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * @param add Task object that is added."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    public void showAdded(Task add) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        System.out.println(\"\\t Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        System.out.println(\"\\t \" + add.toString());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * Print delete interface."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * @param del Task object that is deleted."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    public void showDel(Task del) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        System.out.println(\"\\t Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        System.out.println(\"\\t  \" + del.toString());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * Print ShowList interface."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * @param list The list of task to print."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    public void showMatch(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        System.out.println(\"\\t Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        printList(list);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     * Print exit interface."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    public static void showExit() {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        System.out.println(\"\\t Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hongchuan97": 138
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import AllTask.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    Deadline deadline \u003d new Deadline(\"return book\", false, \"June 6th\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    void TestToString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        assertEquals(deadline.toString(), \"[D][\" + \"\\u2718\" + \"] return book (by: June 6th)\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    void TestSaveFormat() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        assertEquals(deadline.saveFormat(), \"D | false | return book | June 6th\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hongchuan97": 18
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import AllTask.Event;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    Event task \u003d new Event(\"books\", false , \"Jan 01\" , \"3:30PM\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    void TestToString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        assertEquals(task.toString(), \"[E][\" + \"\\u2718\" + \"] books (at: Jan 01 3:30PM)\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    void TestSaveFormat() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        assertEquals(task.saveFormat(), \"E | false | books | Jan 01 | 3:30PM\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hongchuan97": 18
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import AllTask.ToDos;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import Command.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import Exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import Parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import java.util.StringTokenizer;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    void TestParse(){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        String task\u003d \"todo mon\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        StringTokenizer todo \u003d new StringTokenizer(task);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        String task2\u003d \"bye\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        StringTokenizer exit \u003d new StringTokenizer(task2);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        String task3 \u003d \"list\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        StringTokenizer show \u003d new StringTokenizer(task3);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        String task4 \u003d \"find\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        StringTokenizer find \u003d new StringTokenizer(task4);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        String task5 \u003d \"delete\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        StringTokenizer del \u003d new StringTokenizer(task5);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        String task6 \u003d \"done 1\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        StringTokenizer done \u003d new StringTokenizer(task6);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "            System.out.println(\"Testing Parse\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "            assertTrue(Parser.parse(todo) instanceof AddCommand);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "            assertTrue(Parser.parse(exit) instanceof ExitCommand);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "            assertTrue(Parser.parse(show) instanceof ShowCommand);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "            assertTrue(Parser.parse(find) instanceof FindCommand);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "            assertTrue(Parser.parse(del) instanceof DelCommand);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "            assertTrue(Parser.parse(done) instanceof DoneCommand);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "            System.out.println(\"Fail parse\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hongchuan97": 43
    }
  },
  {
    "path": "src/test/java/TodosTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import AllTask.ToDos;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "public class TodosTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    ToDos task \u003d new ToDos(\"return book\", false);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    void TestToString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        assertEquals(task.toString(), \"[T][\" + \"\\u2718\" + \"] return book\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    void TestSaveFormat() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "        assertEquals(task.saveFormat(), \"T | false | return book\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hongchuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hongchuan97": 18
    }
  }
]

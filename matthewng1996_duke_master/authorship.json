[
  {
    "path": "src/main/java/Deadline.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        return \"[D]\" + \"[\" + super.getStatusIcon() + \"]\" + description + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "matthewng1996": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        String myString \u003d new String();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        System.out.println(\"______________________________\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        System.out.println(\"______________________________\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        myString \u003d input.nextLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        LoadData(taskList);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        while (!myString.equals(\"bye\"))"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            if (myString.equals(\"list\"))"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                if (taskList.size() \u003e 0) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        doList(taskList);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        System.out.println(\"______________________________\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        System.out.println(e);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        System.out.println(\"______________________________\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    System.out.println(\"______________________________\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    System.out.println(\"List is empty!\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    System.out.println(\"______________________________\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            else if (myString.indexOf(\"done\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "               try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                   doneTask(myString, taskList);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "               } catch (DukeException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                   System.out.println(\"______________________________\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                   System.out.println(e);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                   System.out.println(\"______________________________\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "               }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            else if (myString.indexOf(\"todo\") \u003d\u003d 0){"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    todo(myString, taskList);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    System.out.println(\"______________________________\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    System.out.println(e);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    System.out.println(\"______________________________\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            else if (myString.indexOf(\"deadline\") \u003d\u003d 0){"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    deadline(myString, taskList);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    System.out.println(\"______________________________\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    System.out.println(e);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    System.out.println(\"______________________________\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                } catch (ParseException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    e.printStackTrace();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            else if (myString.indexOf(\"event\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    event(myString, taskList);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                } catch (DukeException | ParseException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    System.out.println(\"______________________________\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    System.out.println(e);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    System.out.println(\"______________________________\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            else if (myString.indexOf(\"delete\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    deleteTask(myString, taskList);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    e.printStackTrace();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            else if (myString.indexOf(\"find\") \u003d\u003d 0)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                String secondWord \u003d myString.substring(myString.indexOf(\" \"));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    findKeywords(secondWord, taskList);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    System.out.println(e);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            else"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                System.out.println(\"______________________________\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                System.out.println(\"______________________________\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            myString \u003d input.nextLine();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        if (myString.equals(\"bye\"))"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            SaveData(taskList);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            System.out.println(\"______________________________\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            System.out.println(\"______________________________\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static void doList(ArrayList\u003cTask\u003e taskList) throws DukeException {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        System.out.println(\"______________________________\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        if (taskList.size() \u003d\u003d 0)"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            throw new DukeException(\"Your list is empty!\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                Task task \u003d taskList.get(i);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                System.out.println((i + 1) + \".\" + taskList.get(i));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        System.out.println(\"______________________________\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static void doneTask(String myString, ArrayList\u003cTask\u003e taskList) throws DukeException{"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        if (myString.indexOf(\" \") \u003d\u003d -1)"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Done command needs a relevant number\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            String secondWord \u003d myString.substring(myString.indexOf(\" \"));"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            secondWord \u003d secondWord.replaceAll(\"\\\\s\", \"\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            int taskIndex \u003d Integer.parseInt(secondWord);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            Task task \u003d taskList.get(taskIndex - 1);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            task.isDone \u003d true;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            System.out.println(\"______________________________\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            System.out.println(\"[\" + task.getStatusIcon() + \"] \" + task.description);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            System.out.println(\"______________________________\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static void deleteTask(String myString, ArrayList\u003cTask\u003e taskList) throws DukeException{"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        if (myString.indexOf(\" \") \u003d\u003d -1)"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Delete command needs a relevant number\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        else"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            String secondWord \u003d myString.substring(myString.indexOf(\" \"));"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            secondWord \u003d secondWord.replaceAll(\"\\\\s\", \"\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            int taskIndex \u003d Integer.parseInt(secondWord);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            Task task \u003d taskList.get(taskIndex - 1);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            taskList.remove(taskIndex - 1);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            System.out.println(\"______________________________\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            System.out.println(task.toString());"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            System.out.println(\"______________________________\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static void todo(String myString, ArrayList\u003cTask\u003e taskList) throws DukeException{"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        if (myString.indexOf(\" \") \u003d\u003d -1)"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of todo cannot be empty.\");"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            String secondWord \u003d myString.substring(myString.indexOf(\" \") + 1);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            if (secondWord.isEmpty())"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! The description of todo cannot be empty.\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            Task newTask \u003d new Todo(myString, secondWord);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            taskList.add(newTask);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            System.out.println(\"______________________________\");"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            System.out.println(newTask.toString());"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            if (taskList.size() \u003d\u003d 1)"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                System.out.println(\"Now you have \" + taskList.size() + \" task in the list.\");"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            else"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            System.out.println(\"______________________________\");"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static void deadline (String myString, ArrayList\u003cTask\u003e taskList) throws DukeException, ParseException {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        String keyStroke \u003d \"/\";"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        String description \u003d myString.substring(myString.indexOf(\" \") + 1, myString.indexOf(keyStroke));"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        description \u003d description.replaceAll(\" \", \"\");"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        if (description.isEmpty())"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of deadline cannot be empty.\");"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        int index \u003d myString.indexOf(keyStroke);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        if (index \u003d\u003d -1)"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            throw new DukeException(\"Deadline comes with a /by!\");"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            String task \u003d myString.substring(myString.indexOf(\" \"), index);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            String date \u003d myString.substring(index + 3);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            String temp \u003d date;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            date \u003d date.replaceAll(\" \", \"\");"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            if (date.isEmpty())"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but you need a date/time for your deadline\");"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            else if (temp.matches(\" ([0-9]{1,2})/([0-9]{1,2})/([0-9]{4}) ([0-9]{4})\")) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                SimpleDateFormat parser \u003d new SimpleDateFormat(\"dd/MM/yyy HHmm\");"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd MMM yyy, h:mma\"); //Desired format"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                Date dateInput \u003d parser.parse(temp);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                date \u003d formatter.format(dateInput);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                System.out.println(\"Your specified deadline is \" + date);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            } else if (temp.matches(\" ([0-9]{1,2})/([0-9]{1,2})/([0-9]{4})\")) {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                SimpleDateFormat parser \u003d new SimpleDateFormat(\"dd/MM/yyy\");"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd MMM yyy\"); //Desired Format"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                Date dateInput \u003d parser.parse(temp);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                date \u003d formatter.format(dateInput);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                System.out.println(\"Your specified deadline is \" + date);"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            } else"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                System.out.println(\"Do note that you did not specify any deadline though.\");"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            Task newTask \u003d new Deadline(task, temp);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            System.out.println(\"______________________________\");"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            System.out.println(newTask.toString());"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            taskList.add(newTask);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            if (taskList.size() \u003d\u003d 1)"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                System.out.println(\"Now you have \" + taskList.size() + \" task in the list.\");"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            else"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            System.out.println(\"______________________________\");"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static void event (String myString, ArrayList\u003cTask\u003e taskList) throws DukeException, ParseException {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        String keyStroke \u003d \"/\";"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        int index \u003d myString.indexOf(keyStroke);"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        String description \u003d myString.substring(myString.indexOf(\" \") + 1, index);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        description \u003d description.replaceAll(\" \", \"\");"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        if (description.isEmpty())"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of event cannot be empty.\");"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        if (index \u003d\u003d -1)"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            throw new DukeException(\"Event comes with a /at!\");"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            String task \u003d myString.substring(myString.indexOf(\" \"), index);"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            String date \u003d myString.substring(index + 3);"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            String temp \u003d date;"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            date \u003d date.replaceAll(\" \", \"\");"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            if (date.isEmpty())"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but you need a date/time for your event\");"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            else if (temp.matches(\" ([0-9]{1,2})/([0-9]{1,2})/([0-9]{4}) ([0-9]{4})\")) {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                SimpleDateFormat parser \u003d new SimpleDateFormat(\"dd/MM/yyy HHmm\");"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd MMM yyy, h:mma\"); //Desired format"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                Date dateInput \u003d parser.parse(temp);"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                date \u003d formatter.format(dateInput);"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                System.out.println(\"Your specified deadline is \" + date);"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            } else if (temp.matches(\" ([0-9]{1,2})/([0-9]{1,2})/([0-9]{4})\")) {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                SimpleDateFormat parser \u003d new SimpleDateFormat(\"dd/MM/yyy\");"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd MMM yyy\"); //Desired Format"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                Date dateInput \u003d parser.parse(temp);"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                date \u003d formatter.format(dateInput);"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                System.out.println(\"Your specified event is on the \" + date);"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            } else"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                System.out.println(\"Do note that you did not specify any date/time for event though.\");"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            Task newTask \u003d new Event(task, temp);"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            System.out.println(\"______________________________\");"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            System.out.println(newTask.toString());"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            taskList.add(newTask);"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            if (taskList.size() \u003d\u003d 1)"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                System.out.println(\"Now you have \" + taskList.size() + \" task in the list.\");"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            else"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            System.out.println(\"______________________________\");"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        }"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static void findKeywords(String keyword, ArrayList\u003cTask\u003e taskList) throws DukeException"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        String temp \u003d keyword;"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        temp \u003d temp.replaceAll(\" \", \"\");"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        if (temp.isEmpty())"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            throw new DukeException(\"Empty search\");"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        ArrayList\u003cTask\u003e keywordList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++)"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        {"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            if (taskList.get(i).description.contains(keyword))"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                keywordList.add(taskList.get(i));"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        }"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        System.out.println(\"______________________________\");"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        for (int i \u003d 0; i \u003c keywordList.size(); i++)"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            System.out.println(keywordList.get(i).toString());"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        System.out.println(\"______________________________\");"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static void LoadData(ArrayList\u003cTask\u003e taskList)"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    {"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            FileInputStream input \u003d new FileInputStream(\"duke.txt\");"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            ObjectInputStream load \u003d new ObjectInputStream(input);"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            taskList.add((Task)load.readObject());"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            load.close();"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        } catch (ClassNotFoundException e) {"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        }"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static void SaveData(ArrayList\u003cTask\u003e taskList)"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    {"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            //Open file"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            FileOutputStream saveFile \u003d new FileOutputStream(\"duke.txt\");"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            //Objects into save file"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            ObjectOutputStream save \u003d new ObjectOutputStream(saveFile);"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            //Saving the taskList"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            for (Task task : taskList)"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                save.writeObject(task);"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            save.close();"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        }"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "matthewng1996": 358,
      "-": 11
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "matthewng1996": 6
    }
  },
  {
    "path": "src/main/java/Event.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public String toString()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        return \"[E]\" + \"[\" + super.getStatusIcon() + \"]\" + description + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "matthewng1996": 14
    }
  },
  {
    "path": "src/main/java/Task.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "public class Task implements Serializable {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "matthewng1996": 16
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "public class Todo extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    protected String task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public Todo(String description, String task) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        return \"[T]\" + \"[\" + super.getStatusIcon() + \"]\" + task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "matthewng1996": 13
    }
  }
]

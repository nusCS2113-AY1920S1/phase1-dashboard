[
  {
    "path": "build.gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Maxx"
        },
        "content": "    "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Maxx"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Maxx"
        },
        "content": "    "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Maxx"
        },
        "content": "    "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Maxx": 4,
      "Jeffry Lum": 15
    }
  },
  {
    "path": "settings.gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "rootProject.name \u003d \u0027duke\u0027"
      }
    ],
    "authorContributionMap": {
      "Jeffry Lum": 1
    }
  },
  {
    "path": "src/main/java/Data.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Maxx"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Maxx"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Maxx"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Maxx"
        },
        "content": "public class Data {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Maxx"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Maxx"
        },
        "content": "    //Task Loading"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Maxx"
        },
        "content": "    public static ArrayList\u003cTask\u003e loadTask(ArrayList\u003cTask\u003e log) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Maxx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Maxx"
        },
        "content": "            FileInputStream fileIS \u003d new FileInputStream(\"./taskLog\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Maxx"
        },
        "content": "            ObjectInputStream objectIS \u003d new ObjectInputStream(fileIS);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Maxx"
        },
        "content": "            //Writes the stuff in the file to log"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Maxx"
        },
        "content": "            log \u003d (ArrayList\u003cTask\u003e) objectIS.readObject();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Maxx"
        },
        "content": "            objectIS.close();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Maxx"
        },
        "content": "            fileIS.close();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Maxx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Maxx"
        },
        "content": "        catch (FileNotFoundException f) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Maxx"
        },
        "content": "            //Creates a file if there is no file found"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Maxx"
        },
        "content": "            System.out.println(\"No file, i Created a file for ya :D\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Maxx"
        },
        "content": "            File newLog \u003d new File(\"./taskLog\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Maxx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Maxx"
        },
        "content": "        catch (IOException i) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Maxx"
        },
        "content": "            System.out.println(\"IO Exception from loadTask detected\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Maxx"
        },
        "content": "            i.printStackTrace();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Maxx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Maxx"
        },
        "content": "        catch (ClassNotFoundException c) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Maxx"
        },
        "content": "            System.out.println(\"Class Not Found Exception from loadTask detected\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Maxx"
        },
        "content": "            c.printStackTrace();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Maxx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Maxx"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Maxx"
        },
        "content": "        return log;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Maxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Maxx"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Maxx"
        },
        "content": "    public static void saveTask(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Maxx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Maxx"
        },
        "content": "            FileOutputStream fileOS \u003d new FileOutputStream(\"./taskLog\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Maxx"
        },
        "content": "            ObjectOutputStream objectOS \u003d new ObjectOutputStream(fileOS);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Maxx"
        },
        "content": "            objectOS.writeObject(taskList);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Maxx"
        },
        "content": "            objectOS.close();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Maxx"
        },
        "content": "            fileOS.close();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Maxx"
        },
        "content": "            //System.out.println(\"Serialized data is saved in /taskLog\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Maxx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Maxx"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Maxx"
        },
        "content": "        catch (IOException i) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Maxx"
        },
        "content": "            System.out.println(\"IO Exception from saveTask detected\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Maxx"
        },
        "content": "            i.printStackTrace();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Maxx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Maxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Maxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Maxx": 48
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "maxxyx96"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "maxxyx96"
        },
        "content": "import java.text.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "maxxyx96"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Maxx"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Maxx"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "maxxyx96"
        },
        "content": "    protected Date dueDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Maxx"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "maxxyx96"
        },
        "content": "    //Formats date to something that is nice :D"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "maxxyx96"
        },
        "content": "    protected SimpleDateFormat simpleDateFormat \u003d new SimpleDateFormat(\"dd MMMMM yyyy, hh:mm a\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Maxx"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "maxxyx96"
        },
        "content": "    public Deadline(String description, Date dueDate) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Maxx"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "maxxyx96"
        },
        "content": "        this.dueDate \u003d dueDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "maxxyx96"
        },
        "content": "        //Convert dueDate into something nicer"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "maxxyx96"
        },
        "content": "        by \u003d simpleDateFormat.format(dueDate);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Maxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Maxx"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Maxx"
        },
        "content": "    //To include [D] whatever by whenever into the string"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Maxx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Maxx"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Maxx"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Maxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Maxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "maxxyx96": 10,
      "Maxx": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Maxx"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Maxx"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "maxxyx96"
        },
        "content": "import java.text.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Maxx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Maxx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Maxx"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Maxx"
        },
        "content": "        //array of Tasks generation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Maxx"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Maxx"
        },
        "content": "        taskList \u003d Data.loadTask(taskList);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Maxx"
        },
        "content": "        //Input device"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Maxx"
        },
        "content": "        Scanner newInput \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Maxx"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "maxxyx96"
        },
        "content": "        //Tool to recognise date from string"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "maxxyx96"
        },
        "content": "        SimpleDateFormat dateFormat\u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Maxx"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Maxx"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Maxx"
        },
        "content": "        //Introduction"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Maxx"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Maxx"
        },
        "content": "        System.out.println(\"What can i do for you?\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Maxx"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Maxx"
        },
        "content": "        //Input declaration"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Maxx"
        },
        "content": "        String userText \u003d \"\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Maxx"
        },
        "content": "        String inputTask \u003d \"\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Maxx"
        },
        "content": "        String[] splitTask;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Maxx"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Maxx"
        },
        "content": "        //Input declaration"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Maxx"
        },
        "content": "        userText \u003d newInput.nextLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Maxx"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Maxx"
        },
        "content": "        //Get first keyword"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Maxx"
        },
        "content": "        String userCommand \u003d userText.contains(\" \") ? userText.split(\" \")[0] : userText;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Maxx"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Maxx"
        },
        "content": "        while (!userText.equals(\"bye\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Maxx"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Maxx"
        },
        "content": "            //Switch will contain list, done, default will add to list."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Maxx"
        },
        "content": "            switch (userCommand) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                    int number \u003d 1;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                    //Outputs the list if its non-empty"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                    if(taskList.isEmpty()){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                        System.out.println(\"List currently has nothing\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                    else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                        for (Task currentTask : taskList) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                            System.out.print(number + \". \");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                            System.out.println(currentTask);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                            number +\u003d 1;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Maxx"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                    //Replace \"event \" with \"\" to get actual event"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                    inputTask \u003d userText.replaceFirst(\"event\", \"\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Maxx"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                    //Error Handling"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "maxxyx96"
        },
        "content": "                    if (inputTask.equals(\"\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                        System.out.println(\"☹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                    if (inputTask.indexOf(\"/at\") \u003d\u003d -1) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                        System.out.println(\"☹ OOPS!!! The event must be specified with /at \u003cdate and time\u003e!\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Maxx"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                    //get the details before and after /at"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                    splitTask \u003d inputTask.split(\"/at\", 2);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                    Task inputEvent \u003d new Event(splitTask[0], splitTask[1]);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                    taskList.add(inputEvent);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task: \\n\" + inputEvent);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                    System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                    Data.saveTask(taskList);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Maxx"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                    //Replace \"deadline \" with \"\" to get actual deadline"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                    inputTask \u003d userText.replaceFirst(\"deadline\", \"\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                    //Error handling"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "maxxyx96"
        },
        "content": "                    if (inputTask.equals(\"\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                        System.out.println(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                    if (inputTask.indexOf(\"/by\") \u003d\u003d -1) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                        System.out.println(\"☹ OOPS!!! The due date must be specified with /by \u003cdue date\u003e!\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Maxx"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                    //get the details before and after /by"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                    splitTask \u003d inputTask.split(\" /by \", 2);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "maxxyx96"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "maxxyx96"
        },
        "content": "                        Date dueDate \u003d dateFormat.parse(splitTask[1]);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "maxxyx96"
        },
        "content": "                        Task inputDeadline \u003d new Deadline(splitTask[0], dueDate);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                        taskList.add(inputDeadline);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                        System.out.println(\"Got it. I\u0027ve added this task: \\n\" + inputDeadline);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                        Data.saveTask(taskList);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "maxxyx96"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "maxxyx96"
        },
        "content": "                    //If user dont put the date properly or horhhhh"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "maxxyx96"
        },
        "content": "                    catch (ParseException e)"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "maxxyx96"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "maxxyx96"
        },
        "content": "                        System.out.println(\"☹ Please format deadline with: DD/MM/YYYY HHMM, eg: 02/12/2019 1800\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "maxxyx96"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "maxxyx96"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Maxx"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                    //Replace \"to do \" with \"\" to get actual to do"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                    inputTask \u003d userText.replaceFirst(\"todo\", \"\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Maxx"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                    //Error handling"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "maxxyx96"
        },
        "content": "                    if (inputTask.equals(\"\") || inputTask.equals(\" \")) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                        System.out.println(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                    //Create new to do"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                    Task inputTodo \u003d new Todo(inputTask);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                    taskList.add(inputTodo);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                    //Notify user"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task: \\n\" + inputTodo);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                    System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                    Data.saveTask(taskList);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Maxx"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                    //Kill off the word done. -1 to account for 0 based indexing"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                    int completedIndex \u003d -1 + Integer.parseInt(userText.replaceAll(\"[\\\\D]\", \"\"));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                    //Stuff for done"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                    Task markDone \u003d taskList.get(completedIndex);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                    markDone.markAsDone();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                    System.out.println(markDone);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                    Data.saveTask(taskList);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Maxx"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "maxxyx96"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "maxxyx96"
        },
        "content": "                    //Kill off the word delete. -1 to account for 0 based indexing"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "maxxyx96"
        },
        "content": "                    int deleteIndex \u003d Integer.parseInt(userText.replaceAll(\"[\\\\D]\", \"\")) - 1;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "maxxyx96"
        },
        "content": "                    Task markDelete \u003d taskList.get(deleteIndex);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "maxxyx96"
        },
        "content": "                    System.out.println(\"Noted. I\u0027ve removed this task: \\n\" + markDelete);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "maxxyx96"
        },
        "content": "                    System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "maxxyx96"
        },
        "content": "                    taskList.remove(deleteIndex);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "maxxyx96"
        },
        "content": "                    Data.saveTask(taskList);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "maxxyx96"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "maxxyx96"
        },
        "content": "                case \"find\":"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "maxxyx96"
        },
        "content": "                    inputTask \u003d userText.replaceFirst(\"find\", \"\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "maxxyx96"
        },
        "content": "                    if (inputTask.equals(\"\")) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "maxxyx96"
        },
        "content": "                        System.out.println(\"☹ OOPS!!! You cant find an empty task!\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "maxxyx96"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "maxxyx96"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "maxxyx96"
        },
        "content": "                    //Create a new arraylist for storing searches"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "maxxyx96"
        },
        "content": "                    ArrayList\u003cTask\u003e searchList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "maxxyx96"
        },
        "content": "                    int searchNumber \u003d 1;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "maxxyx96"
        },
        "content": "                    for (Task searchTask : taskList) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "maxxyx96"
        },
        "content": "                        if (searchTask.description.contains(inputTask)) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "maxxyx96"
        },
        "content": "                            //store it inside a new arraylist"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "maxxyx96"
        },
        "content": "                            searchList.add(searchTask);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "maxxyx96"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "maxxyx96"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "maxxyx96"
        },
        "content": "                    if (searchList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "maxxyx96"
        },
        "content": "                        System.out.println(\"☹ OOPS!!! Nothing matches your search!\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "maxxyx96"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "maxxyx96"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "maxxyx96"
        },
        "content": "                    System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "maxxyx96"
        },
        "content": "                    for (Task currentTask : searchList) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "maxxyx96"
        },
        "content": "                        System.out.print(searchNumber + \". \");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "maxxyx96"
        },
        "content": "                        System.out.println(currentTask);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "maxxyx96"
        },
        "content": "                        searchNumber +\u003d 1;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "maxxyx96"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "maxxyx96"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "maxxyx96"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Maxx"
        },
        "content": "                    System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Maxx"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Maxx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Maxx"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Maxx"
        },
        "content": "            //Prepare for next input"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Maxx"
        },
        "content": "            userText \u003d newInput.nextLine();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Maxx"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Maxx"
        },
        "content": "            //Get first keyword"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Maxx"
        },
        "content": "            userCommand \u003d userText.contains(\" \") ? userText.split(\" \")[0] : userText;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Maxx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Maxx"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Maxx"
        },
        "content": "        //Bye"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Maxx"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "maxxyx96": 52,
      "Maxx": 131,
      "-": 10
    }
  },
  {
    "path": "src/main/java/Event.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Maxx"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Maxx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Maxx"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Maxx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Maxx"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Maxx"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Maxx"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Maxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Maxx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Maxx"
        },
        "content": "    //To include [E] whatever at whenever time into the string"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Maxx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Maxx"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Maxx"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Maxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Maxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Maxx": 15
    }
  },
  {
    "path": "src/main/java/Task.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Maxx"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Maxx"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Maxx"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Maxx"
        },
        "content": "public class Task implements Serializable {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Maxx"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Maxx"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Maxx"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Maxx"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Maxx"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Maxx"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Maxx"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Maxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Maxx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Maxx"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Maxx"
        },
        "content": "        //return (isDone ? \"O\" : \"X\"); //O tick X cross, cant see unicode :/"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Maxx"
        },
        "content": "        return (isDone ? \"✓\" : \"✗\"); //return tick or X symbols"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Maxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Maxx"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Maxx"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Maxx"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Maxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Maxx"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Maxx"
        },
        "content": "    //To include [X]/[TICK] whatever into the string"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Maxx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Maxx"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Maxx"
        },
        "content": "        return \"[\" + getStatusIcon() + \"]\" + this.description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Maxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Maxx"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Maxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Maxx": 29
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Maxx"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Maxx"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Maxx"
        },
        "content": "import java.io.ObjectOutputStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Maxx"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Maxx"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Maxx"
        },
        "content": "public class Todo extends Task implements Serializable {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Maxx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Maxx"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Maxx"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Maxx"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Maxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Maxx"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Maxx"
        },
        "content": "    //To include [T] whatever into the string"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Maxx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Maxx"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Maxx"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Maxx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Maxx"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Maxx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Maxx": 19
    }
  }
]

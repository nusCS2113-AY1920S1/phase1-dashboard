[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "test {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "danisheddie": 18,
      "-": 19
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import Exceptions.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import Parser.DateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import Storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import model.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import model.Events;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import model.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import model.ToDos;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public static void main(String[] args) throws Exception {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "//        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "//                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "//                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "//                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "//                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "//        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        System.out.println(\"What can I do for you\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        ArrayList\u003cTask\u003e lib \u003d new ArrayList\u003cTask\u003e(); // Store command in array"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in); // To read input"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        Storage save \u003d new Storage(lib);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        Storage read \u003d new Storage(lib);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        read.ReadFile(lib);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            String cmd \u003d sc.nextLine(); // Will go next line after sending command"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            if (cmd.equals(\"list\")) { // Will print out all the command that is in the array"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                System.out.println(\"Here are the tasks in your list: \");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                for (int i \u003d 0; i \u003c lib.size(); i++) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                    System.out.print(i + 1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                    System.out.println(\".\" + lib.get(i).getDescription());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                // Display everything"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            } else if (cmd.equals(\"bye\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            } else if (cmd.contains(\"done\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                String[] allInputs \u003d cmd.split(\" \"); // Split the input string by spaces"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                for (String i : allInputs) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                    if (!i.equals(\"done\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                        int index \u003d Integer.parseInt(i) - 1; // Changing the string to integer"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                        lib.get(index).tickIcon(); // Change the x to tick"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                        System.out.println(lib.get(index).getDescription());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                        save.saveToFile(lib);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            } else if (cmd.contains(\"todo\")) { // If cmd contains todo"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                String[] todoInputs \u003d cmd.split(\" \"); // Split the strongs by the spaces"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                List\u003cString\u003e listInputs \u003d new ArrayList\u003c\u003e(Arrays.asList(todoInputs)); // Making the string into a list of strings"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                    if (listInputs.size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                        throw new DukeException(\"todo\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                } catch (DukeException error) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                    System.out.println(\" ☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                listInputs.remove(0); // Remove the first index of the string which is \"todo\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                String description \u003d String.join(\" \", listInputs); // Will return the string \"borrow book\""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                ToDos newToDos \u003d new ToDos(description); // Creating a new object"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                System.out.println(\"\\t\" + newToDos.getDescription());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                lib.add(newToDos); // Add the new task into the list of tasktodo"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                save.saveToFile(lib);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                System.out.println(\"Now you have \" + lib.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            } else if (cmd.contains(\"deadline\")) { // IF cmd contains deadline"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                String[] deadlineInputs \u003d cmd.split(\" \");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                List\u003cString\u003e listInputs \u003d new ArrayList\u003c\u003e(Arrays.asList(deadlineInputs)); // Making the string into a list of strings"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                listInputs.remove(0); // Remove the first index of the string which is \"deadline\""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                String description \u003d String.join(\" \", listInputs); // Will return the string \"borrow book\""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                String[] dayInput \u003d description.split(\" /by \");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                Deadline newDeadline \u003d new Deadline(dayInput[0], new DateTime().formatDateTime(dayInput[1])); // to select the description and day"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                System.out.println(\"\\t\" + newDeadline.getDescription());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                lib.add(newDeadline); // Add the new task into the list of tasktodo"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                save.saveToFile(lib);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                System.out.println(\"Now you have \" + lib.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            } else if (cmd.contains(\"event\")) { // If cmd contains event"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                String[] eventInputs \u003d cmd.split(\" \"); // Split all the string by spaces"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                List\u003cString\u003e listInputs \u003d new ArrayList\u003c\u003e(Arrays.asList(eventInputs)); // Making the string into a LIST of strings"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                listInputs.remove(0); // Remove the first index of the string which is \"deadline\""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                String description \u003d String.join(\" \", listInputs); // Join back the list of strings. Will return the string \"borrow book\""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                String[] dayInput \u003d description.split(\" /at \");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                Events newEvent \u003d new Events(dayInput[0], new DateTime().formatDateTime(dayInput[1])); // to select the description and day"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                System.out.println(\"\\t\" + newEvent.getDescription());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                lib.add(newEvent); // Add the new task into the list of tasktodo"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                save.saveToFile(lib);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                System.out.println(\"Now you have \" + lib.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            } else if (cmd.contains(\"delete\")) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                // Add code here"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                String[] allInputs \u003d cmd.split(\" \"); // Split the input string by spaces"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                System.out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                for (String i : allInputs) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                    if (!i.equals(\"delete\")) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                        int index \u003d Integer.parseInt(i) - 1; // Changing the string to integer"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "//                        lib.get(index).tickIcon(); // Change the x to tick"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                        System.out.println(\"\\t\" + lib.get(index).getDescription());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                        lib.remove(index);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                        System.out.println(\"Now you have \" + lib.size() + \" task in the list.\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                        save.saveToFile(lib);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            } else if (cmd.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                String findWord \u003d cmd.substring(5); // The word start from index 5 of the cmd"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                ArrayList\u003cTask\u003e search \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                for (Task i : lib) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                    if (i.getDescription().contains(findWord)) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                        search.add(i);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                System.out.println(\"Here are the matching task in your list: \");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                for (int i \u003d 0; i \u003c search.size(); i++) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                    System.out.print(i + 1);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                    System.out.println(\".\" + search.get(i).getDescription());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                    if (!cmd.matches(\"todo|deadlines|task|list|event\"))"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                        throw new DukeException(cmd);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                } catch (DukeException error) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                    System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "danisheddie": 143,
      "-": 3
    }
  },
  {
    "path": "src/main/java/Exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "package Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public DukeException(String error) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        super(error);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "danisheddie": 7
    }
  },
  {
    "path": "src/main/java/Parser/DateTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "package Parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "// Converting 2/12/2019 1800 to 2nd of December 2019, 6pm"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "public class DateTime {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public String formatDateTime(String date) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        Date newDate \u003d new Date();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            newDate \u003d sdf.parse(date);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            return date;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        int hour \u003d Integer.parseInt(new SimpleDateFormat(\"h\").format(newDate));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        int min \u003d Integer.parseInt(new SimpleDateFormat(\"m\").format(newDate));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        String period \u003d (new SimpleDateFormat(\"a\").format(newDate)).toLowerCase();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        String formatTime;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        if (min \u003e 0) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            formatTime \u003d hour + \".\" + min + period;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            formatTime \u003d hour + period;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        Calendar cal \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        cal.setTime(newDate);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        int day \u003d cal.get(Calendar.DATE);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        if (!((day \u003e 10) \u0026\u0026 (day \u003c 19)))"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            switch (day % 10) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                case 1:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                    return new SimpleDateFormat(\"d\u0027st\u0027 \u0027of\u0027 MMMM yyyy\").format(newDate) + \", \" + formatTime;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                case 2:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                    return new SimpleDateFormat(\"d\u0027nd\u0027 \u0027of\u0027 MMMM yyyy\").format(newDate) + \", \" + formatTime;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                case 3:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                    return new SimpleDateFormat(\"d\u0027rd\u0027 \u0027of\u0027 MMMM yyyy\").format(newDate) + \", \" + formatTime;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                    return new SimpleDateFormat(\"d\u0027th\u0027 \u0027of\u0027 MMMM yyyy\").format(newDate) + \", \" + formatTime;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        return new SimpleDateFormat(\"d\u0027th\u0027 \u0027of\u0027 MMMM yyyy\").format(newDate) + \", \" + formatTime;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "danisheddie": 50
    }
  },
  {
    "path": "src/main/java/Storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "package Storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import model.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import model.Events;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import model.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import model.ToDos;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    private ArrayList\u003cTask\u003e saveText;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public Storage(ArrayList\u003cTask\u003e txt) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        this.saveText \u003d txt;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public void saveToFile(ArrayList\u003cTask\u003e saveText) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        File file \u003d new File(\"C:\\\\Users\\\\Dell\\\\Desktop\\\\duke\\\\dataTask.txt\"); // Creating the textfile"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            PrintWriter output \u003d new PrintWriter(file);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            for (Task x : saveText) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                output.println(x.getFormat());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            output.close();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            System.out.print(\"ERROR: Not Available\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public void ReadFile(ArrayList\u003cTask\u003e arr) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        BufferedReader br \u003d null;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            FileReader fr \u003d new FileReader(\"C:\\\\Users\\\\Dell\\\\Desktop\\\\duke\\\\dataTask.txt\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            while ((line \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                String[] splitter \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                for (int i \u003d 0; i \u003c splitter.length; i++) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                    splitter[i] \u003d splitter[i].trim();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                if (splitter[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                    Deadline newD \u003d new Deadline(splitter[2], splitter[3]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                    arr.add(newD);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                } else if (splitter[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                    Events newE \u003d new Events(splitter[2], splitter[3]);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                    arr.add(newE);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                    ToDos newT \u003d new ToDos(splitter[2]);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                    arr.add(newT);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            fr.close();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "danisheddie": 59
    }
  },
  {
    "path": "src/main/java/Ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "package Ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "danisheddie": 4
    }
  },
  {
    "path": "src/main/java/model/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "package model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        return \"[D]\" + \"[\" + getStatusIcon() + \"] \" + super.getDescription() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public String getFormat() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        return \"D | \" + isDone + \" | \" + super.getDescription() + \" | \" + by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "danisheddie": 19
    }
  },
  {
    "path": "src/main/java/model/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "package model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "public class Events extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    protected String day;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public Events(String description, String day) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        this.day \u003d day;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        return \"[E]\" + \"[\" + getStatusIcon() + \"] \" + super.getDescription() + \" (at: \" + day + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public String getFormat() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        return \"E | \" + isDone + \" | \" + super.getDescription() + \" | \" + day;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "danisheddie": 20
    }
  },
  {
    "path": "src/main/java/model/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "package model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    private String date \u003d \"\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public Task(String description) { // This is a constructor"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        return (isDone ? \"✓\" : \"✘\"); //return tick or X symbols"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public void tickIcon() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public String getFormat() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        return \"x\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "danisheddie": 34
    }
  },
  {
    "path": "src/main/java/model/ToDos.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "package model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "public class ToDos extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public ToDos(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        return \"[T]\" + \"[\" + getStatusIcon() + \"] \" + super.getDescription();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public String getFormat() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        return \"T | \" + isDone + \" | \" + super.getDescription();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "danisheddie": 16
    }
  }
]

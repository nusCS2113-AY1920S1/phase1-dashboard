[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "test {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "HUANGXUANKUN": 21
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "        this.by \u003d convertToDateAndTime(by);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    public char type(){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "        return \u0027D\u0027;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    public String convertToDateAndTime(String at) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "            LocalDateTime dateTime \u003d LocalDateTime.parse(at, formatter);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "            formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "            return formatter.format(dateTime);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "        } catch (DateTimeParseException error) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "            System.out.println(\"Data and Time are not in proper format\\n\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "            return at;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "        if (super.isDone()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "            return type() + \" | 1 | \"  +  super.getDescription() + \" | \" + by;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "            return type() + \" | 0 | \"  +  super.getDescription() + \" | \" + by;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HUANGXUANKUN": 46
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "        Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "        String greeting \u003d \"Hello from I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                \"What can I do for you?\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "        String longDash \u003d \"_______________________________\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "        System.out.println(greeting);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d readTask();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "        System.out.println(\"tasklist size: \" + taskList.size());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "            String userInput \u003d input.nextLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                if (userInput.equals(\"bye\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                    System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                } else if (userInput.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                    String[] textList \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                    int taskIndex \u003d Integer.parseInt(textList[1]) - 1;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                    Task t \u003d taskList.get(taskIndex);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                    t.markAsDone();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                    System.out.println(\"Nice! I\u0027ve marked this task as done: \\n\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                    System.out.println(t.toString());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                    writeTask(taskList);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                } else if (userInput.equals(\"list\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                    System.out.println(longDash + \"\\n\" + \"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                    for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                        Task t \u003d taskList.get(i);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                        System.out.println((i + 1) + \". \" + t.toString());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                } else if (userInput.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                    String[] textArr \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                    if (textArr.length !\u003d 2 || textArr[1].isEmpty()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! Please enter a non-empty keyword\\n\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                        System.out.println(longDash + \"\\nHere are the matching tasks in your list: \\n\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                        for (int i \u003d 0, j \u003d 1; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                            Task t \u003d taskList.get(i);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                            boolean isFound \u003d Arrays.asList(t.description.toLowerCase().split(\" \")).contains(textArr[1].toLowerCase());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                            if (isFound) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                                System.out.println(j + \". \" + t.toString());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                                j++;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                } else if (userInput.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                    String[] textList \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                    int taskIndex \u003d Integer.parseInt(textList[1]) - 1;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                    System.out.println(\"Noted. I\u0027ve removed this task: \\n\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                    System.out.println(taskList.get(taskIndex).toString());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                    taskList.remove(taskIndex);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                    writeTask(taskList);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                } else if (userInput.startsWith(\"Deadline\") || userInput.startsWith(\"Event\") || userInput.startsWith(\"Todo\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                    String[] textArr \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                    if (userInput.startsWith(\"Deadline\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                        String[] contentArr \u003d textArr[1].split(\" /by \");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                        String description \u003d contentArr[0];"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                        if (description.replaceAll(\"\\\\s+\", \"\").isEmpty()) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! The description of a Deadline cannot be empty.\\n\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                        String by \u003d contentArr[1];"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                        Deadline deadline \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                        taskList.add(deadline);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                    } else if (userInput.startsWith(\"Event\")) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                        String[] contentArr \u003d textArr[1].split(\" /at \");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                        String description \u003d contentArr[0];"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                        if (description.replaceAll(\"\\\\s+\", \"\").isEmpty()) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! The description of a Event cannot be empty.\\n\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                        String at \u003d contentArr[1];"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                        Event event \u003d new Event(description, at);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                        taskList.add(event);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                        if (textArr[1].replaceAll(\"\\\\s+\", \"\").isEmpty()) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! The description of a Todo cannot be empty.\\n\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                        Todo todo \u003d new Todo(textArr[1]);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                        taskList.add(todo);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                    writeTask(taskList);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                    System.out.println(longDash);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task: \\n\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                    System.out.println(taskList.get(taskList.size() - 1).toString());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                    System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                    System.out.println(longDash);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                    System.out.println(\" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                System.out.println(\" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    public static ArrayList readTask() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "        System.out.println(\"Reading Task List ... \\n\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "        File file \u003d new File(\"data\\\\duke.txt\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "            Scanner scanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "            while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                String[] data \u003d scanner.nextLine().split(\" \\\\| \", 4);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                if (data[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                    Todo todo \u003d new Todo(data[2]);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                    if (data[1].equals(\"1\")) todo.markAsDone();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                    taskList.add(todo);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                } else if (data[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                    Deadline deadline \u003d new Deadline(data[2], data[3]);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                    if (data[1].equals(\"1\")) deadline.markAsDone();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                    taskList.add(deadline);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                } else if (data[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                    Event event \u003d new Event(data[2], data[3]);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                    if (data[1].equals(\"1\")) event.markAsDone();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                    taskList.add(event);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "        } catch (FileNotFoundException error) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "            System.out.println(\"There is a read error\\n\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    public static void writeTask(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "        File file \u003d new File(\"data\\\\duke.txt\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "            PrintWriter writeIn \u003d new PrintWriter(file);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                int status \u003d 0;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                Task task \u003d taskList.get(i);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                if (task.isDone()) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                    status \u003d 1;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "                writeIn.println(task.writeToFile());"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "            }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "            writeIn.close();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "            System.out.println(\"There is a write error\\n\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 5,
      "HUANGXUANKUN": 160
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HUANGXUANKUN": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "        this.at \u003d convertToDateAndTime(at);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    public String convertToDateAndTime(String at) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "            LocalDateTime dateTime \u003d LocalDateTime.parse(at, formatter);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "            formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "            return formatter.format(dateTime);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "        } catch (DateTimeParseException error) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "            System.out.println(\"Data and Time are not in proper format\\n\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "            return at;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    public char type() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "        return \u0027E\u0027;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "        if (super.isDone()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "            return type() + \" | 1 | \" + super.getDescription() + \" | \" + at;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "            return type() + \" | 0 | \" + super.getDescription() + \" | \" + at;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HUANGXUANKUN": 45
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    public Task(String description){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    public boolean isDone(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    public void markAsDone(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    public String getDescription(){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    public abstract char type();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    public abstract String writeToFile();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HUANGXUANKUN": 34
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    public Todo(String description){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    public char type(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "        return \u0027T\u0027;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    public String writeToFile(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "        if (super.isDone()) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "            return type() + \" | 1 | \"  +  super.getDescription();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "            return type() + \" | 0 | \"  +  super.getDescription();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HUANGXUANKUN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HUANGXUANKUN": 24
    }
  }
]

[
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " * Command objects for adding Todos, Events, and Deadlines."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public String details;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public AddCommand(CommandType type, String description, String details) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        super(type);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        this.details \u003d details;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public void execute(TaskList list, Ui ui, Storage storage)  {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        if (super.type \u003d\u003d CommandType.TODO) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            list.addTodoItem(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        } else if (super.type \u003d\u003d CommandType.DEADLINE) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            list.addDeadlineItem(description, details);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        } else if (super.type \u003d\u003d CommandType.EVENT) { //"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            list.addEventItem(description, details);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            System.out.println(\"Type error.\"); //should handle an error here?"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cyanoei": 31
    }
  },
  {
    "path": "src/main/java/BadInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "public class BadInputException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public BadInputException(String s) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cyanoei": 6
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " * This is an abstract class."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " * Command objects are sent from the Parser and executed with TaskList or Ui."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " * Commands include: adding, deleting, marking as done etc."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    protected enum CommandType {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        TODO, DEADLINE, EVENT, BYE, LIST, DONE, DELETE, FIND, BAD"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    protected CommandType type;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    //Not sure if the default constructor should be a bad command?"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        this.type \u003d CommandType.BAD;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public Command(CommandType type) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public CommandType getType(){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public void execute(TaskList list, Ui ui, Storage storage)  {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        if (type \u003d\u003d CommandType.LIST) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            list.printList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        } else if (type \u003d\u003d CommandType.BYE) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            storage.save(list.getTaskList());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            ui.printExitMessage();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cyanoei": 36
    }
  },
  {
    "path": "src/main/java/Date.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "//import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " * Stores date and time information by field - day, month, year, hour, minute."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " * Allows printing of a fancy formatted date."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " * Uses a boolean variable to indicate if the date object has been properly initialised."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "public class Date {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private boolean valid;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private String dateAndTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private int day;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private int month;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private int year;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private int hour;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private String minute;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public Date(String dateAndTime) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        this.dateAndTime \u003d dateAndTime;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        String[] details \u003d dateAndTime.split(\"[ /]\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            day \u003d Integer.parseInt(details[0]);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            month \u003d Integer.parseInt(details[1]);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            year \u003d Integer.parseInt(details[2]);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            hour \u003d Integer.parseInt(details[3].substring(0, 2));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            minute \u003d details[3].substring(2);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            valid \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            System.out.println(\"Sorry, that date input is not recognised.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            System.out.println(\"The date input is still saved and can be accessed.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            valid \u003d false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public boolean isValid() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        return valid;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public int getDay() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        return day;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public int getMonth() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        return month;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public int getYear() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        return year;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public int getHour() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        return hour;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public String getMinute() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        return minute;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private String getDayString() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        if (day \u003e 31) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            System.out.println(\"Day is invalid.\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        else if (day \u003e 10 \u0026\u0026 day \u003c 14) return Integer.toString(day) + \"th\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        else if (day%10 \u003d\u003d 1) return Integer.toString(day) + \"st\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        else if (day%10 \u003d\u003d 2) return Integer.toString(day) + \"nd\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        else if (day%10 \u003d\u003d 3) return Integer.toString(day) + \"rd\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        else return Integer.toString(day) + \"th\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private String getMonthString() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        switch (month) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            case 1:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                return \"January\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            case 2:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                return \"February\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            case 3:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                return \"March\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            case 4:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                return \"April\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            case 5:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                return \"May\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            case 6:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                return \"June\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            case 7:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                return \"July\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            case 8:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                return \"August\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            case 9:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                return \"September\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            case 10:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                return \"October\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            case 11:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                return \"November\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            case 12:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                return \"December\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                System.out.println(\"Month is invalid.\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private String getTimeString() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        if (hour \u003e 12 \u0026\u0026 hour \u003c\u003d 24) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            return Integer.toString(hour - 12) + \":\" + minute + \" pm\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        } else if (hour \u003c 12) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            return Integer.toString(hour) + \":\" + minute + \" am\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        } else if (hour \u003d\u003d 12) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            return \"12:\" + minute + \" pm\";"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            System.out.println(\"Time is invalid.\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public String returnFormattedDate() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        if (valid) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            return getDayString() + \" of \" + getMonthString() + \" \" + year + \", \" + getTimeString();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            return dateAndTime;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cyanoei": 125
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " * In addition to the deadline and done status (inherited from Task),"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " * the Deadline has a doByDate that is represented by a date class."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " * The save and print strings have been overridden to show more information."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private String doBy;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private Date doByDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public Deadline(String description, String by, int taskIndex) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        super(description, TaskType.DEADLINE); //Using the Task constructor. isDone is set to false."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        this.doBy \u003d by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        this.doByDate \u003d new Date(doBy);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public String getDoBy() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        return doBy;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public String saveDetailsString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        return \"D/\" + super.saveDetailsString() + \"/\" + doBy;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public String getDoByDate() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        return doByDate.returnFormattedDate();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        return \"[D] \" + super.toString() + \" (by: \" + doByDate.returnFormattedDate() + \")\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cyanoei": 35
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " * Duke is a task list that supports 3 types of classes - Todos, deadlines and events."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " * Tasks can be added, marked as done, searched for, and deleted."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " * Tasks are loaded from and saved to file."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private static Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private static Parser parser;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private static TaskList taskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private static Ui ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    //Consider not using the listIndex anymore?"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private static int listIndex \u003d 0; //Starts from 0 now lol."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private static void setListIndex(int value) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        listIndex \u003d value;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /*TODO Strip descriptions of leading/trailing spaces before submitting"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        Accept multiple space delimiter to take the first word...?"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    * */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private Duke(String filePath) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        taskList \u003d new TaskList(storage.load()); //Will always return the right object even if empty."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        ui.printIntro();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        String userInput;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        //Should probably wrap this in the UI class."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            ui.printNewLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            userInput \u003d ui.read();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            command \u003d parser.parse(userInput);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            command.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            //taskList.handleListInput(command); //Should only be passed good inputs."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        } while (command.type !\u003d Command.CommandType.BYE);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        String saveFile \u003d \"/Users/rebecca/Documents/NUS/CS2113T/Project/duke/data/saved_tasks.txt\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        new Duke(saveFile).run();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cyanoei": 51,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeExceptions.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "public class DukeExceptions extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cyanoei": 3
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " * In addition to the deadline and done status (inherited from Task),"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " * the Event has a start time (and later, end time) that is represented by a date class."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " * The save and print strings have been overridden to show more information."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private String start;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private String end; //For later."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private Date eventTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public Event(String description, String start, int taskIndex) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        super(description, TaskType.EVENT); //Using the Task constructor. isDone is set to false."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        this.start \u003d start;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        this.eventTime \u003d new Date(start);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public String getStart() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        return start;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public String getEventTime() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        return eventTime.returnFormattedDate();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public String saveDetailsString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        return \"E/\" + super.saveDetailsString() + \"/\" + start;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        return \"[E] \" + super.toString() + \" (at: \" + eventTime.returnFormattedDate() + \")\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cyanoei": 35
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " * Command objects for searching for tasks."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private String search;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public FindCommand(CommandType type, String search) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        super(type);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        this.search \u003d search;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public void execute(TaskList list, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        list.searchForTask(search);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "cyanoei": 18
    }
  },
  {
    "path": "src/main/java/InsufficientInfoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "public class InsufficientInfoException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public InsufficientInfoException(String s) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cyanoei": 7
    }
  },
  {
    "path": "src/main/java/NumCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " * Command objects for marking tasks as done, or deleting them."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " * Requires the index of the task."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "public class NumCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private int itemIndex;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public NumCommand(CommandType type, int index) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        super(type);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        this.itemIndex \u003d index-1; //Because of 0-indexing"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public int getItemIndex() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        return itemIndex;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public void execute(TaskList list, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        if (type \u003d\u003d CommandType.DONE) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            list.markTaskAsDone(itemIndex);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        } else if (type \u003d\u003d CommandType.DELETE) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            list.deleteTask(itemIndex);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cyanoei": 27
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " * Interprets command strings by the user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " * Todo: Converts command strings into command objects that can be processed at the level of the duke class."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    //May reuse later."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "//    private boolean indexIsValid(TaskList list, int index) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "//        int max \u003d list.getSize();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "//        return index \u003c\u003d max;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private String addTodo(String input) throws InsufficientInfoException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        if (input.isBlank()) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            throw new InsufficientInfoException(\"Sorry, the description of a Todo cannot be blank!\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            return input;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private String[] addDeadline(String input) throws InsufficientInfoException{"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        String[] deadline \u003d input.split(\"/by \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        //Checks if either field is blank."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        if (deadline[0].isBlank()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            throw new InsufficientInfoException(\"Sorry, the description of a Deadline cannot be blank!\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        } else if ((deadline.length \u003c 2) || deadline[1].isBlank()) { //If the field is empty or does not exist"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            throw new InsufficientInfoException(\"Sorry, the Deadline must have a date to be completed /by.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            return deadline;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    //functions for each type of thing!"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private String[] addEvent(String input) throws InsufficientInfoException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        String[] event \u003d input.split(\"/at \");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        if (event[0].length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            throw new InsufficientInfoException(\"Sorry, the description of an Event cannot be blank!\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        } else if ((event.length \u003c 2) || event[1].length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            throw new InsufficientInfoException(\"Sorry, the event must have a timeframe it happens /at.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            return event;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Checks if the command keyword (first word is valid)."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Determines what to do with the remaining string depending on the command."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Also handles exceptions for bad description string inputs."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @param listInput array containing the command and description from the user."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @return an array where the first item is the command word and the second item is the rest of the text."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @throws BadInputException If the first word is not one of the recognised commands."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private Command handleListInput(String listInput) throws BadInputException, InsufficientInfoException, NumberFormatException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        String[] keyword \u003d listInput.split(\" \", 2);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        switch (keyword[0]) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            //Commands which are single words."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                command \u003d new Command(Command.CommandType.LIST);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                command \u003d new Command(Command.CommandType.BYE);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            //Commands which require numerical input."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                command \u003d new NumCommand(Command.CommandType.DONE, Integer.parseInt(keyword[1]));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            case \"delete\": {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                command \u003d new NumCommand(Command.CommandType.DELETE, Integer.parseInt(keyword[1]));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            //Commands which require string input."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                command \u003d new AddCommand(Command.CommandType.TODO, addTodo(keyword[1]), null);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            case \"deadline\": {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                String[] temp \u003d addDeadline(keyword[1]);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                command \u003d new AddCommand(Command.CommandType.DEADLINE, temp[0], temp[1]);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            case \"event\": {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                String[] temp \u003d addEvent(keyword[1]);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                command \u003d new AddCommand(Command.CommandType.EVENT, temp[0], temp[1]);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            case \"find\": {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                String description \u003d keyword[1].trim(); //Might need to catch empty string exceptions?"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                if (!description.isBlank()) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                    command \u003d new FindCommand(Command.CommandType.FIND, description);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                    //command[1] \u003d description;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                    command \u003d new Command();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                    System.out.println(\"Please enter the search description.\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                    //command[0] \u003d null;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "//                    switch (keyword[0]) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "//                        case \"deadline\":"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "//                            System.out.println(\"Please enter the description of the deadline.\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "//                        case \"event\":"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "//                            System.out.println(\"Please enter the description of the event.\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "//                        case \"find\":"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "//                            System.out.println(\"Please enter the search description.\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "//                    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                command \u003d new Command(); //Bad Command"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                throw new BadInputException(\"Sorry, I don\u0027t recognise that input keyword!\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Reads in the command string from the user and looks at the first word."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * The first word and any remaining characters are separated and passed to the handler."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     *"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @return an array where the first item is the command word and the second item is the rest of the text."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public Command parse(String userInput) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        Command userCommand;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        //TODO: Make this a do-while that waits for a good input"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        //TODO: Shift this implementation to the Ui class"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            userCommand \u003d handleListInput(userInput);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            System.out.println(\"Please input only an integer after the command.\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            userCommand \u003d new Command();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        } catch (Exception e) { //e is a string - the exception message"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            System.out.println(\"Parser error: \");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            userCommand \u003d new Command();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        return userCommand;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cyanoei": 150
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " * Handles reading and writing the tasklist to file."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    //Write and read functions"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        ArrayList\u003cTask\u003e savedList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        File f \u003d new File(filePath); // create a File for the given file path"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                String itemRaw \u003d s.nextLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                String[] item \u003d itemRaw.split(\"/\", 4);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                switch (item[0]) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                        savedList.add(new Todo(item[2], i));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                        savedList.add(new Deadline(item[2], item[3], i));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                    case \"E\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                        savedList.add(new Event(item[2], item[3], i));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                        //throw an exception"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                        System.out.println(\"An exception will be thrown here eventually.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                if (item[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                    savedList.get(i).markAsDone();  //ArrayList indexing starts from 0."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                i++; //Increment counter!"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            System.out.println(\"Save file not found. New list will be created instead.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        return savedList; //Returns an array of Task objects"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private void writeToFile(String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public void save(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        StringBuilder tasksToSave \u003d new StringBuilder();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        int max \u003d taskList.size();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        for (int i \u003d 0; i \u003c max; i++) { //index starts from 0."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            tasksToSave.append(taskList.get(i).saveDetailsString()).append(System.lineSeparator());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        String taskListToSave \u003d tasksToSave.toString();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            writeToFile(taskListToSave);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            System.out.println(\"Something went wrong saving the file :(\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cyanoei": 86
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " * Task is an abstract class that stores the description and done status of a task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " * Is extended by Todo, Deadline and Event classes."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    protected TaskType type;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    protected enum TaskType {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        TODO, DEADLINE, EVENT"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public Task() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        this.description \u003d \"None\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public Task(String description, TaskType type) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        return (isDone ? \"[\\u2713]\" : \"[\\u2718]\"); //return tick or X symbols"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public void printTaskDetails() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        System.out.println(toString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public String saveDetailsString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "         * Method that returns a string with the details for saving to file."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "         * @return a string which contains the details in a fixed format."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "         */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        String done;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        if (this.isDone) done \u003d \"1\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        else done \u003d \"0\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        return done + \"/\" + description;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        //Returns string in the style of \"1/read book\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "         * Marks the task as done. This occurs one-way; the task cannot be unmarked."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "         * @return Nothing."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "         */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "//    public void readDateTime(String dateAndTime) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "//        String pattern \u003d \"dd/MM/yyyy HHmm\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "//        SimpleDateFormat formatter \u003d new SimpleDateFormat(pattern);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "//        String formatted \u003d formatter.format(dateAndTime);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "//        System.out.println(formatted);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "         * toString method overridden to return the a description string."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "         * This string presents the task information in a readable format."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "         * @return the task details."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "         */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        return getStatusIcon() + \" \" + description; //eg. [✓] read book"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cyanoei": 82
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " * Manages the list of (different types of classes),"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " * including all the methods to modify the list:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " * Adding each of the 3 types, print, delete, mark as done, search."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private int listIndex;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e savedFile) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        taskList \u003d savedFile;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        this.listIndex \u003d taskList.size(); //Easier to start from 1."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        this.listIndex \u003d 0;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public int getListIndex() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        return listIndex;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private void setListIndex(int value) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        listIndex \u003d value;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Adds a todo item to the list and prints a confirmation."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @param todoitem the description of the task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @return Nothing."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @throws InsufficientInfoException  If description is blank."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public void addTodoItem(String todoitem) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        taskList.add(new Todo(todoitem, listIndex)); //Use the constructor to create a new Task. Saved index starts from 1."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        System.out.println(\"Todo item added: \" + todoitem);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        setListIndex(listIndex + 1); //Increment the index"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Adds a deadline item to the list and prints a confirmation."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @param deadline the command with the description and deadline of the task."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public void addDeadlineItem(String description, String deadline) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        taskList.add(new Deadline(description, deadline, listIndex)); //Use the constructor to create a new Task. Saved index starts from 1."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        System.out.println(\"Deadline item added: \" + description);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        System.out.println(\"Deadline is: \" + deadline);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        setListIndex(listIndex + 1); //Increment the index"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Adds an event item to the list and prints a confirmation."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @param event the description of the task."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @param at the time the event happens."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public void addEventItem(String event, String at) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        taskList.add(new Event(event, at, listIndex)); //Use the constructor to create a new Task. Saved index starts from 1."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        System.out.println(\"Event item added: \" + event);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        System.out.println(\"Event happens at: \" + at);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        setListIndex(listIndex + 1); //Increment the index"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Prints the whole list of items with index numbers."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public void printList() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        int max \u003d taskList.size();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        if (max \u003d\u003d 0) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            System.out.println(\"The list is currently empty.\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        for (int i \u003d 0; i \u003c max; i++) { //Index starts from 0."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            System.out.print(i+1 + \". \"); //Add 1 to follow natural numbers."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            taskList.get(i).printTaskDetails();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Deletes a task of the user\u0027s choice."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     *"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @param i the index of the task to be deleted."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public void deleteTask(int i){"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            Task item \u003d taskList.get(i);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            taskList.remove(i); //The original copy is gone."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            System.out.print(\"Okay! I\u0027ve deleted this task: \");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            System.out.println(item.getDescription());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            if (item.getIsDone()) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                System.out.println(\"The task was completed.\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                System.out.println(\"The task was not completed.\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            listIndex--;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        } catch(IndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            printTaskNonexistent();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Marks a task as done."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     *"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @param i the index of the task to be marked as done."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public void markTaskAsDone(int i) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            taskList.get(i).markAsDone(); //Mark task as done."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            System.out.print(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            System.out.println(taskList.get(i).getDescription()); //Prints task name"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            printTaskNonexistent();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Prints error message if a nonexistent task index is accessed."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Prints the task list for user to choose again."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private void printTaskNonexistent() {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        System.out.println(\"That task doesn\u0027t exist! Please check the available tasks again: \");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        printList();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Allows the user to search for task descriptions that match a given string."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Prints the list of tasks that match. Alternatively prints a message if none are found."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public void searchForTask(String search) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        int max \u003d taskList.size();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        boolean found \u003d false;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        for (int i \u003d 0; i \u003c max; i ++) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            if (taskList.get(i).getDescription().contains(search)) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                System.out.print(i+1 + \". \" ); //Print the index of the task."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                taskList.get(i).printTaskDetails();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                found \u003d true;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        if (!found) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            System.out.println(\"Sorry, I could not find any tasks containing the description \\\"\" + search + \"\\\".\" );"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            System.out.println(\"Please try a different search string.\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cyanoei": 168
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " * The least detailed task is the todo,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " * which consists of a deadline and done status."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " * It is effectively the (parent) Task class with a different print and save string."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    // Do we even need this?"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public Todo(String description, int taskIndex) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        super(description, TaskType.TODO); //Using the Task constructor. isDone is set to false."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public String saveDetailsString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        return \"T/\" + super.saveDetailsString();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        return \"[T] \" + super.toString();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cyanoei": 23
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " * Manages the UI of Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " * Prints intro and exit messages, and the standard newline."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private Scanner in;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        this.in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public void printIntro() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        printNewLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        //printNewLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public void printNewLine() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public void printExitMessage() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        printNewLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        System.out.println(\"Bye! Hope to see you again soon!\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        printNewLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public String read() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cyanoei": 42
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cyanoei": 10
    }
  }
]

[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "test {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 16,
      "-": 19
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": " * The duke program simply runs a to-do application."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": " * The program will first extracts existing tasks, if any, from duke.txt."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": " * After which, it takes users\u0027 input and run the appropriate commands."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Riyas97"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Creates a new Ui class that handles users\u0027 inputs."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Extracts task from Duke.txt or creates a new tasklist class."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            tasks \u003d new TaskList(storage.getTasksFromDatabase());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * The function first prints welcome message."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * After which, it takes in user\u0027s input and pass it to Parser class to excecute the approriate commands."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void run() throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        System.out.flush();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                String command \u003d ui.readInput();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                String[] arr \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                String firstWord \u003d arr[0];"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                int check \u003d parser.handleCommand(firstWord, command);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                if (check \u003d\u003d 1) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                throw DukeException.INPUT_NOT_FOUND;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Runs the main duke function."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static void main(String[] args) throws DukeException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        new Duke(\"data/duke.txt\").run();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Riyas97": 64,
      "-": 3
    }
  },
  {
    "path": "src/main/java/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": " * This class deals with all the exception messages."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static final DukeException UNKNOWN_COMMAND \u003d new DukeException(\"☹ OOPS!!! I\u0027m sorry, \""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        + \"but I don\u0027t understand what you mean :-(\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static final DukeException EMPTY_TASK_IN_TODO \u003d new DukeException(\"☹ OOPS!!! The \""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        + \"description of a todo cannot be empty, e.g. todo borrow book\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static final DukeException EMPTY_TASK_IN_DEADLINE \u003d new DukeException(\"☹ OOPS!!! The \""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        + \"description of a deadline cannot be empty, e.g. deadline return book /by Sunday\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static final DukeException INVALID_FORMAT_IN_DEADLINE \u003d new DukeException(\"☹ OOPS!!! Invalid \""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        + \"format. Please key in the task in the correct structure, e.g. deadline return book /by Sunday\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static final DukeException EMPTY_TIME_IN_DEADLINE \u003d new DukeException(\"☹ OOPS!!! Task \""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        + \"must have a valid deadline, e.g. deadline return book /by Sunday\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static final DukeException EMPTY_TASK_IN_EVENT \u003d new DukeException(\"☹ OOPS!!! The description \""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        + \"of a event cannot be empty, e.g. event project meeting /at Mon 2-4pm\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static final DukeException EMPTY_TIME_IN_EVENT \u003d new DukeException(\"☹ OOPS!!! Task \""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        + \"must have a valid time, e.g. event project meeting /at Mon 2-4pm\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static final DukeException INVALID_FORMAT_IN_EVENT \u003d new DukeException(\"☹ OOPS!!! Invalid \""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        + \"format. Please key in the task in the correct structure, e.g. event project meeting /at Mon 2-4pm\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static final DukeException TASK_DOES_NOT_EXIST \u003d new DukeException(\"☹ OOPS!!! \""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        + \"Task does not exist.\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static final DukeException TASK_NO_MISSING \u003d new DukeException(\"☹ OOPS!!! Please \""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        + \"provide a task number, e.g. done 1\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static final DukeException TASK_NO_MISSING_DELETE \u003d new DukeException(\"☹ OOPS!!! Please \""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        + \"provide a task number, e.g. delete 1\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static final DukeException TASK_NO_MISSING_FIND \u003d new DukeException(\"☹ OOPS!!! Please \""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        + \"provide a keyword, e.g. find eat\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static final DukeException FILE_NOT_FOUND \u003d new DukeException(\"☹ OOPS!!! Unknown error \""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        + \"extracting tasks from database.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static final DukeException INPUT_NOT_FOUND \u003d new DukeException(\"☹ OOPS!!! No user input found\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private DukeException(String message) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public String getError() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 47
    }
  },
  {
    "path": "src/main/java/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import task.ToDo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import task.Tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Riyas97"
        },
        "content": " * This class deals with making sense of the user command and doing the appropriate actions."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Riyas97"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Takes in users\u0027 input and call the aprropriate functions to execute the right action."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static int handleCommand(String firstWord, String s) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        int check \u003d 0;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        if (s.equals(\"bye\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            Ui.showByeMessage();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            check \u003d 1;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                switch (firstWord) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    case \"list\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        listCommand();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    case \"done\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        doneCommand(s);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    case \"delete\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        deleteCommand(s);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    case \"find\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        findCommand(s);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    case \"todo\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        todoCommand(s);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    case \"deadline\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        deadlineCommand(s);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    case \"event\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        eventCommand(s);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        throw DukeException.UNKNOWN_COMMAND;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                Ui.showError(e.getError());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return check;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Prints the list of tasks in database by calling the showListTask function under Ui class."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static void listCommand() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        Ui.showListIntroMessage();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        List\u003cTasks\u003e userToDoList \u003d TaskList.getList();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        for (int i \u003d 0; i \u003c userToDoList.size(); i++) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            String message \u003d userToDoList.get(i).getDescription();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            int j \u003d i + 1;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            Ui.showListTask(userToDoList.get(i).getType(), userToDoList.get(i).getStatusIcon(),"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                message, j);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        Ui.printLine();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Mark a particular task as done."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Then, prints the confirmation message by calling showMarkAsDone function under Ui class."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Finally, updates the database."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static void doneCommand(String s) throws DukeException {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            String[] tokens \u003d s.split(\" \");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            int num \u003d Integer.parseInt(tokens[1]);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            TaskList.markTaskAsDone(num - 1);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            String type \u003d TaskList.getType(num - 1);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            String status \u003d TaskList.getStatus(num - 1);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            String message \u003d TaskList.getMessage(num - 1);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            Ui.showMarkAsDone(type, status, message);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            Storage.saveTask(TaskList.getList());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            throw DukeException.TASK_NO_MISSING;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            throw DukeException.TASK_DOES_NOT_EXIST;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            throw DukeException.TASK_DOES_NOT_EXIST;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Creates a new To-Do task with users\u0027 input."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Then, prints a confirmation message by calling showToDoSuccess function under Ui class."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Finally, adds the task into database."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static void todoCommand(String s) throws DukeException {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        int todolistNumber \u003d TaskList.getTotalTasksNumber() + 1;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            String joinTokens \u003d s.substring(s.indexOf(\" \") + 1);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            if (joinTokens.equals(\" \")) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                throw DukeException.EMPTY_TASK_IN_TODO;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            if (s.length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                throw DukeException.EMPTY_TASK_IN_TODO;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            if (joinTokens.isEmpty()) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                throw DukeException.EMPTY_TASK_IN_TODO;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            Tasks newToDo \u003d new ToDo(joinTokens, \"T\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            TaskList.addTask(newToDo);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            Ui.showToDoSucess(TaskList.getType(todolistNumber - 1),"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                TaskList.getStatus(todolistNumber - 1), TaskList.getMessage(todolistNumber - 1),"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                TaskList.getTotalTasksNumber());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            Storage.saveTask(TaskList.getList());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            Ui.showError(e.getError());"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Prints tasks that contain the keyword entered by user."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static void findCommand(String s) throws DukeException {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            String find \u003d s.substring(5);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            int j \u003d 1;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            if (find.equals(\" \") || (find.equals(\"\"))) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                throw DukeException.TASK_NO_MISSING_FIND;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                Ui.showFindIntroMessage();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                String findLowerCase \u003d find.toLowerCase();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                for (int i \u003d 0; i \u003c TaskList.getTotalTasksNumber(); i +\u003d 1) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    String message \u003d TaskList.getMessage(i).toLowerCase();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    String type \u003d TaskList.getType(i).toLowerCase();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    String icon \u003d TaskList.getStatus(i);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    if ((message.contains(findLowerCase)) || (type.contains(findLowerCase))"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        || (icon.contains(findLowerCase))) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        Ui.showFindTasks(TaskList.getType(i), TaskList.getStatus(i),"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            TaskList.getMessage(i), j);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        j +\u003d 1;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                Ui.printLine();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            throw DukeException.TASK_NO_MISSING_FIND;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Deletes a particular task as entered by user."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Then, prints the confirmation message by calling showDeleteMessage function under Ui class."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Finally, updates the database."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static void deleteCommand(String s) throws DukeException {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            String[] tokens \u003d s.split(\" \");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            int num \u003d Integer.parseInt(tokens[1]);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            Ui.showDeleteMessage(TaskList.getType(num - 1),"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                TaskList.getStatus(num - 1), TaskList.getMessage(num - 1),"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                TaskList.getTotalTasksNumber() - 1);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            TaskList.removeTask(num - 1);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            Storage.saveTask(TaskList.getList());"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            throw DukeException.TASK_NO_MISSING_DELETE;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            throw DukeException.TASK_DOES_NOT_EXIST;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            throw DukeException.TASK_DOES_NOT_EXIST;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Creates a new event task with users\u0027 input."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Then, prints a confirmation message by calling showEventMessage function under Ui class."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Finally, adds the task into database."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static void eventCommand(String s) throws DukeException {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            String todoTask1 \u003d s.substring(6, s.indexOf(\"/at\"));"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            String time1 \u003d s.substring(s.indexOf(\"/at\") + 4);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            TimeParser timeParser \u003d new TimeParser();"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            time1 \u003d timeParser.convertStringToDate(time1);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            if (todoTask1.isEmpty()) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                throw DukeException.EMPTY_TASK_IN_EVENT;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            if (todoTask1.equals(\" \")) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                throw DukeException.EMPTY_TASK_IN_EVENT;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            if (time1.isEmpty()) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                throw DukeException.EMPTY_TIME_IN_EVENT;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            if (time1.equals(\" \")) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                throw DukeException.EMPTY_TIME_IN_EVENT;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            Event task1 \u003d new Event(todoTask1, \"E\", time1);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            String newtodoTask1 \u003d task1.toMessage();"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            Tasks newToDo1 \u003d new Event(newtodoTask1, \"E\", time1);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            int todolistNumber \u003d TaskList.getTotalTasksNumber();"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            TaskList.addTask(newToDo1);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            Ui.showEventMessage(TaskList.getStatus(todolistNumber), newtodoTask1, todolistNumber + 1);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            Storage.saveTask(TaskList.getList());"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            throw DukeException.INVALID_FORMAT_IN_EVENT;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Creates a new deadline task with users\u0027 input."
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Then, prints a confirmation message by calling showDeadlineMessage function under Ui class."
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Finally, adds the task into database."
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static void deadlineCommand(String s) throws DukeException {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        int todolistNumber \u003d TaskList.getTotalTasksNumber();"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            String todoTask \u003d s.substring(9, s.indexOf(\"/by\"));"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            String time \u003d s.substring(s.indexOf(\"/by\") + 4);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            TimeParser timeParser \u003d new TimeParser();"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            time \u003d timeParser.convertStringToDate(time);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            if (todoTask.isEmpty()) {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                throw DukeException.EMPTY_TASK_IN_DEADLINE;"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            if (todoTask.equals(\" \")) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                throw DukeException.EMPTY_TASK_IN_DEADLINE;"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            if (time.isEmpty()) {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                throw DukeException.EMPTY_TIME_IN_DEADLINE;"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            if (time.equals(\" \")) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                throw DukeException.EMPTY_TIME_IN_DEADLINE;"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            Deadline task \u003d new Deadline(todoTask, \"D\", time);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            String newtodoTask \u003d task.toMessage();"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            Tasks newToDo2 \u003d new Deadline(newtodoTask, \"D\", time);"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            TaskList.addTask(newToDo2);"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            Ui.showDeadlineMessage(TaskList.getStatus(todolistNumber), newtodoTask, todolistNumber + 1);"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            Storage.saveTask(TaskList.getList());"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            throw DukeException.INVALID_FORMAT_IN_DEADLINE;"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Riyas97": 261
    }
  },
  {
    "path": "src/main/java/parser/TimeParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": " * This class deals with manipulating a string into a date if it is possible to."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "public class TimeParser {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    static Date date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Manipulate a string into an date and return it back as string."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * If not, simply just return back the string."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static String convertStringToDate(String time) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            SimpleDateFormat formatter1 \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            date \u003d formatter1.parse(time);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            line \u003d convertDateToLine(date);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            return line;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (ParseException e1) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            SimpleDateFormat formatter2 \u003d new SimpleDateFormat(\"dd-MMM-yyyy HHmm\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                date \u003d formatter2.parse(time);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                line \u003d convertDateToLine(date);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                return line;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            } catch (ParseException e2) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                SimpleDateFormat formatter3 \u003d new SimpleDateFormat(\"MMM dd yyyy HHmm\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    date \u003d formatter3.parse(time);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    line \u003d convertDateToLine(date);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    return line;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                } catch (ParseException e3) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    SimpleDateFormat formatter4 \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        date \u003d formatter4.parse(time);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        line \u003d convertDateToLine(date);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        return line;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    } catch (ParseException e4) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        SimpleDateFormat formatter5 \u003d new SimpleDateFormat(\"dd-MMM-yyyy HH:mm\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            date \u003d formatter5.parse(time);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            line \u003d convertDateToLine(date);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            return line;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        } catch (ParseException e5) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            SimpleDateFormat formatter6 \u003d new SimpleDateFormat(\"MMM dd yyyy HHmm\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                date \u003d formatter6.parse(time);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                line \u003d convertDateToLine(date);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                return line;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            } catch (ParseException e6) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                                return time;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Converts a date back to string and returns the string."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static String convertDateToLine(Date date) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        Calendar calendar \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        calendar.setTime(date);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        int actualDate \u003d calendar.get(Calendar.DATE);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        if ((actualDate \u003c\u003d 3) || (actualDate \u003e\u003d 21)) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            if (actualDate % 10 \u003d\u003d 1) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                return new SimpleDateFormat(\"dd\u0027st of\u0027 MMMMMMMM yyyy\u0027,\u0027 hh:mm aaa\").format(date);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            } else if (actualDate % 10 \u003d\u003d 2) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                return new SimpleDateFormat(\"dd\u0027nd of\u0027 MMMMMMMM yyyy\u0027,\u0027 hh:mm aaa\").format(date);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            } else if (actualDate % 10 \u003d\u003d 3) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                return new SimpleDateFormat(\"dd\u0027rd of\u0027 MMMMMMMM yyyy\u0027,\u0027 hh:mm aaa\").format(date);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                return new SimpleDateFormat(\"dd\u0027th of\u0027 MMMMMMMM yyyy\u0027,\u0027 hh:mm aaa\").format(date);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            return new SimpleDateFormat(\"dd\u0027th of\u0027 MMMMMMMM yyyy\u0027,\u0027 hh:mm aaa\").format(date);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Riyas97": 91
    }
  },
  {
    "path": "src/main/java/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.util.StringTokenizer;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import task.Tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import task.ToDo;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Riyas97"
        },
        "content": " * This class deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Riyas97"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static String filePath;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Extracts the tasks from duke.txt file when user opens the programme."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Returns back the list of tasks."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public List\u003cTasks\u003e getTasksFromDatabase() throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        List\u003cTasks\u003e userToDoListTask \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        List\u003cString\u003e userToDoListString \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            Scanner s \u003d new Scanner(file);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                userToDoListString.add(s.nextLine());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            throw DukeException.FILE_NOT_FOUND;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        List\u003cString\u003e store \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        for (int i \u003d 0; i \u003c userToDoListString.size(); i +\u003d 1) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            String line \u003d userToDoListString.get(i);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            if (line.trim().isEmpty()) { //ignore empty lines"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                String[] arr \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                String type \u003d arr[0].strip();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                String done \u003d arr[1].strip();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                String taskMessage \u003d arr[2].strip();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                Tasks tasks;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                if (type.equals(\"T\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    tasks \u003d new ToDo(taskMessage, \"T\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                } else if (type.equals(\"D\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    tasks \u003d new Deadline(taskMessage, \"D\", arr[3].strip());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    tasks \u003d new Event(taskMessage, \"E\", arr[3].strip());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                if (done.equals(\"✓\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    tasks.setDone(true);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    tasks.setDone(false);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                userToDoListTask.add(tasks); //convert the line to a task and add to the list"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return userToDoListTask;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Saves tasks into duke.txt file."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static void saveTask(List\u003cTasks\u003e userToDoList) throws DukeException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(f);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            for (Tasks task : userToDoList) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                String taskType \u003d task.getType();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                String line;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                if (taskType \u003d\u003d \"T\") {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    line \u003d \"T | \" + task.getStatusIcon() + \" | \" + task.getDescription();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                } else if (taskType \u003d\u003d \"D\") {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    line \u003d \"D | \" + task.getStatusIcon() + \" | \""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        + task.getDescription() + \" | \" + ((Deadline) task).getDeadline();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                    line \u003d \"E | \" + task.getStatusIcon() + \" | \""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                        + task.getDescription() + \" | \" + ((Event) task).getTime();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                fileWriter.write(line + \"\\n\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            e.getMessage();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 102
    }
  },
  {
    "path": "src/main/java/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "public class Deadline extends Tasks {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private String deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public Deadline(String description, String type, String deadline) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        super(description, type);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public String getDeadline() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return deadline;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void setDeadline(String deadline) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public String toMessage() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return description"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            + \"(by: \" + deadline + \")\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Riyas97": 26
    }
  },
  {
    "path": "src/main/java/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "public class Event extends Tasks {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public Event(String description, String type, String time) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        super(description, type);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void setTime(String time) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public String toMessage() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return description"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            + \"(at: \" + time + \")\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 25
    }
  },
  {
    "path": "src/main/java/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private static List\u003cTasks\u003e tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public TaskList(List\u003cTasks\u003e tasks) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static Tasks getTask(int num) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return tasks.get(num);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static void addTask(Tasks task)  {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Removes a particular task from database."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static void removeTask(int num) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            tasks.remove(num);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            throw DukeException.TASK_NO_MISSING_DELETE;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            throw DukeException.TASK_DOES_NOT_EXIST;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            throw DukeException.TASK_DOES_NOT_EXIST;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Extracts the type of a particular task from database."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static String getType(int num) throws DukeException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            String type \u003d tasks.get(num).getType();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            return type;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            throw DukeException.TASK_NO_MISSING_DELETE;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            throw DukeException.TASK_DOES_NOT_EXIST;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            throw DukeException.TASK_DOES_NOT_EXIST;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Extracts the status icon of a particular task from database."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static String getStatus(int num) throws DukeException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            String status \u003d tasks.get(num).getStatusIcon();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            return status;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            throw DukeException.TASK_NO_MISSING_DELETE;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            throw DukeException.TASK_DOES_NOT_EXIST;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            throw DukeException.TASK_DOES_NOT_EXIST;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Extracts the task description from a particular task from database."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static String getMessage(int num) throws DukeException {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            String message \u003d tasks.get(num).getDescription();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            return message;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            throw DukeException.TASK_NO_MISSING_DELETE;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            throw DukeException.TASK_DOES_NOT_EXIST;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            throw DukeException.TASK_DOES_NOT_EXIST;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static List\u003cTasks\u003e getList() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static int getTotalTasksNumber() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static void markTaskAsDone(int num) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        tasks.get(num).setDone(true);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static void markTaskAsUndone(int num) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        tasks.get(num).setDone(false);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 107
    }
  },
  {
    "path": "src/main/java/task/Tasks.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "public abstract class Tasks {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    protected boolean done;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Represents a task in a todolist."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * A task can have description, type and whether is it done or not."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public Tasks(String description, String type) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void setType(String type) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return done;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void setDone(boolean done) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        this.done \u003d done;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return (done ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 49
    }
  },
  {
    "path": "src/main/java/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "public class ToDo extends Tasks {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public ToDo(String description, String type) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        super(description, type);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public String toMessage() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return \"[T]\" + \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Riyas97": 14
    }
  },
  {
    "path": "src/main/java/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": " * This class handles user\u0027s input and do the required appropriate actions."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    protected static String logo \u003d"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        \" ____        _        \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    protected static String line \u003d \"   ____________________________________________________________\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    protected static String space \u003d \"    \";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    private Scanner in;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Prints the welcome message at the start when user opens the duke application."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        System.out.println(space + \"Hello from\\n\" + logo + \"\\n\" + space + \"Hello I am \" + \"Duke.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        System.out.println(space + \"What can I do for you?\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Prints a message before the application lists out each respective task in database."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static void showListIntroMessage() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        System.out.println(line + \"\\n\" + space + \"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Prints a respective task when user enters list."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static void showListTask(String type, String icon, String message, int num) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        System.out.println(space + num + \".[\" + type"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            + \"][\" + icon"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            + \"] \" + message);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static void printLine() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Prints a message once user enters bye."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static void showByeMessage() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        System.out.println(line + \"\\n\" + space + \"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Prints a message once a task has been done and updated into database."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static void showMarkAsDone(String type, String status, String message) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        System.out.println(line + \"\\n\" + space + \"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        System.out.println(space + \" [\" + type"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            + \"][\" + status"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            + \"] \" + message);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Prints a message when a particular task has been marked as done by user."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static void showMarkAsUnDone(String type, String status, String message) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        System.out.println(line + \"\\n\" + space + \"Nice! I\u0027ve unmarked this task as done:\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        System.out.println(space + \" [\" + type"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            + \"][\" + status"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            + \"] \" + message);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static void showError(String message) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        System.out.println(line + \"\\n\" + space + message + \"\\n\" + line);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Prints a message once a To-Do task has been successfully added into database."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static void showToDoSucess(String type, String status, String message, int todolistNumber) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        System.out.println(line + \"\\n\" + space + \"Got it. I\u0027ve added this task:\""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            + \"\\n\" + space + \" [\" + type"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            + \"][\" + status"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            + \"] \" + message);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        if (todolistNumber \u003e 1) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            System.out.println(space"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "                + \"Now you have \" + todolistNumber + \" tasks in the list.\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            System.out.println(space + \"Now you have \" + todolistNumber + \" task in the list.\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static void showFindIntroMessage() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        System.out.println(line + \"\\n\" + space + \"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Prints a message once a task has been deleted from database."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static void showDeleteMessage(String type, String status, String message, int num) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        System.out.println(line + \"\\n\" + space + \"Noted. I\u0027ve removed this task:\""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            + \"\\n\" + space + \" [\" + type"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            + \"][\" + status"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            + \"] \" + message);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        System.out.println(space + \"Now you have \" + num + \" tasks in the list.\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Prints a respective task when user enter find."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static void showFindTasks(String type, String status, String message, int num) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        System.out.println(space + num + \".[\""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            + type + \"][\" + status"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            + \"] \" + message);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Prints a error message when database is empty."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        System.out.println(space + \"Existing database is empty!\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Reads users\u0027 input."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Returns these input."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public String readInput() {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        String line \u003d in.nextLine().trim();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        return line.trim();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Prints a message once a event task has been successfully added into database."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static void showEventMessage(String status, String message, int num) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        System.out.println(line + \"\\n\" + space + \"Got it. I\u0027ve added this task:\" + \"\\n\" + space + \" [E][\""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            + status"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            + \"] \" + message);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        if (num \u003e 1) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            System.out.println(space + \"Now you have \" + num + \" tasks in the list.\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            System.out.println(space + \"Now you have \" + num + \" task in the list.\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     * Prints a message once a deadline task has been successfully added into database."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public static void showDeadlineMessage(String status, String message, int num) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        System.out.println(line + \"\\n\" + space + \"Got it. I\u0027ve added this task:\" + \"\\n\" + space + \" [D][\""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            + status"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            + \"] \" + message);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        if (num \u003e 1) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            System.out.println(space + \"Now you have \" + num + \" tasks in the list.\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "            System.out.println(space + \"Now you have \" + num + \" task in the list.\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 178
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 10
    }
  },
  {
    "path": "src/test/java/parser/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void verifyCheckValue() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        assertEquals(1, Parser.handleCommand(\"bye\", \"bye\"));"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 11
    }
  },
  {
    "path": "src/test/java/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Riyas97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "        assertEquals(\"go gym and jog /by 17/09/2019 1800(by: 17/09/2019 1800)\", (new Deadline(\"go gym and jog /by 17/09/2019 1800\", \"D\", \"17/09/2019 1800\")).toMessage());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Riyas97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Riyas97": 11
    }
  }
]

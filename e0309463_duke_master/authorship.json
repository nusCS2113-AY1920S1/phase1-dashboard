[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0309463"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0309463"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0309463"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0309463"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0309463"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0309463"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0309463"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0309463"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0309463"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0309463"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0309463"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0309463"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0309463"
        },
        "content": "run{"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0309463": 25,
      "-": 12
    }
  },
  {
    "path": "src/main/java/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0309463"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0309463"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0309463"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0309463"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0309463"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    public void execute(List\u003cTask\u003e list, Ui ui, Storage storage) throws DukeException, ParseException, IOException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        System.out.println(\"Bye! Hope to see you again soon!\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0309463"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0309463"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0309463": 15
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0309463"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0309463"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0309463"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0309463"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0309463"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    public abstract void execute(List\u003cTask\u003e list, Ui ui, Storage storage) throws DukeException, ParseException, IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0309463"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0309463"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0309463": 9
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0309463"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0309463"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0309463"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0309463"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    protected Date by ;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0309463"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    public Deadline(String description, Date by) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0309463"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        return \"D\"+ \"|\" + super.getStatusIcon() + \"| \" + super.description + \"|\" + \"by: \" + by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0309463"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    public String listformat(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        return \"[D]\" + \"[\" + super.getStatusIcon() + \"]\" + super.description + \"(by:\" + by + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0309463"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0309463": 21
    }
  },
  {
    "path": "src/main/java/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0309463"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0309463"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0309463"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0309463"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0309463"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0309463"
        },
        "content": "public class DeadlineCommand extends Command"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0309463"
        },
        "content": "{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    public void execute(List\u003cTask\u003e list, Ui ui, Storage storage) throws DukeException, ParseException, IOException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        String description \u003d \"\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        if(ui.FullCommand.length() \u003d\u003d 8) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        else{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0309463"
        },
        "content": "             description \u003d ui.FullCommand.split(\"/\")[0].substring(9);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        SimpleDateFormat fmt \u003d new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        Deadline d \u003d new Deadline(description, fmt.parse(ui.FullCommand.split(\"/\")[1].substring(3)));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        list.add(d);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        System.out.println(d.listformat());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            if (list.get(i).getClass().getName().equals(\"Deadline\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                sb.append(list.get(i).toString()+\"\\n\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            else if(list.get(i).getClass().getName().equals(\"Event\")){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                sb.append(list.get(i).toString()+\"\\n\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            else{"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                sb.append(list.get(i).toString()+\"\\n\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        storage.Storages(sb.toString());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0309463"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0309463"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0309463": 42
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0309463"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0309463"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0309463"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0309463"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0309463"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0309463"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    public void execute(List\u003cTask\u003e list, Ui ui, Storage storage) throws DukeException, ParseException, IOException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        if(ui.FullCommand.length() \u003d\u003d 6) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of a deletion cannot be empty.\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            int index \u003d Integer.parseInt(ui.FullCommand.substring(6).trim()) - 1;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            String taskremoved \u003d list.get(index).listformat();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            list.remove(index);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            System.out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            System.out.println(taskremoved);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                if (list.get(i).getClass().getName().equals(\"Deadline\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                    sb.append(list.get(i).toString()+\"\\n\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                else if(list.get(i).getClass().getName().equals(\"Event\")){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                    sb.append(list.get(i).toString()+\"\\n\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                else{"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                    sb.append(list.get(i).toString()+\"\\n\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            storage.Storages(sb.toString());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0309463"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0309463"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0309463"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0309463": 40
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0309463"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0309463"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0309463"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0309463"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0309463"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    public void execute(List\u003cTask\u003e list, Ui ui, Storage storage) throws DukeException, ParseException, IOException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        if (ui.FullCommand.equals(\"done\")){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            throw new DukeException(\"The task done number cannot be empty.\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        int numbercheck \u003d Integer.parseInt(ui.FullCommand.substring(5)) - 1;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        list.get(numbercheck).isDone \u003d true;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0309463"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        System.out.println(\"[\" + list.get(numbercheck).getStatusIcon() + \"]\" + list.get(numbercheck).description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            if (list.get(i).getClass().getName().equals(\"Deadline\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                sb.append(list.get(i).toString()+\"\\n\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            else if(list.get(i).getClass().getName().equals(\"Event\")){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                sb.append(list.get(i).toString()+\"\\n\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            else{"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                sb.append(list.get(i).toString()+\"\\n\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        storage.Storages(sb.toString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0309463"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0309463"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0309463": 35
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0309463"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0309463"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0309463"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0309463"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0309463"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        List\u003cTask\u003e list;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        Storage store \u003d new Storage();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            list \u003d store.Readfile();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            while(!isExit) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                ui.ReadCommand();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                String command \u003d ui.FullCommand.split(\" \")[0];"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                Command c \u003d Parser.parse(command);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                c.execute(list,ui, store);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        catch (DukeException | ParseException | IOException | NullPointerException e){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            if(e instanceof ParseException){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                ui.showDateFormatError();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                ui.showErrorMessage(e);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        finally{"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            System.out.println(\"System exiting\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0309463"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0309463"
        },
        "content": "//        finally{"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0309463"
        },
        "content": "//        level 9 branch"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0309463"
        },
        "content": "//            System.out.println(\"\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0309463"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0309463"
        },
        "content": "//        level 6"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0309463": 37,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0309463"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    public DukeException(String errorMessage){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0309463"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0309463"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "e0309463": 6
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0309463"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0309463"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0309463"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    protected Date at ;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0309463"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    public Event(String description, Date at) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0309463"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        return \"E\"+ \"|\" + super.getStatusIcon() + \"| \" + super.description + \"|\" + \"at: \"+at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    public String listformat(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        return \"[E]\" + \"[\" + super.getStatusIcon() + \"]\" + super.description + \"(at:\" + at + \")\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0309463"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0309463"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0309463"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "e0309463": 20
    }
  },
  {
    "path": "src/main/java/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0309463"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0309463"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0309463"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0309463"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0309463"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0309463"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    public void execute(List\u003cTask\u003e list, Ui ui, Storage storage) throws DukeException, ParseException, IOException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        String description \u003d \"\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        if(ui.FullCommand.length() \u003d\u003d 5) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        else{"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            description \u003d ui.FullCommand.split(\"/\")[0].substring(6);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        SimpleDateFormat fmt \u003d new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        Event ev \u003d new Event(description, fmt.parse(ui.FullCommand.split(\"/\")[1].substring(3)));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        list.add(ev);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        System.out.println(ev.listformat());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            if (list.get(i).getClass().getName().equals(\"Deadline\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                sb.append(list.get(i).toString()+\"\\n\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            else if(list.get(i).getClass().getName().equals(\"Event\")){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                sb.append(list.get(i).toString()+\"\\n\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            else{"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                sb.append(list.get(i).toString()+\"\\n\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        storage.Storages(sb.toString());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0309463"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0309463"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0309463": 41
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0309463"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0309463"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0309463"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0309463"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0309463"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0309463"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    public void execute(List\u003cTask\u003e list, Ui ui, Storage storage) throws DukeException, ParseException, IOException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        if(ui.FullCommand.length() \u003d\u003d 5){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of a search cannot be empty.\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            ArrayList\u003cTask\u003e searchedlist \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            for(Task it: list){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                if(it.description.contains(ui.FullCommand.substring(6).trim())) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                    searchedlist.add(it);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            for (int i \u003d 0; i \u003c searchedlist.size(); i++) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                System.out.println(i + 1 + \".\" + searchedlist.get(i).listformat());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0309463"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0309463"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0309463": 30
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0309463"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0309463"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0309463"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0309463"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0309463"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    public void execute(List\u003cTask\u003e list, Ui ui, Storage storage) throws DukeException, ParseException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            System.out.println(i + 1 + \".\" + list.get(i).listformat());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0309463"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0309463"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0309463": 18
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0309463"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    public static Command parse(String command) throws DukeException {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        switch (command){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            case(\"list\"):"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0309463"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            case(\"done\"):"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                return new DoneCommand();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0309463"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            case (\"delete\"):"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                return new DeleteCommand();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0309463"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            case(\"deadline\"):"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                return new DeadlineCommand();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0309463"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            case (\"event\"):"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                return new EventCommand();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0309463"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            case (\"todo\"):"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                return new TodoCommand();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0309463"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            case (\"find\"):"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                return new FindCommand();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0309463"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            case (\"bye\"):"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                return new ByeCommand();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0309463"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0309463"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0309463"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0309463": 33
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0309463"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0309463"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0309463"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0309463"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0309463"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0309463"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0309463"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0309463"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0309463"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0309463"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    String directory \u003d System.getProperty(\"user.home\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    String fileName \u003d \"sample.txt\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    String absolutePath \u003d \"C:\\\\Users\\\\Jess\\\\Documents\\\\GitHub\\\\duke\\\\src\\\\main\\\\java\\\\Save\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    protected void Storages(String fileContent) throws IOException{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0309463"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter(absolutePath);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        fileWriter.write(fileContent);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        fileWriter.flush();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        fileWriter.close();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0309463"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0309463"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    protected ArrayList\u003cTask\u003e Readfile() throws IOException, ParseException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        ArrayList\u003cTask\u003e tlist \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        SimpleDateFormat fmt \u003d new SimpleDateFormat(\"EEE MMM dd HH:mm:ss z yyyy\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        if(new File(absolutePath).exists()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            File file \u003d new File(absolutePath);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            while(sc.hasNext()){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                String[] details \u003d sc.nextLine().split(\"\\\\|\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                if (details[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                    Todo t \u003d new Todo(details[2].trim());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                    if(details[1].equals(\"\\u2713\")){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                        t.isDone \u003d true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                    else{"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                        t.isDone \u003d false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                    tlist.add(t);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                } else if (details[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                    Deadline d \u003d new Deadline(details[2].trim(), fmt.parse(details[3].substring(3).trim()));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                    if(details[1].equals(\"\\u2713\")){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                        d.isDone \u003d true;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                    else{"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                        d.isDone \u003d false;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                    tlist.add(d);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                    Event e \u003d new Event(details[2].trim(), fmt.parse(details[3].substring(3).trim()));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                    if(details[1].equals(\"\\u2713\")){"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                        e.isDone \u003d true;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                    else{"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                        e.isDone \u003d false;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                    tlist.add(e);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        return tlist;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0309463"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0309463": 63
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0309463"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0309463"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0309463"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0309463"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0309463"
        },
        "content": "     public String listformat(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0309463"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0309463": 17
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0309463"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        return \"T\"+ \"|\" + super.getStatusIcon() + \"| \" + super.description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    public String listformat(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        return \"[T]\" + \"[\" + super.getStatusIcon() + \"]\" + super.description ;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0309463"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0309463": 12
    }
  },
  {
    "path": "src/main/java/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0309463"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0309463"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0309463"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0309463"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0309463"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    public void execute(List\u003cTask\u003e list, Ui ui, Storage storage) throws DukeException, ParseException, IOException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        String description \u003d \"\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        if(ui.FullCommand.length() \u003c\u003d 4) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        else{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            description \u003d ui.FullCommand.substring(5);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        Todo to \u003d new Todo(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        list.add(to);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        System.out.println(to.listformat());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            if (list.get(i).getClass().getName().equals(\"Deadline\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                sb.append(list.get(i).toString()+\"\\n\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            else if(list.get(i).getClass().getName().equals(\"Event\")){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                sb.append(list.get(i).toString()+\"\\n\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            else{"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                sb.append(list.get(i).toString()+\"\\n\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0309463"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        storage.Storages(sb.toString());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0309463"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0309463"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0309463": 39
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0309463"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0309463"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0309463"
        },
        "content": "import java.io.InputStreamReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0309463"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0309463"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    protected String FullCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0309463"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    protected String ReadCommand() throws IOException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        BufferedReader reader \u003d new BufferedReader(new InputStreamReader(System.in));"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        FullCommand \u003d reader.readLine();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        return FullCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0309463"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    protected String showWelcome() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        return logo;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    protected void showDateFormatError (){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        System.err.println(\"Date Time has to be in YYYY-MM-DD HH:mm:ss format\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    protected  void showErrorMessage(Exception e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        System.err.println(e.getMessage());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0309463"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0309463": 29
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0309463"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0309463"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0309463"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0309463"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0309463"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0309463"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0309463"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0309463"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0309463"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    public void testUi() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0309463"
        },
        "content": "        assertEquals(\" ____        _        \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0309463"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\", ui.showWelcome());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0309463"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0309463"
        },
        "content": "//    JUnit testing"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0309463"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0309463"
        },
        "content": "//   public void test() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0309463"
        },
        "content": "//        DeadlineCommand deadlineCommand \u003d new DeadlineCommand();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0309463"
        },
        "content": "//        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0309463"
        },
        "content": "//            deadlineCommand.makeDate(\"Sunday\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0309463"
        },
        "content": "//        } catch(ParseException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0309463"
        },
        "content": "//            assertEquals(\"Unparseable date: \u0027Sunday\u0027\", e.getMessage());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0309463"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0309463"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0309463"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0309463": 29
    }
  }
]

[
  {
    "path": "build.gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzw0"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzw0"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzw0": 6,
      "-": 19
    }
  },
  {
    "path": "src/main/java/DatetimeCustom.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzw0"
        },
        "content": "public class DatetimeCustom extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public static String check(String str1) throws DukeException {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            str1 \u003d str1.trim();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            String[] datetime \u003d str1.split(\" \");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            String[] ddmmyyyy \u003d datetime[0].split(\"/\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            String day \u003d ddmmyyyy[0];"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            String month \u003d ddmmyyyy[1];"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            String year \u003d ddmmyyyy[2];"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            String time \u003d datetime[1];"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            int[] daysinmonth \u003d {31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            int month_i \u003d Integer.parseInt(month);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            int year_i \u003d Integer.parseInt(year);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            Integer day_i \u003d Integer.parseInt(day);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            String min \u003d time.substring(2);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            String hr \u003d time.substring(0, 2);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            Integer min_i \u003d Integer.parseInt(min);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            Integer hr_i \u003d Integer.parseInt(hr);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            if (hr_i \u003e 23 || min_i \u003e 59 || month_i \u003e 12 || year_i \u003c 0 || day_i \u003e daysinmonth[month_i - 1])"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                throw new DukeException(\"datetime_N\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            return str1;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            throw new DukeException(\"datetime\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            throw new DukeException(\"datetime\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public static String view(String str1) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            str1 \u003d str1.trim();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            String[] datetime \u003d str1.split(\" \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            String day \u003d datetime[0];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            String[] stndrd \u003d {\"st\", \"nd\", \"rd\"};"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            Integer day_i \u003d Integer.parseInt(day);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            String day_x;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            int min_start \u003d str1.indexOf(\u0027:\u0027);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            String min \u003d \"\" + str1.charAt(min_start + 1) + str1.charAt(min_start + 2);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            if (day_i \u003e\u003d 10 \u0026\u0026 day_i \u003c\u003d 20 || day_i % 10 \u003e 3 || day_i % 10 \u003d\u003d 0) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                day_x \u003d day_i.toString() + \"th\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                day_x \u003d day_i.toString() + stndrd[day_i % 10 - 1];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            str1 \u003d day_x + str1.substring(2);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            if (Integer.parseInt(min) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                str1 \u003d str1.substring(0, min_start + 1) + \" \" + str1.substring(str1.length() - 2);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        return str1;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tzw0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzw0": 55
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzw0"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    protected Date by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    DateFormat fmt \u003d new SimpleDateFormat(\"dd MMMM yyyy, h:mm a\", Locale.US);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public Deadline(String description, String by) throws DukeException, ParseException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        super(description, false);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        if (by.isBlank()) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            throw new DukeException(\"blank by\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/M/yyyy hhmm\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        Date date \u003d sdf.parse(by);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        this.by \u003d date;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        super.tt \u003d \"D\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        super.extra \u003d by;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public Deadline(String description, String by,boolean b) throws DukeException, ParseException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        super(description, b);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        if (by.isBlank()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            throw new DukeException(\"blank by\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/M/yyyy hhmm\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        by \u003d by.trim();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        Date date \u003d sdf.parse(by);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        this.by \u003d date;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        super.tt \u003d \"D\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        super.extra \u003d by;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" +  DatetimeCustom.view(this.fmt.format(by)) + \")\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tzw0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzw0": 39
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public static void main(String[] args) throws ParseException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        String directory \u003d System.getProperty(\"user.home\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        directory +\u003d \"\\\\documents\\\\duke\\\\data\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        String savefile \u003d \"duke.txt\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        String absolutePath \u003d directory + File.separator + savefile;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        String line \u003d \" ____________________________________________________________\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        System.out.print(logo);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        DukeArrayList myList \u003d new DukeArrayList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        String file_content \u003d \"\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        try (BufferedReader br \u003d new BufferedReader(new FileReader(absolutePath))) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            String line_X;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            while ((line_X \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                file_content +\u003d line_X + \"\\n\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            System.out.println(\"duke.txt file not found, creating file...\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        if (!file_content.isBlank()) myList.fromFile(file_content);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        int size_ \u003d myList.size();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            try (PrintWriter out \u003d new PrintWriter(absolutePath)) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                out.println(myList.toFile());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            Boolean no_error \u003d true;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            String command \u003d input.nextLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            System.out.println(line);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            if (command.isBlank()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                System.out.println(\" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                System.out.println(line);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            String sentence[] \u003d command.split(\" \");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                if (size_\u003d\u003d0) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    System.out.println(\"☹ You have no tasks in your list\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    System.out.println(line);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                int x \u003d 0;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                Iterator itr\u003dmyList.iterator();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                while(itr.hasNext()){"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    System.out.print(Integer.toString(x + 1) + \".\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    System.out.println(itr.next().toString());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    x ++;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            else if (command.equals(\"bye\")) break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            else if (sentence[0].equals(\"done\") || sentence[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                int index \u003d -1;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    index \u003d Integer.parseInt(sentence[1]) -1;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    System.out.println(\"☹ OOPS!!! No tasks index specified\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    System.out.println(line);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    System.out.println(\"☹ OOPS!!! Please enter the index number you want to mark as done\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    System.out.println(line);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    System.out.println(\"☹ OOPS!!! No tasks index specified\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    System.out.println(line);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                if (size_ \u003e index \u0026\u0026 index \u003e\u003d 0) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    if (sentence[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        System.out.println(\"[✓] \" + myList.get(index).describe());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        myList.get(index).done(true);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    else if (sentence[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        System.out.println(\"\\t\" + myList.get(index).toString());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        myList.remove(index);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        size_ \u003d myList.size();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        System.out.println(\"Now you have \" + Integer.toString(size_) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    System.out.println(\"☹ OOPS!!! There are no such tasks with this index, you have \"+ Integer.toString(size_ ) + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            else if (sentence[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    String keyword \u003d sentence[1];"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    int x \u003d 0;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    boolean have_result\u003d false;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    if (keyword.isBlank()) throw new ArrayIndexOutOfBoundsException();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    for (Task task: myList) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        if (task.toString().indexOf(keyword) !\u003d -1) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                            System.out.print(Integer.toString(x + 1) + \".\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                            System.out.println(task.toString());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                            x ++;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                            have_result \u003d true;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    if (have_result \u003d\u003d false) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        System.out.println(\"☹ Sorry, no results found\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    System.out.println(\"☹ OOPS!!! Keyword is empty or blank\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            else if (sentence[0].equals(\"todo\") || sentence[0].equals(\"deadline\") || sentence[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                if (sentence[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        myList.add(new Todo(command.substring(5)));"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        no_error \u003d false;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        System.out.println(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        no_error \u003d false;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        System.out.println(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                } else if (sentence[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        Integer end_by \u003d command.indexOf(\" /by \");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        String by \u003d command.substring(end_by + 5);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        if (end_by.equals(-1)) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                            throw new DukeException(\"blank by\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        myList.add(new Deadline(command.substring(9, (end_by \u003e\u003d 0 ? end_by : command.length())), DatetimeCustom.check(by)));"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        no_error \u003d false;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        if (e.equals(\"empty task\"))"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                            System.out.println(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        else {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                            System.out.println(e.response());"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        no_error \u003d false;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        System.out.println(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    } catch (ParseException e) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        System.out.println(\"☹ OOPS!!! Please ensure you have entered a valid date time (eg: mm should not exceed 12)\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                } else if (sentence[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        Integer end_at \u003d command.indexOf(\" /at \");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        String at \u003d command.substring(end_at + 5);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        if (end_at.equals(-1)) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                            throw new DukeException(\"blank at\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        myList.add(new Event(command.substring(6, end_at \u003e\u003d 0 ? end_at: command.length()), DatetimeCustom.check(at)));"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        no_error \u003d false;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        if (e.equals(\"empty task\"))"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                            System.out.println(\"☹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        else"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                            System.out.println(e.response());"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        no_error \u003d false;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        System.out.println(\"☹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                if (no_error) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    System.out.println(\"\\t\" + myList.get(size_).toString());"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    System.out.println(\"Now you have \" + Integer.toString(size_ + 1) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    size_ \u003d myList.size();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                System.out.println(\" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            System.out.println(line);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzw0": 191,
      "-": 8
    }
  },
  {
    "path": "src/main/java/DukeArrayList.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzw0"
        },
        "content": "public class DukeArrayList extends ArrayList\u003cTask\u003e{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    String sep \u003d \"}-}\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        for (Task i : this) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            output +\u003d i.task_type() + sep + i.is_Done().toString() + sep + i.describe() + sep + i.extra_() + \"\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public void fromFile(String file) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        String[] itemlist \u003d file.split(\"\\n\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        int line \u003d 0;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        for (String item: itemlist) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            line ++;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            String[] attributes \u003d item.split(sep);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                if (attributes[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    this.add(new Todo(attributes[2], attributes[1].equals(\"true\")));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                } else if (attributes[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    this.add(new Deadline(attributes[2], DatetimeCustom.check(attributes[3]), attributes[1].equals(\"true\")));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                } else if (attributes[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    this.add(new Event(attributes[2], DatetimeCustom.check(attributes[3]), attributes[1].equals(\"true\")));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    System.out.println(\"☹ OOPS!!! Line \" + Integer.toString(line) + \" in duke.txt is corrupted\" + \", skipping...\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                System.out.println(\"☹ OOPS!!! Line \" + Integer.toString(line) + \" in duke.txt is corrupted[\" + e + \"], skipping...\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                System.out.println(\"☹ OOPS!!! Line \" + Integer.toString(line) + \" in duke.txt is corrupted[\" + e + \"], skipping...\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                System.out.println(\"☹ OOPS!!! Line \" + Integer.toString(line) + \" in duke.txt is corrupted[\" + e + \"], skipping...\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tzw0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzw0": 38
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzw0"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    String error;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public DukeException(String e) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        this.error \u003d e;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        return \"DukeException[\" + error + \"]\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public String response() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        if(this.error.equals(\"datetime\")) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            return \"☹ OOPS!!! Please enter the datetime in this format: dd/mm/yyyy time(24hr)\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } else if(this.error.equals(\"blank at\")) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            return (\"☹ OOPS!!! The time and date of an event cannot be empty.\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } else if(this.error.equals(\"blank by\")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            return (\"☹ OOPS!!! The time and date of a deadline cannot be empty\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } else if(this.error.equals(\"datetime_N\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            return (\"☹ OOPS!!! Please ensure you have entered a valid date time (eg: mm should not exceed 12)\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        return (\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tzw0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzw0": 21
    }
  },
  {
    "path": "src/main/java/Event.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzw0"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    protected Date at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    DateFormat fmt \u003d new SimpleDateFormat(\"dd MMMM yyyy, h:mm a\", Locale.US);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public Event(String description, String at) throws DukeException, ParseException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        super(description, false);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        if (at.isBlank()) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            throw new DukeException(\"blank at\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/M/yyyy hhmm\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        Date date \u003d sdf.parse(at);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        this.at \u003d date;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        super.tt \u003d \"E\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        super.extra \u003d at;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public Event(String description, String at, boolean b) throws DukeException, ParseException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        super(description, b);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        if (at.isBlank()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            throw new DukeException(\"blank at\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/M/yyyy hhmm\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        Date date \u003d sdf.parse(at);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        this.at \u003d date;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        super.tt \u003d \"D\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        super.extra \u003d at;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + DatetimeCustom.view(this.fmt.format(at)) + \")\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tzw0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzw0": 38
    }
  },
  {
    "path": "src/main/java/Task.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzw0"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        protected String tt;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        protected String extra;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        public Task(String description, boolean b)  throws DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            this.tt \u003d \"\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            this.extra \u003d \"\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            this.description \u003d description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            this.isDone \u003d b;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            if (description.isBlank()) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                throw new DukeException(\"empty task\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        public String extra_() {return this.extra;}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        public String task_type() {return this.tt;}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        public Boolean is_Done() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            return this.isDone; //return tick or X symbols"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        public String describe() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                return this.description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        public void done(boolean b) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            this.isDone \u003d b;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            return (isDone ? \"[✓] \" : \"[✗] \") + this.description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tzw0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzw0": 29
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzw0"
        },
        "content": "public class Todo extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public Todo(String description)  throws DukeException{"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        super(description, false);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        super.tt \u003d \"T\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public Todo(String description, boolean b)  throws DukeException{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        super(description, b);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        super.tt \u003d \"T\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzw0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzw0": 15
    }
  }
]

[
  {
    "path": "build.gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzw0"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzw0"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzw0"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tzw0"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzw0": 12,
      "-": 19
    }
  },
  {
    "path": "src/main/java/DatetimeCustom.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzw0"
        },
        "content": "public class DatetimeCustom extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public static String check(String str1) throws DukeException {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            str1 \u003d str1.trim();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            String[] datetime \u003d str1.split(\" \");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            String[] ddmmyyyy \u003d datetime[0].split(\"/\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            String day \u003d ddmmyyyy[0];"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            String month \u003d ddmmyyyy[1];"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            String year \u003d ddmmyyyy[2];"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            String time \u003d datetime[1];"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            int[] daysinmonth \u003d {31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            int month_i \u003d Integer.parseInt(month);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            int year_i \u003d Integer.parseInt(year);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            Integer day_i \u003d Integer.parseInt(day);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            String min \u003d time.substring(2);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            String hr \u003d time.substring(0, 2);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            Integer min_i \u003d Integer.parseInt(min);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            Integer hr_i \u003d Integer.parseInt(hr);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            if (hr_i \u003e 23 || min_i \u003e 59 || month_i \u003e 12 || year_i \u003c 0 || day_i \u003e daysinmonth[month_i - 1])"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                throw new DukeException(\"datetime_N\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            return str1;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            throw new DukeException(\"datetime\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            throw new DukeException(\"datetime\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public static String view(String str1) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            str1 \u003d str1.trim();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            String[] datetime \u003d str1.split(\" \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            String day \u003d datetime[0];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            String[] stndrd \u003d {\"st\", \"nd\", \"rd\"};"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            Integer day_i \u003d Integer.parseInt(day);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            String day_x;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            int min_start \u003d str1.indexOf(\u0027:\u0027);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            String min \u003d \"\" + str1.charAt(min_start + 1) + str1.charAt(min_start + 2);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            if (day_i \u003e\u003d 10 \u0026\u0026 day_i \u003c\u003d 20 || day_i % 10 \u003e 3 || day_i % 10 \u003d\u003d 0) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                day_x \u003d day_i.toString() + \"th\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                day_x \u003d day_i.toString() + stndrd[day_i % 10 - 1];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            str1 \u003d day_x + str1.substring(2);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            if (Integer.parseInt(min) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                str1 \u003d str1.substring(0, min_start + 1) + \" \" + str1.substring(str1.length() - 2);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        return str1;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tzw0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzw0": 55
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzw0"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    protected Date by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    DateFormat fmt \u003d new SimpleDateFormat(\"dd MMMM yyyy, h:mm a\", Locale.US);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public Deadline(String description, String by) throws DukeException, ParseException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        super(description, false);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        if (by.isBlank()) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            throw new DukeException(\"blank by\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/M/yyyy hhmm\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        Date date \u003d sdf.parse(by);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        this.by \u003d date;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        super.tt \u003d \"D\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        super.extra \u003d by;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public Deadline(String description, String by,boolean b) throws DukeException, ParseException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        super(description, b);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        if (by.isBlank()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            throw new DukeException(\"blank by\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/M/yyyy hhmm\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        by \u003d by.trim();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        Date date \u003d sdf.parse(by);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        this.by \u003d date;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        super.tt \u003d \"D\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        super.extra \u003d by;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" +  DatetimeCustom.view(this.fmt.format(by)) + \")\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tzw0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzw0": 39
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.layout.BackgroundFill;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.layout.CornerRadii;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.shape.Rectangle;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.text.Text;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tzw0"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tzw0"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tzw0"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tzw0"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tzw0"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tzw0"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    private Text dialog;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    private Background background;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    private DialogBox(String text, Image img, BackgroundFill background_fill) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        dialog.setWrappingWidth(250.0);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        final Circle clip \u003d new Circle(49.5, 49.5, 49.5);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        displayPicture.setClip(clip);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        background \u003d new Background(background_fill);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        Rectangle rect \u003d new Rectangle(385,120);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        rect.widthProperty().bind(this.widthProperty());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        rect.heightProperty().bind(this.heightProperty().subtract(10));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        rect.setArcHeight(60.0);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        rect.setArcWidth(60.0);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        this.setClip(rect);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        this.setBackground(background);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        BackgroundFill background_fill \u003d new BackgroundFill(Color.LIGHTBLUE, CornerRadii.EMPTY, Insets.EMPTY);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        return new DialogBox(text, img, background_fill);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        BackgroundFill background_fill \u003d new BackgroundFill(Color.PINK, CornerRadii.EMPTY, Insets.EMPTY);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        var db \u003d new DialogBox(text, img, background_fill);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tzw0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzw0": 82
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.text.Font;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import static java.lang.System.exit;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tzw0"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public static void main(String[] args) throws ParseException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        String directory \u003d System.getProperty(\"user.home\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        directory +\u003d \"\\\\documents\\\\duke\\\\data\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        String savefile \u003d \"duke.txt\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        String absolutePath \u003d directory + File.separator + savefile;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        String line \u003d \" ____________________________________________________________\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        System.out.print(logo);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        DukeArrayList myList \u003d new DukeArrayList();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        String file_content \u003d \"\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        try (BufferedReader br \u003d new BufferedReader(new FileReader(absolutePath))) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            String line_X;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            while ((line_X \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                file_content +\u003d line_X + \"\\n\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            System.out.println(\"duke.txt file not found, creating file...\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        if (!file_content.isBlank()) myList.fromFile(file_content);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        int size_ \u003d myList.size();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            try (PrintWriter out \u003d new PrintWriter(absolutePath)) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                out.println(myList.toFile());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            Boolean no_error \u003d true;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            String command \u003d input.nextLine();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            System.out.println(line);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            if (command.isBlank()) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                System.out.println(\" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                System.out.println(line);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            String sentence[] \u003d command.split(\" \");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                if (size_\u003d\u003d0) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    System.out.println(\"☹ You have no tasks in your list\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    System.out.println(line);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                int x \u003d 0;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                Iterator itr\u003dmyList.iterator();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                while(itr.hasNext()){"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    System.out.print(Integer.toString(x + 1) + \".\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    System.out.println(itr.next().toString());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    x ++;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            else if (command.equals(\"bye\")) break;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            else if (sentence[0].equals(\"done\") || sentence[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                int index \u003d -1;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    index \u003d Integer.parseInt(sentence[1]) -1;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    System.out.println(\"☹ OOPS!!! No tasks index specified\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    System.out.println(line);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    System.out.println(\"☹ OOPS!!! Please enter the index number you want to mark as done\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    System.out.println(line);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    System.out.println(\"☹ OOPS!!! No tasks index specified\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    System.out.println(line);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                if (size_ \u003e index \u0026\u0026 index \u003e\u003d 0) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    if (sentence[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        System.out.println(\"[✓] \" + myList.get(index).describe());"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        myList.get(index).done(true);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    else if (sentence[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        System.out.println(\"\\t\" + myList.get(index).toString());"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        myList.remove(index);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        size_ \u003d myList.size();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        System.out.println(\"Now you have \" + Integer.toString(size_) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    System.out.println(\"☹ OOPS!!! There are no such tasks with this index, you have \"+ Integer.toString(size_ ) + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            else if (sentence[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    String keyword \u003d sentence[1];"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    int x \u003d 0;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    boolean have_result\u003d false;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    if (keyword.isBlank()) throw new ArrayIndexOutOfBoundsException();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    for (Task task: myList) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        if (task.toString().indexOf(keyword) !\u003d -1) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                            System.out.print(Integer.toString(x + 1) + \".\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                            System.out.println(task.toString());"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                            x ++;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                            have_result \u003d true;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    if (have_result \u003d\u003d false) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        System.out.println(\"☹ Sorry, no results found\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    System.out.println(\"☹ OOPS!!! Keyword is empty or blank\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            else if (sentence[0].equals(\"todo\") || sentence[0].equals(\"deadline\") || sentence[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                if (sentence[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        myList.add(new Todo(command.substring(5)));"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        no_error \u003d false;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        System.out.println(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        no_error \u003d false;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        System.out.println(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                } else if (sentence[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        Integer end_by \u003d command.indexOf(\" /by \");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        String by \u003d command.substring(end_by + 5);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        if (end_by.equals(-1)) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                            throw new DukeException(\"blank by\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        myList.add(new Deadline(command.substring(9, (end_by \u003e\u003d 0 ? end_by : command.length())), DatetimeCustom.check(by)));"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        no_error \u003d false;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        if (e.equals(\"empty task\"))"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                            System.out.println(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        else {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                            System.out.println(e.response());"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        no_error \u003d false;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        System.out.println(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    } catch (ParseException e) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        System.out.println(\"☹ OOPS!!! Please ensure you have entered a valid date time (eg: mm should not exceed 12)\");"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                } else if (sentence[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        Integer end_at \u003d command.indexOf(\" /at \");"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        String at \u003d command.substring(end_at + 5);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        if (end_at.equals(-1)) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                            throw new DukeException(\"blank at\");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        myList.add(new Event(command.substring(6, end_at \u003e\u003d 0 ? end_at: command.length()), DatetimeCustom.check(at)));"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        no_error \u003d false;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        if (e.equals(\"empty task\"))"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                            System.out.println(\"☹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        else"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                            System.out.println(e.response());"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        no_error \u003d false;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        System.out.println(\"☹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                if (no_error) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    System.out.println(\"\\t\" + myList.get(size_).toString());"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    System.out.println(\"Now you have \" + Integer.toString(size_ + 1) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    size_ \u003d myList.size();"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                System.out.println(\" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            System.out.println(line);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        exit(0);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "tzw0"
        },
        "content": "//    @Override"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        });"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        });"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        // more code to be added here later"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        //Part 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        });"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        });"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.jpg\"));"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.jpg\"));"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                DialogBox.getUserDialog(userText.getText(), new ImageView(user).getImage()),"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                DialogBox.getDukeDialog(dukeText.getText(), new ImageView(duke).getImage())"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        );"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    String getResponse(String input) {"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        return GuiInput.get_input(input);"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzw0": 333,
      "-": 7
    }
  },
  {
    "path": "src/main/java/DukeArrayList.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzw0"
        },
        "content": "public class DukeArrayList extends ArrayList\u003cTask\u003e{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    String sep \u003d \"}-}\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        for (Task i : this) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            output +\u003d i.task_type() + sep + i.is_Done().toString() + sep + i.describe() + sep + i.extra_() + \"\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public void fromFile(String file) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        String[] itemlist \u003d file.split(\"\\n\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        int line \u003d 0;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        for (String item: itemlist) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            line ++;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            String[] attributes \u003d item.split(sep);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                if (attributes[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    this.add(new Todo(attributes[2], attributes[1].equals(\"true\")));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                } else if (attributes[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    this.add(new Deadline(attributes[2], DatetimeCustom.check(attributes[3]), attributes[1].equals(\"true\")));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                } else if (attributes[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    this.add(new Event(attributes[2], DatetimeCustom.check(attributes[3]), attributes[1].equals(\"true\")));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    System.out.println(\"☹ OOPS!!! Line \" + Integer.toString(line) + \" in duke.txt is corrupted\" + \", skipping...\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                System.out.println(\"☹ OOPS!!! Line \" + Integer.toString(line) + \" in duke.txt is corrupted[\" + e + \"], skipping...\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                System.out.println(\"☹ OOPS!!! Line \" + Integer.toString(line) + \" in duke.txt is corrupted[\" + e + \"], skipping...\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                System.out.println(\"☹ OOPS!!! Line \" + Integer.toString(line) + \" in duke.txt is corrupted[\" + e + \"], skipping...\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tzw0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzw0": 38
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzw0"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    String error;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public DukeException(String e) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        this.error \u003d e;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        return \"DukeException[\" + error + \"]\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public String response() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        if(this.error.equals(\"datetime\")) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            return \"X OOPS!!! Please enter the datetime in this format: dd/mm/yyyy time(24hr)\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } else if(this.error.equals(\"blank at\")) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            return (\"X OOPS!!! The time and date of an event cannot be empty.\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } else if(this.error.equals(\"blank by\")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            return (\"X OOPS!!! The time and date of a deadline cannot be empty\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } else if(this.error.equals(\"datetime_N\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            return (\"X OOPS!!! Please ensure you have entered a valid date time (eg: mm should not exceed 12)\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        return (\"X OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tzw0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzw0": 21
    }
  },
  {
    "path": "src/main/java/Event.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzw0"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    protected Date at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    DateFormat fmt \u003d new SimpleDateFormat(\"dd MMMM yyyy, h:mm a\", Locale.US);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public Event(String description, String at) throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        super(description, false);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        if (at.isBlank()) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            throw new DukeException(\"blank at\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/M/yyyy hhmm\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            Date date \u003d sdf.parse(at);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            this.at \u003d date;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            super.tt \u003d \"D\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            super.extra \u003d at;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } catch (ParseException e){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            throw new DukeException(\"datetime\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public Event(String description, String at, boolean b) throws DukeException{"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        super(description, b);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        if (at.isBlank()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            throw new DukeException(\"blank at\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/M/yyyy hhmm\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            Date date \u003d sdf.parse(at);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            this.at \u003d date;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            super.tt \u003d \"D\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            super.extra \u003d at;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } catch (ParseException e){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            throw new DukeException(\"datetime\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + DatetimeCustom.view(this.fmt.format(at)) + \")\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tzw0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzw0": 46
    }
  },
  {
    "path": "src/main/java/GuiInput.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzw0"
        },
        "content": "public class GuiInput {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public static String get_input(String input_gui){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        String output_gui \u003d \"\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        String directory \u003d System.getProperty(\"user.home\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        directory +\u003d \"\\\\documents\\\\duke\\\\data\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        String savefile \u003d \"duke.txt\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        String absolutePath \u003d directory + File.separator + savefile;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        DukeArrayList myList \u003d new DukeArrayList();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        String file_content \u003d \"\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        try (BufferedReader br \u003d new BufferedReader(new FileReader(absolutePath))) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            String line_X;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            while ((line_X \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                file_content +\u003d line_X + \"\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            output_gui +\u003d \"duke.txt file not found, creating file...\\n\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        if (!file_content.isBlank()) myList.fromFile(file_content);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        int size_ \u003d myList.size();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        try (PrintWriter out \u003d new PrintWriter(absolutePath)) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            out.println(myList.toFile());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        Boolean no_error \u003d true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        String command \u003d input_gui;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        if (command.isBlank()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            output_gui +\u003d (\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        String sentence[] \u003d command.split(\" \");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            if (size_\u003d\u003d0) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                output_gui +\u003d (\"OOPS!!! You have no tasks in your list\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            output_gui +\u003d (\"Here are the tasks in your list:\") + \"\\n\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            int x \u003d 0;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            Iterator itr\u003dmyList.iterator();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            while(itr.hasNext()){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                output_gui +\u003d (Integer.toString(x + 1) + \".\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                output_gui +\u003d (itr.next().toString()) + \"\\n\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                x ++;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        else if (command.equals(\"bye\")) output_gui +\u003d (\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        else if (sentence[0].equals(\"done\") || sentence[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            int index \u003d -1;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                index \u003d Integer.parseInt(sentence[1]) -1;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                output_gui +\u003d(\"OOPS!!! No tasks index specified\\n\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                output_gui +\u003d(\"OOPS!!! Please enter the index number you want to mark as done\\n\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                output_gui +\u003d(\"OOPS!!! No tasks index specified\\n\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            if (size_ \u003e index \u0026\u0026 index \u003e\u003d 0) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                if (sentence[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    output_gui +\u003d(\"Nice! I\u0027ve marked this task as done:\") + \"\\n\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    output_gui +\u003d(\"[Done] \" + myList.get(index).describe());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    myList.get(index).done(true);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                else if (sentence[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    output_gui +\u003d(\"Noted. I\u0027ve removed this task:\") + \"\\n\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    output_gui +\u003d(\"\\t\" + myList.get(index).toString()) + \"\\n\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    myList.remove(index);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    size_ \u003d myList.size();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    output_gui +\u003d(\"Now you have \" + Integer.toString(size_) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                output_gui +\u003d(\"There are no such tasks with this index, you have \"+ Integer.toString(size_ ) + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        else if (sentence[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                String keyword \u003d sentence[1];"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                int x \u003d 0;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                boolean have_result\u003d false;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                if (keyword.isBlank()) throw new ArrayIndexOutOfBoundsException();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                output_gui +\u003d(\"Here are the matching tasks in your list:\") +\"\\n\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                for (Task task: myList) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    if (task.toString().indexOf(keyword) !\u003d -1) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        output_gui +\u003d(Integer.toString(x + 1) + \".\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        output_gui +\u003d (task.toString()) + \"\\n\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        x ++;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        have_result \u003d true;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                if (have_result \u003d\u003d false) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    output_gui +\u003d(\"Sorry, no results found\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                output_gui +\u003d(\"OOPS!!! Keyword is empty or blank\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        else if (sentence[0].equals(\"todo\") || sentence[0].equals(\"deadline\") || sentence[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            if (sentence[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    myList.add(new Todo(command.substring(5)));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    no_error \u003d false;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    output_gui +\u003d(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    no_error \u003d false;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    output_gui +\u003d(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            } else if (sentence[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    Integer end_by \u003d command.indexOf(\" /by \");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    String by \u003d command.substring(end_by + 5);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    if (end_by.equals(-1)) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        throw new DukeException(\"blank by\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    myList.add(new Deadline(command.substring(9, (end_by \u003e\u003d 0 ? end_by : command.length())), DatetimeCustom.check(by)));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    no_error \u003d false;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    if (e.equals(\"empty task\"))"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        output_gui +\u003d(\"OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    else {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        output_gui +\u003d(e.response());"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    no_error \u003d false;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    output_gui +\u003d(\"OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                } catch (ParseException e) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    output_gui +\u003d(\"OOPS!!! Please ensure you have entered a valid date time (eg: mm should not exceed 12)\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            } else if (sentence[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    Integer end_at \u003d command.indexOf(\" /at \");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    String at \u003d command.substring(end_at + 5);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    if (end_at.equals(-1)) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        throw new DukeException(\"blank at\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    myList.add(new Event(command.substring(6, end_at \u003e\u003d 0 ? end_at: command.length()), DatetimeCustom.check(at)));"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    no_error \u003d false;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    if (e.equals(\"empty task\"))"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        output_gui +\u003d(\"OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    else"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                        output_gui +\u003d(e.response());"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    no_error \u003d false;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    output_gui +\u003d(\"OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            if (no_error) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                output_gui +\u003d (\"Got it. I\u0027ve added this task:\") + \"\\n\";"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                output_gui +\u003d (\"\\t\" + myList.get(size_).toString()) + \"\\n\";"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                output_gui +\u003d (\"Now you have \" + Integer.toString(size_ + 1) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                size_ \u003d myList.size();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            output_gui +\u003d (\" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        try (PrintWriter out \u003d new PrintWriter(absolutePath)) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            out.println(myList.toFile());"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        return output_gui;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "tzw0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzw0": 169
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzw0"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzw0"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzw0"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzw0"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzw0"
        },
        "content": "//        Application.launch(Duke.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzw0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzw0": 11
    }
  },
  {
    "path": "src/main/java/Main.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzw0"
        },
        "content": "//@Override"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzw0"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzw0"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzw0"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzw0"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tzw0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzw0": 29
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzw0"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzw0"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzw0"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzw0"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.jpg\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.jpg\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        );"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tzw0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzw0": 52
    }
  },
  {
    "path": "src/main/java/Task.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzw0"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        protected String tt;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        protected String extra;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        public Task(String description, boolean b)  throws DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            this.tt \u003d \"\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            this.extra \u003d \"\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            this.description \u003d description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            this.isDone \u003d b;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            if (description.isBlank()) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                throw new DukeException(\"empty task\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        public String extra_() {return this.extra;}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        public String task_type() {return this.tt;}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        public Boolean is_Done() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            return this.isDone; //return tick or X symbols"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        public String describe() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                return this.description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        public void done(boolean b) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            this.isDone \u003d b;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            return (isDone ? \"[✓] \" : \"[✗] \") + this.description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tzw0"
        },
        "content": "//            return (isDone ? \"[Done] \" : \"[X] \") + this.description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tzw0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzw0": 30
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzw0"
        },
        "content": "public class Todo extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public Todo(String description)  throws DukeException{"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        super(description, false);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        super.tt \u003d \"T\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public Todo(String description, boolean b)  throws DukeException{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        super(description, b);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        super.tt \u003d \"T\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzw0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzw0": 15
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzw0"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzw0"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzw0"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzw0"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzw0"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzw0"
        },
        "content": "\u003c?import javafx.scene.text.Text?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzw0"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzw0"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzw0"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzw0"
        },
        "content": "      \u003cText fx:id\u003d\"dialog\" text\u003d\"Label\"\u003e\u003c/Text\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzw0"
        },
        "content": "      \u003cStackPane\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzw0"
        },
        "content": "      \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzw0"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            \u003cInsets left\u003d\"5.0\" right\u003d\"7.0\"/\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzw0"
        },
        "content": "         \u003c/padding\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzw0"
        },
        "content": "      \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tzw0"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tzw0"
        },
        "content": "   \u003cpadding\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tzw0"
        },
        "content": "      \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tzw0"
        },
        "content": "   \u003c/padding\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tzw0"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "tzw0": 25
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzw0"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzw0"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzw0"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzw0"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzw0"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzw0"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzw0"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzw0"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzw0"
        },
        "content": "      \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzw0"
        },
        "content": "      \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzw0"
        },
        "content": "      \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzw0"
        },
        "content": "         \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzw0"
        },
        "content": "         \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzw0"
        },
        "content": "      \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzw0"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzw0"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "tzw0": 19
    }
  }
]

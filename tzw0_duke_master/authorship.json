[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzw0"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzw0"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzw0"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tzw0"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tzw0"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tzw0"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tzw0"
        },
        "content": "test {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tzw0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzw0": 18,
      "-": 19
    }
  },
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzw0"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzw0"
        },
        "content": " * Represents a command that adds an item to tasks"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzw0"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzw0"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    private String tasktype;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    private String datetime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * Creates a new AddCommand object with the given type of task and description"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @param tasktype The task type"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @param description of the task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public AddCommand(String tasktype, String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        this.tasktype \u003d tasktype;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * Creates a new AddCommand object with the given type of task, description and date time"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @param tasktype The task type"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @param description of the task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @param datetime the date and time"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public AddCommand(String tasktype, String description, String datetime) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        this.tasktype \u003d tasktype;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        this.datetime \u003d datetime;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * Executes the AddCommand and saves changes to storage"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @param tasks the task list"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @param storage the storage file"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @param ui the user interface object"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @return ui response as a string"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        if (tasktype.equals(\"todo\")) tasks.add(new Todo(description, false));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        else if (tasktype.equals(\"deadline\")) tasks.add(new Deadline(description, datetime, false));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        else if (tasktype.equals(\"event\")) tasks.add(new Event(description, datetime, false));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        else throw new DukeException(\"add error\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        return ui.showTaskAdded(tasks.get(tasks.size()-1).toString(), tasks.size());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tzw0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzw0": 43
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzw0"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzw0"
        },
        "content": " * Represents a command registered in Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzw0"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzw0"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    protected boolean is_exit \u003d false;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * Executes the command"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @param tasks The task list that you want to execute the command on"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @param ui The user interface object used to respond to the user"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @param storage The storage object used to save the changes made by the executed command"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @return the response as a string from the user interface"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @throws DukeException if command cannot be executed"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * Checks if the programme should exit"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @return True if the programme should exit"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        return is_exit;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    };"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tzw0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzw0": 22
    }
  },
  {
    "path": "src/main/java/DatetimeFormatter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzw0"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzw0"
        },
        "content": " * Represents a datetime formatter"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzw0"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzw0"
        },
        "content": "public class DatetimeFormatter {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * Validates that the datetime is valid"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @param str1 the datetime in the form of a String to be checked"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @return str1 back if it is a valid datetime"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @throws DukeException if str1 is not a valid datetime"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public static String check(String str1) throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            str1 \u003d str1.trim();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            String[] datetime \u003d str1.split(\" \");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            String[] ddmmyyyy \u003d datetime[0].split(\"/\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            String day \u003d ddmmyyyy[0];"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            String month \u003d ddmmyyyy[1];"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            String year \u003d ddmmyyyy[2];"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            String time \u003d datetime[1];"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            int[] daysinmonth \u003d {31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            int month_i \u003d Integer.parseInt(month);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            int year_i \u003d Integer.parseInt(year);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            Integer day_i \u003d Integer.parseInt(day);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            String min \u003d time.substring(2);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            String hr \u003d time.substring(0, 2);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            Integer min_i \u003d Integer.parseInt(min);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            Integer hr_i \u003d Integer.parseInt(hr);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            if (hr_i \u003e 23 || min_i \u003e 59 || month_i \u003e 12 || year_i \u003c 0 || day_i \u003e daysinmonth[month_i - 1])"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                throw new DukeException(\"datetime\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            return str1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            throw new DukeException(\"datetime\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            throw new DukeException(\"datetime\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * Formats the datetime object to match the exact format required"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @param str1 the datetime in the form of a String to be formatted"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @return the datetime in the exact format required"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public static String view(String str1) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            str1 \u003d str1.trim();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            String[] datetime \u003d str1.split(\" \");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            String day \u003d datetime[0];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            String[] stndrd \u003d {\"st\", \"nd\", \"rd\"};"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            Integer day_i \u003d Integer.parseInt(day);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            String day_x;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            if (day_i \u003e\u003d 10 \u0026\u0026 day_i \u003c\u003d 20 || day_i % 10 \u003e 3 || day_i % 10 \u003d\u003d 0) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                day_x \u003d day_i.toString() + \"th\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                day_x \u003d day_i.toString() + stndrd[day_i % 10 - 1];"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            str1 \u003d day_x + str1.substring(2);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            int min_start \u003d str1.indexOf(\u0027:\u0027);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            String min \u003d \"\" + str1.charAt(min_start + 1) + str1.charAt(min_start + 2);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            String ampm \u003d str1.substring(str1.length() - 2).toLowerCase();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            if (Integer.parseInt(min) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                str1 \u003d str1.substring(0, min_start) + ampm;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                str1 \u003d str1.substring(0, str1.length() - 3) + ampm;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        return str1;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tzw0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzw0": 72
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzw0"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzw0"
        },
        "content": " * Represents a Deadline-typed-task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzw0"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzw0"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    protected Date by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    DateFormat fmt \u003d new SimpleDateFormat(\"dd MMMM yyyy, h:mm a\", Locale.US);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * Creates a Deadline object with the given description, datetime and whether it is done"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @param description of the task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @param by the due datetime of the deadline"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @param b if the task is checked"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @throws DukeException if the deadline is not valid"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public Deadline(String description, String by,boolean b) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        super(description, b);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        if (by.isBlank()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            throw new DukeException(\"blank by\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            DatetimeFormatter.check(by);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/M/yyyy hhmm\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            by \u003d by.trim();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            Date date \u003d sdf.parse(by);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            this.by \u003d date;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            super.tt \u003d \"D\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            super.extra \u003d by;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            throw new DukeException(\"datetime\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * Represents the object of this class as a string"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @return that string"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" +  DatetimeFormatter.view(this.fmt.format(by)) + \")\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tzw0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzw0": 45
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzw0"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzw0"
        },
        "content": " * Represents a command that deletes an item from tasks"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzw0"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzw0"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * Creates a new DeleteCommand object with the given index"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @param index of the task to be deleted"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * Executes the DeleteCommand and saves changes to storage"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        if (this.index \u003e\u003d tasks.size()) throw new DukeException(\"index error\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        String output \u003d ui.showTaskDelete(tasks.get(this.index).toString(),tasks.size()-1);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        tasks.deleteTask(index);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tzw0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzw0": 23
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.layout.BackgroundFill;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.layout.CornerRadii;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.shape.Rectangle;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.text.Text;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tzw0"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tzw0"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tzw0"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tzw0"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tzw0"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tzw0"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    private Text dialog;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    private Background background;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    private DialogBox(String text, Image img, BackgroundFill background_fill) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        dialog.setWrappingWidth(250.0);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        final Circle clip \u003d new Circle(49.5, 49.5, 49.5);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        displayPicture.setClip(clip);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        background \u003d new Background(background_fill);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        Rectangle rect \u003d new Rectangle(385,120);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        rect.widthProperty().bind(this.widthProperty());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        rect.heightProperty().bind(this.heightProperty().subtract(10));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        rect.setArcHeight(60.0);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        rect.setArcWidth(60.0);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        this.setClip(rect);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        this.setBackground(background);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        BackgroundFill background_fill \u003d new BackgroundFill(Color.LIGHTBLUE, CornerRadii.EMPTY, Insets.EMPTY);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        return new DialogBox(text, img, background_fill);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        BackgroundFill background_fill \u003d new BackgroundFill(Color.PINK, CornerRadii.EMPTY, Insets.EMPTY);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        var db \u003d new DialogBox(text, img, background_fill);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tzw0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzw0": 82
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzw0"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzw0"
        },
        "content": " * Represents a command that checks items as done in tasks"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzw0"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzw0"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * Executes the DoneCommand"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        if (this.index \u003e\u003d tasks.size()) throw new DukeException(\"index error\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        tasks.doneTask(this.index);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        String output \u003d ui.showTaskDone(tasks.get(this.index).toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzw0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzw0": 19
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.text.Normalizer;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.util.NoSuchElementException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import static java.lang.System.exit;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tzw0"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tzw0"
        },
        "content": " * Represents the task manager"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tzw0"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tzw0"
        },
        "content": "public class Duke  extends Application {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * Create a task manager with a task list from an existing file"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @param file to create a task list from"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public Duke(String file) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        String directory \u003d System.getProperty(\"user.home\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        directory +\u003d \"\\\\documents\\\\duke\\\\data\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        String savefile \u003d file;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        String absolutePath \u003d directory + File.separator + savefile;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        storage \u003d new Storage(absolutePath);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * Execute the CLI task manager"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            finally {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * Da shit"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @param args i have no idea what this is for"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        new Duke(\"tasks.txt\").run();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        exit(0);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        //Step 1. Setting up reqoutput +\u003d uired components"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        });"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        });"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        // more code to be added here later"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        //Part 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        });"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        });"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.jpg\"));"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.jpg\"));"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                DialogBox.getUserDialog(userText.getText(), new ImageView(user).getImage()),"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                DialogBox.getDukeDialog(dukeText.getText(), new ImageView(duke).getImage())"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        );"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * The response function for the GUI"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @param input user input"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @return the response"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    String getResponse(String input) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            String toGui \u003d  c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            return toGui;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            return ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzw0": 199,
      "-": 2
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzw0"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzw0"
        },
        "content": " * Represents an exception thrown by Duke that may be specific to its application"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzw0"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzw0"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    private String error;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * Creates a new DukeException of e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @param e The error message"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public DukeException(String e) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        this.error \u003d e;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * Represents the exception in a String"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        return \"DukeException[\" + error + \"]\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * Retrieve the message from the error"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        return this.error;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tzw0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzw0": 26
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzw0"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzw0"
        },
        "content": " * Represents an Event-typed-task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzw0"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzw0"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    protected Date at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    DateFormat fmt \u003d new SimpleDateFormat(\"dd MMMM yyyy, h:mm a\", Locale.US);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * Creates an Event object with the given description, datetime and whether it is done"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @param description of the Event"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @param b if the task is checked or not"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @param at the date and time of the event"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @throws DukeException if there is an error in creating the event"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public Event(String description, String at, boolean b) throws DukeException{"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        super(description, b);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        if (at.isBlank()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            throw new DukeException(\"blank at\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            DatetimeFormatter.check(at);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/M/yyyy hhmm\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            Date date \u003d sdf.parse(at);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            this.at \u003d date;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            super.tt \u003d \"D\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            super.extra \u003d at;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } catch (ParseException e){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            throw new DukeException(\"datetime\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * Represents the object of this class as a string"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @return that string"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + DatetimeFormatter.view(this.fmt.format(at)) + \")\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tzw0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzw0": 44
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzw0"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzw0"
        },
        "content": " * Represents a command that exits from the programme"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzw0"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzw0"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * Executes the ExitCommand"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        super.is_exit \u003d true;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        ui.close();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzw0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzw0": 13
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzw0"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzw0"
        },
        "content": " * Represents a command that finds items from tasks"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzw0"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzw0"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * Creates a new FindCommand object with the given keyword"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @param keyword used to find task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * Executes the FindCommand"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        return  ui.print_this(tasks.find(keyword));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzw0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzw0": 19
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzw0"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzw0"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzw0"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzw0"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzw0"
        },
        "content": "//        Application.launch(Duke.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzw0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzw0": 11
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzw0"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzw0"
        },
        "content": " * Represents a command that list items from tasks"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzw0"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzw0"
        },
        "content": "public class ListCommand extends Command{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * Executes the ListCommand"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        return ui.print_this(tasks.print_list());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzw0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzw0": 11
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzw0"
        },
        "content": "//@Override"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzw0"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzw0"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzw0"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzw0"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    private Duke duke \u003d new Duke(\"tasks.txt\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tzw0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzw0": 29
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzw0"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzw0"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzw0"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzw0"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.jpg\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.jpg\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        );"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tzw0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzw0": 52
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzw0"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzw0"
        },
        "content": " * Represents a parser to make sense of user input and translate it to commands for Duke"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzw0"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzw0"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * Interprets user input"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @param input to be interpreted"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @return Duke commands based on user input"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @throws DukeException if Duke cannot make sense of the input"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public static Command parse(String input) throws DukeException { //input validation"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        ArrayList\u003cString\u003e command_list \u003d new ArrayList\u003cString\u003e(Arrays.asList(\"bye\", \"list\", \"find\", \"delete\", \"done\", \"todo\", \"deadline\", \"event\"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        String operation;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        String date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        int index \u003d-1;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        String arg1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        int command_status \u003d -1;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        if (!input.isBlank()) command_status \u003d command_list.indexOf(input.split(\" \")[0]);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            throw new DukeException(\"unknown\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        if (command_status \u003e -1) { //keyword 1 is accepted"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            String[] operation_list \u003d input.split(\" \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            operation \u003d operation_list[0];"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            if ((operation.equals(\"delete\") || operation.equals(\"done\"))) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                if (operation_list.length !\u003d 2) throw new DukeException(\"index error\" + input.length());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    index \u003d Integer.parseInt(operation_list[1]) -1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    if (index \u003c 0) throw new DukeException(\"index error\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    throw new DukeException(\"index error\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                if (operation.equals(\"delete\")) return new DeleteCommand(index);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                else return new DoneCommand(index); //done"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            } else if (operation.equals(\"find\") || operation.equals(\"todo\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                if (operation_list.length \u003d\u003d 1) throw new DukeException(\"arg1 error \"+ operation);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                arg1 \u003d input.substring(5);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                if (arg1.isBlank()) throw new DukeException(\"arg1 error \"+ operation);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                arg1.trim();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                if (operation.equals(\"find\")) return new FindCommand(arg1);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                else return new AddCommand(\"todo\", arg1);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            } else if (operation.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                int by_index \u003d input.indexOf(\" /by \");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                if (by_index \u003d\u003d -1) throw new DukeException(\"datetime\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                arg1 \u003d input.substring(8, by_index).trim();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                if (arg1.isBlank()) throw new DukeException(\"arg1 error \"+ operation);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                date \u003d input.substring(by_index + 5).trim();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                if (date.isBlank()) throw new DukeException(\"datetime\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                return new AddCommand(\"deadline\", arg1, date);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            } else if (operation.equals(\"event\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                int at_index \u003d input.indexOf(\" /at \");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                if (at_index \u003d\u003d -1) throw new DukeException(\"datetime\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                arg1 \u003d input.substring(5, at_index).trim();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                if (arg1.isBlank()) throw new DukeException(\"arg1 error \"+ operation);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                date \u003d input.substring(at_index + 5).trim();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                if (date.isBlank()) throw new DukeException(\"datetime\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                return new AddCommand(\"event\", arg1, date);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            } else if (operation.equals(\"bye\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                return new ExitCommand();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            } else if (operation.equals(\"list\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        throw new DukeException(\"unknown\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tzw0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzw0": 68
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzw0"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzw0"
        },
        "content": " * Represents a storage file inside data"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzw0"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzw0"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    private String file_content;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    private String file_path;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * Create a storage file found at filepath"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @param filePath to be used for storage"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public Storage (String filePath){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        file_path \u003d filePath;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        file_content \u003d \"\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        try (BufferedReader br \u003d new BufferedReader(new FileReader(filePath))) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            String line_X;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            while ((line_X \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                file_content +\u003d line_X + \"\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            System.out.println(filePath + \" file not found, creating file...\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * Laod the file from the filepath"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @return the file in the form of a string"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @throws DukeException if the file cannot be found or if there is no task in the list"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public String load () throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        if (file_content.isBlank()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            throw new DukeException(\"file_not_found\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        return file_content;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * Save the tasklist given to the filepath"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @param tasks the tasklist to be saved"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public void save(TaskList tasks) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        String sep \u003d \"}-}\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        for (Task i : tasks) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            output +\u003d i.save_as(sep);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        try (PrintWriter out \u003d new PrintWriter(file_path)) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            out.println(output);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tzw0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzw0": 51
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzw0"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzw0"
        },
        "content": " * Represents a Task recorded by Duke task manager"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzw0"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzw0"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        protected String tt;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        protected String extra;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzw0"
        },
        "content": "         * Creates a Task object with the given description and whether it is done"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzw0"
        },
        "content": "         * @param description of the task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzw0"
        },
        "content": "         * @param b if a task is checked"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzw0"
        },
        "content": "         * @throws DukeException if an error has occured in constructing the task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzw0"
        },
        "content": "         */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        public Task(String description, boolean b)  throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            this.tt \u003d \"\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            this.extra \u003d \"\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            this.description \u003d description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            this.isDone \u003d b;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            if (description.isBlank()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                throw new DukeException(\"empty task\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tzw0"
        },
        "content": "         * Pack the Task in the form of a string with the given separator for writing to a file"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tzw0"
        },
        "content": "         * @param sep the separator used"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tzw0"
        },
        "content": "         * @return the save form of a task"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tzw0"
        },
        "content": "         */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        public String save_as(String sep) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            return tt + sep + isDone + sep + description + sep + extra + \"\\n\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tzw0"
        },
        "content": "         * Mark a Task as b"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tzw0"
        },
        "content": "         * @param b checked or not checked"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tzw0"
        },
        "content": "         */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        public void done(boolean b) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            this.isDone \u003d b;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tzw0"
        },
        "content": "         * Represents the object of this class as a string"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tzw0"
        },
        "content": "         * @return that string"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tzw0"
        },
        "content": "         */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            return (isDone ? \"[Done] \" : \"[X] \") + this.description;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tzw0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzw0": 46
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzw0"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzw0"
        },
        "content": " * Represents the tasklist that duke is managing"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzw0"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzw0"
        },
        "content": "public class TaskList extends ArrayList\u003cTask\u003e{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    String sep \u003d \"}-}\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * Creates an empty task list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * Creates a task list from file"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @param file the file in the form of a string to be converted to the task list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public TaskList(String file) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        if (file.isBlank()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        String[] itemlist \u003d file.split(\"\\n\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        int line \u003d 0;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        for (String item: itemlist) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            line ++;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            String[] attributes \u003d item.split(sep);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                if (attributes[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    this.add(new Todo(attributes[2], attributes[1].equals(\"true\")));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                } else if (attributes[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    this.add(new Deadline(attributes[2], DatetimeFormatter.check(attributes[3]), attributes[1].equals(\"true\")));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                } else if (attributes[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    this.add(new Event(attributes[2], DatetimeFormatter.check(attributes[3]), attributes[1].equals(\"true\")));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                    System.out.println(\"☹ OOPS!!! Line \" + Integer.toString(line) + \" in duke.txt is corrupted\" + \", skipping...\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                System.out.println(\"☹ OOPS!!! Line \" + Integer.toString(line) + \" in duke.txt is corrupted[\" + e + \"], skipping...\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                System.out.println(\"☹ OOPS!!! Line \" + Integer.toString(line) + \" in duke.txt is corrupted[\" + e + \"], skipping...\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * Formats the task list in a readable format"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @return a task list in the form of a string"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @throws DukeException if the list is empty"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public String print_list() throws DukeException{ "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        if (this.size()\u003d\u003d 0) throw new DukeException(\"empty list\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        String output \u003d\"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        int x \u003d 0;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        Iterator itr\u003dthis.iterator();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        while(itr.hasNext()){"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            output +\u003d \"\\n\" + (Integer.toString(x + 1) + \".\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            output +\u003d (itr.next().toString());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            x ++;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * Deletes the task at given index"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @param index of the task to be deleted"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        this.remove(index);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * Marks the task at given index as done"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @param index of the task to be marked as done"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public void doneTask(int index) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        this.get(index).done(true);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * Searches for a task with the given keyword"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @param keyword to be found"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @return The list of task with the keyword"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public String find(String keyword) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        int x \u003d 0;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        String output \u003d \"Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        boolean have_result\u003d false;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        for (Task task: this) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            if (task.toString().indexOf(keyword) !\u003d -1) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                output +\u003d \"\\n\" + (Integer.toString(x + 1) + \".\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                output +\u003d  (task.toString());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                x ++;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                have_result \u003d true;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        if (have_result \u003d\u003d false) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            return (\"Sorry, no results found\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tzw0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzw0": 101
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzw0"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzw0"
        },
        "content": " * Represents a Todo-typed-task"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzw0"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzw0"
        },
        "content": "public class Todo extends Task{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * Creates a Todo object with the given description and whether it is done"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @param description of the todo task"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @param b if the task is checked or not"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @throws DukeException if the Todo task is invalid"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public Todo(String description, boolean b)  throws DukeException{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        super(description, b);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        super.tt \u003d \"T\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * Represents the object of this class as a string"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @return that string"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tzw0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzw0": 23
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import static java.lang.System.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzw0"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzw0"
        },
        "content": " * Represents the user interface"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzw0"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzw0"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    private String line \u003d \" ____________________________________________________________\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    private String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * Shows the welcome message"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        System.out.print(logo);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * Shows a line"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * Shows and"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @return whatever string is passed into the function"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @param thingy to be printed"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public String print_this(String thingy) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        System.out.println(thingy);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        return thingy;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * Reads and"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @return user input from keyboard"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        return input.nextLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * Shows the goodbye message"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public void close() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * Shows and returns the error message"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @param error_msg the error message to be formatted and printed"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @return the formatted error message"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public String showError(String error_msg) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        String out_ \u003d \"\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        if(error_msg.equals(\"datetime\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            out_ \u003d  \"OOPS!!! Please enter the datetime in this format: dd/mm/yyyy HHMM\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } else if(error_msg.equals(\"unknown\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            out_ \u003d  (\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } else if (error_msg.equals(\"arg1 error find\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            out_ \u003d  \"OOPS!!! Please enter a keyword or phrase for your search\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } else if (error_msg.equals(\"arg1 error todo\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            out_ \u003d  \"OOPS!!! The description of a todo cannot be blank\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } else if (error_msg.equals(\"arg1 error deadline\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            out_ \u003d  \"OOPS!!! The description of a deadline cannot be blank\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } else if (error_msg.equals(\"arg1 error event\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            out_ \u003d  \"OOPS!!! The description of an event cannot be blank\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } else if (error_msg.equals(\"index error\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            out_ \u003d  \"OOPS!!! Please enter a valid task index number\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } else if (error_msg.equals(\"empty list\")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            out_ \u003d  \"You have no tasks in your list\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } else if (error_msg.equals(\"empty task\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            out_ \u003d\"OOPS!!! The description of a task cannot be empty.\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        else out_ \u003d  (\"OOPS!!! \" + error_msg);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        System.out.println(out_);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        return out_;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * Shows and returns the loading error"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @return loading error"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public String showLoadingError() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        String out_ \u003d \"OOPS!!! I\u0027m sorry, but your saved file cannot be found\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        System.out.println(out_);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        return out_;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * Shows and"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @return the given taska as done"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @param task to be displayed as done"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public String showTaskDone(String task) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tzw0"
        },
        "content": "//        String out_ \u003d \"Nice! I\u0027ve marked this task as done:\\n\" + \"[✓] \" + task;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        String out_ \u003d \"Nice! I\u0027ve marked this task as done:\\n\" + task;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        System.out.println(out_);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        return out_;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * Shows and"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @return the given task as deleted"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @param task to be shown as deleted"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @param size of the task list"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public String showTaskDelete(String task, int size) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        String out_ \u003d \"Noted. I\u0027ve removed this task:\" + \"\\n\" + \"\\t\" + task + \"\\n\" + \"Now you have \" + Integer.toString(size) + \" tasks in the list.\";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        System.out.println(out_);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        return out_;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * Shows and"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @return the given task as added"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @param task to be shown as added"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     * @param size of the task list"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tzw0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public String showTaskAdded(String task, int size) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        String out_ \u003d \"Got it. I\u0027ve added this task:\" + \"\\n\" + \"\\t\" + task  +\"\\n\" + \"Now you have \" + Integer.toString(size) + \" tasks in the list.\";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        System.out.println(out_);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        return out_;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    //☹"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tzw0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzw0": 127
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzw0"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzw0"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzw0"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzw0"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzw0"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzw0"
        },
        "content": "\u003c?import javafx.scene.text.Text?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzw0"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzw0"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzw0"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzw0"
        },
        "content": "      \u003cText fx:id\u003d\"dialog\" text\u003d\"Label\"\u003e\u003c/Text\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzw0"
        },
        "content": "      \u003cStackPane\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzw0"
        },
        "content": "      \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzw0"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            \u003cInsets left\u003d\"5.0\" right\u003d\"7.0\"/\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzw0"
        },
        "content": "         \u003c/padding\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzw0"
        },
        "content": "      \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tzw0"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tzw0"
        },
        "content": "   \u003cpadding\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tzw0"
        },
        "content": "      \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tzw0"
        },
        "content": "   \u003c/padding\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tzw0"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "tzw0": 25
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzw0"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzw0"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzw0"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzw0"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzw0"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzw0"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzw0"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzw0"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzw0"
        },
        "content": "      \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzw0"
        },
        "content": "      \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzw0"
        },
        "content": "      \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzw0"
        },
        "content": "         \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzw0"
        },
        "content": "         \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzw0"
        },
        "content": "      \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzw0"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzw0"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "tzw0": 19
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzw0"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public void Test() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            new Deadline(\"asd 234567 xcvbm !\", \"12/12/12 1234\", false);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            new Deadline(\"asfvfs 134\", \"12/12/12 2300\", false);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            assert false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            new Deadline(\"asfvfs 134\", \"12/12/12 9900\", false);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            assert false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } catch (DukeException e) { }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            new Deadline(\"asfvfs 134\", \"12/13/0 1200\", false);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            assert false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } catch (DukeException e) { }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            new Deadline(\"asfvfs 134\", \"30/2/12 2300\", false);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            assert false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } catch (DukeException e) { }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        assert true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tzw0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzw0": 34
    }
  },
  {
    "path": "src/test/java/DeleteTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzw0"
        },
        "content": "public class DeleteTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public void Test() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            tasks.add(new Todo(\"x\",false));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            tasks.deleteTask(0);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            if (tasks.size() \u003d\u003d 0)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                assert true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            else assert false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            assert false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            assert false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tzw0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzw0": 25
    }
  },
  {
    "path": "src/test/java/DoneTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzw0"
        },
        "content": "public class DoneTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public void Test() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            tasks.add(new Todo(\"asd\",false));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            tasks.doneTask(0);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            if (tasks.get(0).toString().indexOf(\"Done\") \u003e -1)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                assert true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            else assert false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            assert false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            assert false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tzw0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzw0": 25
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzw0"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public void DeadlineTest() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        new DeadlineTest().Test();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public void DeleteTest() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        new DeleteTest().Test();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public void DoneTest() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        new DoneTest().Test();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public void EventTest() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        new EventTest().Test();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public void FindTest() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        new FindTest().Test();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public void ListTest() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        new ListTest().Test();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public void ParserTest() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        new ParserTest().Test();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public void Todo() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        new TodoTest().Test();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tzw0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzw0": 42
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzw0"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public void Test() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            new Event(\"asd 234567 xcvbm !\", \"12/12/12 1234\", false);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            new Event(\"asfvfs 134\", \"12/12/12 2300\", false);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            assert false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            new Event(\"asfvfs 134\", \"12/12/12 9900\", false);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            assert false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } catch (DukeException e) { }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            new Event(\"asfvfs 134\", \"12/13/0 1200\", false);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            assert false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } catch (DukeException e) { }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            new Event(\"asfvfs 134\", \"30/2/12 2300\", false);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            assert false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } catch (DukeException e) { }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tzw0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzw0": 33
    }
  },
  {
    "path": "src/test/java/FindTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzw0"
        },
        "content": "public class FindTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public void Test() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            tasks.add(new Todo(\"abcdef\", false));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            tasks.add(new Todo(\"zxcv\", false));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            if (tasks.find(\"abcdef\").indexOf(\"abcdef\") \u003e -1 \u0026\u0026 tasks.find(\"abcdef\").indexOf(\"zxcv\") \u003d\u003d -1 \u0026\u0026 tasks.find(\"abczxc\").indexOf(\"Sorry\") \u003e -1)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                assert true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            else assert false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            assert false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            assert false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tzw0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzw0": 25
    }
  },
  {
    "path": "src/test/java/ListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzw0"
        },
        "content": "public class ListTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public void Test() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            tasks.add(new Todo(\"abcdef\", false));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            tasks.add(new Todo(\"zxcv\", false));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            if (tasks.print_list().indexOf(\"Here are the tasks in your list:\") \u003e -1)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzw0"
        },
        "content": "                assert true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            else assert false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            assert false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            assert false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            TaskList tasksEmpty \u003d new TaskList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            tasksEmpty.print_list();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            assert false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            assert true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            assert false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tzw0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzw0": 34
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzw0"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public void Test() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            Command a \u003d Parser.parse(\"todo x\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            Command b \u003d Parser.parse(\"deadline x /by 12/12/12 1234 \");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            Command c \u003d Parser.parse(\"event x /at 12/12/12 1234\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            Command d \u003d Parser.parse(\"find x\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            Command e \u003d Parser.parse(\"delete 1\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            Command f \u003d Parser.parse(\"list\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            Command g \u003d Parser.parse(\"bye\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            Command h \u003d Parser.parse(\"done 1\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            assert false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            Command j \u003d Parser.parse(\"x\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            assert false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            assert true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tzw0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzw0": 31
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzw0"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzw0"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzw0"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    public void Test() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            new Todo(\"a a a /by 12/13/12 9934)\", false).toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            new Todo(\"a a a /at 12/13/12 9934)\", false).toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            assert false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            new Todo(\"\", false).toString();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            assert false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tzw0"
        },
        "content": "            assert true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tzw0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tzw0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tzw0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzw0": 25
    }
  }
]

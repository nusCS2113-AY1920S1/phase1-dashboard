[
  {
    "path": "src/main/java/Duke.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import static common.Messages.filePath;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            //same as the previous executeCommand()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        new Duke(filePath).run();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wjlingg": 45,
      "-": 4
    }
  },
  {
    "path": "src/main/java/command/Command.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public abstract void execute(TaskList taskList, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wjlingg": 10
    }
  },
  {
    "path": "src/main/java/common/Messages.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "package common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final int DISPLAYED_INDEX_OFFSET \u003d 1;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final String filePath \u003d \"C:\\\\Users\\\\Wen Jian\\\\Desktop\\\\duke\\\\src\\\\main\\\\data\\\\duke.txt\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final String MESSAGE_TASKED \u003d \"     Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final String MESSAGE_MARKED \u003d \"     Nice! I\u0027ve marked this task as done:\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final String MESSAGE_ADDED \u003d \"     Got it. I\u0027ve added this task:\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final String MESSAGE_DELETE \u003d \"     Noted. I\u0027ve removed this task:\\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final String MESSAGE_FIND \u003d \"     Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final String MESSAGE_ITEMS1 \u003d \"     Now you have \";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final String MESSAGE_ITEMS2 \u003d \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final String MESSAGE_BYE \u003d \"     Bye. Hope to see you again soon!\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final String MESSAGE_FOLLOWUP_INVALID_INDEX \u003d \"     Kindly enter command with index not more than \";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final String MESSAGE_FOLLOWUP_EMPTY_INDEX \u003d \"       Kindly enter the command again with an index.\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final String MESSAGE_FOLLOWUP_NUll \u003d \"       Kindly enter the command again with a description.\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final String ERROR_MESSAGE_GENERAL \u003d \"       ☹ OOPS!!! The description cannot be empty.\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final String ERROR_MESSAGE_EVENT \u003d \"       ☹ OOPS!!! Please specify the event details in this format: \\n         event [event description] /at [event time or venue]\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final String ERROR_MESSAGE_DEADLINE \u003d \"       ☹ OOPS!!! Please specify the deadline in this format: \\n         deadline [event description] /by [day/month/year time]\\n         Eg: 28/8/2019 2359 (For date and time format)\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final String ERROR_MESSAGE_INVALID_DATE \u003d \"       ☹ OOPS!!! Please specify the date and time in this format: \\n         [day/month/year time] Eg: 28/8/2019 2359\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final String ERROR_MESSAGE_RANDOM \u003d \"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final String ERROR_MESSAGE_EMPTY_LIST \u003d \"       ☹ OOPS!!! The list is empty.\\n       Kindly add a task.\\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final String ERROR_MESSAGE_EMPTY_INDEX \u003d \"       ☹ OOPS!!! The index cannot be empty.\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final String ERROR_MESSAGE_INVALID_INDEX \u003d \"     Invalid index entered.\\n\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final String ERROR_MESSAGE_NOTFOUND \u003d \"     ☹ OOPS!!! I\u0027m sorry, but there is no matching tasks in your list\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final String ERROR_MESSAGE_LOADING \u003d \"     ☹ OOPS!!! Error loading file: \";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final String COMMAND_GET_LIST \u003d \"list\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final String COMMAND_DONE \u003d \"done\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final String COMMAND_DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final String COMMAND_TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final String COMMAND_FIND \u003d \"find\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final String COMMAND_EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final String COMMAND_DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final String COMMAND_EXIT_PROGRAM \u003d \"bye\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final String DIVIDER \u003d \"   ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wjlingg": 42
    }
  },
  {
    "path": "src/main/java/exception/DukeException.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public DukeException(String errorMessage){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wjlingg": 8
    }
  },
  {
    "path": "src/main/java/parser/Parser.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import static common.Messages.COMMAND_DEADLINE;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import static common.Messages.COMMAND_DELETE;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import static common.Messages.COMMAND_DONE;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import static common.Messages.COMMAND_EVENT;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import static common.Messages.COMMAND_EXIT_PROGRAM;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import static common.Messages.COMMAND_FIND;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import static common.Messages.COMMAND_GET_LIST;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import static common.Messages.COMMAND_TODO;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import static common.Messages.DIVIDER;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import static common.Messages.DISPLAYED_INDEX_OFFSET;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import static common.Messages.ERROR_MESSAGE_DEADLINE;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import static common.Messages.ERROR_MESSAGE_EMPTY_INDEX;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import static common.Messages.ERROR_MESSAGE_EMPTY_LIST;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import static common.Messages.ERROR_MESSAGE_EVENT;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import static common.Messages.ERROR_MESSAGE_GENERAL;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import static common.Messages.ERROR_MESSAGE_NOTFOUND;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import static common.Messages.ERROR_MESSAGE_INVALID_INDEX;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import static common.Messages.ERROR_MESSAGE_RANDOM;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import static common.Messages.MESSAGE_ADDED;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import static common.Messages.MESSAGE_BYE;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import static common.Messages.MESSAGE_DELETE;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import static common.Messages.MESSAGE_FIND;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import static common.Messages.MESSAGE_ITEMS1;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import static common.Messages.MESSAGE_ITEMS2;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import static common.Messages.MESSAGE_MARKED;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import static common.Messages.MESSAGE_FOLLOWUP_EMPTY_INDEX;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import static common.Messages.MESSAGE_FOLLOWUP_INVALID_INDEX;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import static common.Messages.MESSAGE_FOLLOWUP_NUll;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import static common.Messages.MESSAGE_TASKED;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    private static Storage storage;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    private static final ArrayList\u003cTask\u003e myList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    private static final ArrayList\u003cString\u003e arrList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        if (fullCommand.trim().equals(COMMAND_GET_LIST)) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            System.out.println(DIVIDER + MESSAGE_TASKED);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            for (int i \u003d 0; i \u003c myList.size(); i++) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                final int displayIndex \u003d i + DISPLAYED_INDEX_OFFSET;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                System.out.println("
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                        \"     \" + displayIndex + \". \" + myList.get(i)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                );"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        } else if (fullCommand.trim().equals(COMMAND_EXIT_PROGRAM)) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            System.out.println(DIVIDER + MESSAGE_BYE + DIVIDER);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        } else if (fullCommand.contains(COMMAND_DONE)) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            if(fullCommand.trim().substring(0, 4).equals(COMMAND_DONE)) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                commandDone(fullCommand);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            }else{"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                System.out.print(DIVIDER);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                throw new DukeException(ERROR_MESSAGE_RANDOM + DIVIDER);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        } else if (fullCommand.contains(COMMAND_TODO)) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            if(fullCommand.trim().substring(0, 4).equals(COMMAND_TODO)) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                commandTodo(fullCommand);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            }else{"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                System.out.print(DIVIDER);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                throw new DukeException(ERROR_MESSAGE_RANDOM + DIVIDER);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        } else if (fullCommand.contains(COMMAND_DEADLINE)) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            if(fullCommand.trim().substring(0, 8).equals(COMMAND_DEADLINE)) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                commandDeadline(fullCommand);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            }else{"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                System.out.print(DIVIDER);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                throw new DukeException(ERROR_MESSAGE_RANDOM + DIVIDER);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        } else if (fullCommand.contains(COMMAND_EVENT)) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            if (fullCommand.trim().substring(0, 5).equals(COMMAND_EVENT)) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                commandEvent(fullCommand);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                System.out.print(DIVIDER);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                throw new DukeException(ERROR_MESSAGE_RANDOM + DIVIDER);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }else if (fullCommand.contains(COMMAND_DELETE)) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            if(fullCommand.trim().substring(0, 6).equals(COMMAND_DELETE)) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                commandDelete(fullCommand);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            }else{"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                System.out.print(DIVIDER);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                throw new DukeException(ERROR_MESSAGE_RANDOM + DIVIDER);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        } else if (fullCommand.contains(COMMAND_FIND)) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            if (fullCommand.trim().substring(0, 4).equals(COMMAND_FIND)) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                commandFind(fullCommand);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                System.out.print(DIVIDER);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                throw new DukeException(ERROR_MESSAGE_RANDOM + DIVIDER);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            System.out.print(DIVIDER);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            throw new DukeException(ERROR_MESSAGE_RANDOM + DIVIDER);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    private static void commandDone(String userInputString) throws DukeException{"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        if(userInputString.trim().equals(COMMAND_DONE)){"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            System.out.print(DIVIDER);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            throw new DukeException(ERROR_MESSAGE_EMPTY_INDEX + MESSAGE_FOLLOWUP_EMPTY_INDEX + DIVIDER);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }else if(userInputString.trim().charAt(4) \u003d\u003d \u0027 \u0027){"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            String description \u003d userInputString.trim().split(\"\\\\s\",2)[1];"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            //converting string to integer"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            int index \u003d Integer.parseInt(description);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            if(index \u003e myList.size()){"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                System.out.print(DIVIDER);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                if(myList.size() \u003d\u003d 0){"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                    throw new DukeException(ERROR_MESSAGE_EMPTY_LIST + DIVIDER);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                }else {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                    throw new DukeException(ERROR_MESSAGE_INVALID_INDEX + MESSAGE_FOLLOWUP_INVALID_INDEX + myList.size() + \"\\n\" + DIVIDER);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            }else{"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                //marking targeted item as completed"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                myList.get(index - 1).markAsDone();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                storage.saveFile(userInputString.trim().substring(0, 4), arrList.size() - myList.size() + index - 1, \"\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                System.out.println("
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                        DIVIDER + MESSAGE_MARKED +"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                                \"       \" + myList.get(index - 1) + \"\\n\" + DIVIDER"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                );"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            System.out.print(DIVIDER);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            throw new DukeException(ERROR_MESSAGE_RANDOM + DIVIDER);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    private static void commandTodo(String userInputString) throws DukeException{"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        String msg \u003d \"\";"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        if(userInputString.trim().equals(COMMAND_TODO)){"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            System.out.print(DIVIDER);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            throw new DukeException(ERROR_MESSAGE_GENERAL + MESSAGE_FOLLOWUP_NUll + DIVIDER);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }else if(userInputString.trim().charAt(4) \u003d\u003d \u0027 \u0027){"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            String description \u003d userInputString.trim().split(\"\\\\s\",2)[1];"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            myList.add(new Todo(description));"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            int index \u003d myList.size();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            if (index \u003d\u003d 1) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                msg \u003d \" task in the list.\\n\";"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                msg \u003d MESSAGE_ITEMS2;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            System.out.println("
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                    DIVIDER + MESSAGE_ADDED +"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                            \"       \" + myList.get(index - 1) + \"\\n\" + MESSAGE_ITEMS1 + index + msg +"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                            DIVIDER"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            );"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            storage.saveFile(userInputString.trim().substring(0, 4), index, myList.get(index - 1).toSaveString());"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            System.out.print(DIVIDER);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            throw new DukeException(ERROR_MESSAGE_RANDOM + DIVIDER);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    private static void commandDeadline(String userInputString) throws DukeException {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        String msg \u003d \"\";"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        if(userInputString.trim().equals(COMMAND_DEADLINE)){"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            System.out.print(DIVIDER);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            throw new DukeException(ERROR_MESSAGE_GENERAL + MESSAGE_FOLLOWUP_NUll + DIVIDER);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }else if(userInputString.trim().charAt(8) \u003d\u003d \u0027 \u0027){"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            String description \u003d userInputString.trim().split(\"\\\\s\",2)[1];"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            if(description.contains(\" /by \")) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                String details \u003d description.trim().split(\" /by \", 2)[0];"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                String date \u003d description.trim().split(\" /by \", 2)[1];"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                if(details \u003d\u003d null || date \u003d\u003d null) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                    System.out.print(DIVIDER);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                    throw new DukeException(ERROR_MESSAGE_DEADLINE + DIVIDER);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                }else{"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                    myList.add(new Deadline(details, convertDate(date)));"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                    int index \u003d myList.size();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                    if (index \u003d\u003d 1) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                        msg \u003d \" task in the list.\\n\";"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                        msg \u003d MESSAGE_ITEMS2;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                    System.out.println("
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                            DIVIDER + MESSAGE_ADDED +"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                                    \"       \" + myList.get(index - 1) + \"\\n\" + MESSAGE_ITEMS1 + index + msg +"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                                    DIVIDER"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                    );"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                    storage.saveFile(userInputString.trim().substring(0, 8), index, myList.get(index - 1).toSaveString());"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            }else{"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                System.out.print(DIVIDER);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                throw new DukeException(ERROR_MESSAGE_DEADLINE + DIVIDER);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            System.out.print(DIVIDER);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            throw new DukeException(ERROR_MESSAGE_RANDOM + DIVIDER);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    private static void commandEvent(String userInputString) throws DukeException {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        String msg \u003d \"\";"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        if (userInputString.trim().equals(COMMAND_EVENT)) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            System.out.print(DIVIDER);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            throw new DukeException(ERROR_MESSAGE_EVENT + DIVIDER);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }else if(userInputString.trim().charAt(5) \u003d\u003d \u0027 \u0027){"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            String description \u003d userInputString.trim().split(\"\\\\s\",2)[1];"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            if(description.contains(\" /at \")){"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                String details \u003d description.trim().split(\" /at \", 2)[0];"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                String date \u003d description.trim().split(\" /at \", 2)[1];"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                if(details \u003d\u003d null || date \u003d\u003d null){"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                    System.out.print(DIVIDER);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                    throw new DukeException(ERROR_MESSAGE_EVENT + DIVIDER);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                }else{"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                    myList.add(new Event(details.trim(), date.trim()));"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                    int index \u003d myList.size();"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                    if (index \u003d\u003d 1) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                        msg \u003d \" task in the list.\\n\";"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                        msg \u003d MESSAGE_ITEMS2;"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                    System.out.println("
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                            DIVIDER + MESSAGE_ADDED +"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                                    \"       \" + myList.get(index - 1) + \"\\n\" + MESSAGE_ITEMS1 + index + msg +"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                                    DIVIDER"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                    );"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                    storage.saveFile(userInputString.trim().substring(0, 5), index, myList.get(index - 1).toSaveString());"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            }else{"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                System.out.print(DIVIDER);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                throw new DukeException(ERROR_MESSAGE_EVENT + DIVIDER);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            System.out.print(DIVIDER);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            throw new DukeException(ERROR_MESSAGE_RANDOM + DIVIDER);"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    private static void commandDelete(String userInputString) throws DukeException {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        String msg \u003d \"\";"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        if (userInputString.trim().equals(COMMAND_DELETE)) {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            System.out.print(DIVIDER);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            throw new DukeException(ERROR_MESSAGE_EMPTY_INDEX + MESSAGE_FOLLOWUP_EMPTY_INDEX + DIVIDER);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        } else if (userInputString.trim().charAt(6) \u003d\u003d \u0027 \u0027) {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            String description \u003d userInputString.trim().split(\"\\\\s\", 2)[1];"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            //converting string to integer"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            int index \u003d Integer.parseInt(description);"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            if (index \u003e myList.size()) {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                System.out.print(DIVIDER);"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                if (myList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                    throw new DukeException(ERROR_MESSAGE_EMPTY_LIST + DIVIDER);"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                    throw new DukeException(ERROR_MESSAGE_INVALID_INDEX + MESSAGE_FOLLOWUP_INVALID_INDEX + myList.size() + \"\\n\" + DIVIDER);"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                Task removed \u003d myList.get(index - 1);"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                //save before remove if not the input index for storage.saveFile() will be wrong"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                //but also can insert as (arrList.size() - myList.size() + index - 2)"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                storage.saveFile(userInputString.trim().substring(0, 6), arrList.size() - myList.size() + index - 1, \"\");"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                myList.remove(removed);"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                if (myList.size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                    msg \u003d \" task in the list.\\n\";"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                    msg \u003d MESSAGE_ITEMS2;"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                System.out.println("
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                        DIVIDER + MESSAGE_DELETE +"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                                \"       \" + removed + \"\\n\" + MESSAGE_ITEMS1 + myList.size() + msg +"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                                DIVIDER"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                );"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            System.out.print(DIVIDER);"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            throw new DukeException(ERROR_MESSAGE_RANDOM + DIVIDER);"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    private static void commandFind(String userInputString) throws DukeException {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        ArrayList\u003cString\u003e temp \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        if(userInputString.trim().equals(COMMAND_FIND)){"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            System.out.print(DIVIDER);"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            throw new DukeException(ERROR_MESSAGE_GENERAL + MESSAGE_FOLLOWUP_NUll + DIVIDER);"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }else if(userInputString.trim().charAt(4) \u003d\u003d \u0027 \u0027) {"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            String description \u003d userInputString.trim().split(\"\\\\s\", 2)[1];"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            for(int i \u003d 0; i \u003c arrList.size(); i++){"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                String same \u003d arrList.get(i);"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                if(same.contains(description)){"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                    temp.add(same);"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                }else if(i \u003d\u003d arrList.size() - 1){"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                    System.out.print(DIVIDER);"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                    throw new DukeException(ERROR_MESSAGE_NOTFOUND + DIVIDER);"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            System.out.println(DIVIDER + MESSAGE_FIND);"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            for (int i \u003d 0; i \u003c temp.size(); i++) {"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                final int displayIndex \u003d i + DISPLAYED_INDEX_OFFSET;"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                System.out.println("
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                        \"     \" + displayIndex + \". \" + temp.get(i)"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                );"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    private static String convertDate (String userInputDate) {"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        String suffix \u003d \"\";// st, nd, rd, th"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        String extra \u003d \"\";// am, pm"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        String month \u003d \"\";"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        String dateline \u003d \"\";//final conversion"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        String[] monthArray \u003d {\"January\", \"February\", \"March\", \"April\", \"May\", \"June\","
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"};"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        String date \u003d userInputDate.split(\"\\\\s\", 2)[0];"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        String time \u003d userInputDate.split(\"\\\\s\", 2)[1];"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        String min \u003d time.substring(2, 4);//last 2 digits of the time"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        String yr \u003d date.split(\"/\", 3)[2];"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        int hr;"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        int day \u003d Integer.parseInt(date.split(\"/\", 3)[0]);"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        int mth \u003d Integer.parseInt(date.split(\"/\", 3)[1]);"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        int first \u003d Integer.parseInt(time.substring(0, 1));//first digit of the time"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        int second \u003d Integer.parseInt(time.substring(1, 2));//second digit of the time"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        if(day \u003d\u003d 1 || day \u003d\u003d 21 || day \u003d\u003d 31){"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            suffix \u003d \"st\";"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }else if(day \u003d\u003d 2 || day \u003d\u003d 22){"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            suffix \u003d \"nd\";"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }else if(day \u003d\u003d 3 || day \u003d\u003d 23){"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            suffix \u003d \"rd\";"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            suffix \u003d \"th\";"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        //differentiating morning and afternoon"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        extra \u003d (first \u003d\u003d 0 || (first \u003d\u003d 1 \u0026\u0026 (second \u003d\u003d 0 || second \u003d\u003d 1))) ? \"am\" : \"pm\";"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        int change \u003d Integer.parseInt(time.substring(0, 2)) - 12;"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        //converting the hours"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        hr \u003d (first \u003d\u003d 0) ? ((second \u003d\u003d 0) ? 12 : second) :"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                ((first \u003d\u003d 1) ? ((second \u003c\u003d 2) ? (first*10 + second) :"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                        change) : change);"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        //converting the month"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        for (int i \u003d 0; i \u003c 12; i++){"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            if(mth \u003d\u003d i + 1){"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                month \u003d monthArray[i];"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        dateline \u003d day + suffix + \" of \" + month + \" \" + yr + \", \" + hr + \".\" + min + extra;"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        return dateline;"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wjlingg": 356
    }
  },
  {
    "path": "src/main/java/storage/Storage.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import static common.Messages.*;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    private static final ArrayList\u003cString\u003e arrList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    private final String filePath;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public void saveFile(String command, int index, String items){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        if(command.equals(COMMAND_DONE)) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            ArrayList\u003cString\u003e temp \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            String tempStr \u003d \"\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            for (int i \u003d 0; i \u003c arrList.size(); i++){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                if(i \u003d\u003d index){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                    tempStr \u003d arrList.get(i).replace(\"\\u2718\", \"\\u2713\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                    temp.add(tempStr);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                }else{"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                    temp.add(arrList.get(i));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            arrList.clear();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            arrList.addAll(temp);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }else if(command.equals(COMMAND_DELETE)){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            arrList.remove(index);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            arrList.add(items);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            BufferedWriter bufferedWriter \u003d new BufferedWriter(fileWriter);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            for(String str: arrList) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                bufferedWriter.write(str + \"\\n\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            bufferedWriter.close();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        } catch(Exception exc){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            exc.printStackTrace(); // If there was an error, print the info."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public ArrayList\u003cTask\u003e load(){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            FileReader fileReader \u003d new FileReader(filePath);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            BufferedReader bufferedReader \u003d new BufferedReader(fileReader);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            String content \u003d \"\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            while((content \u003d bufferedReader.readLine())!\u003d null){"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                arrList.add(content);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            return arrList;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            fileReader.close();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        } catch(FileNotFoundException ex) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            System.out.println(\"Unable to open file \u0027\" + filePath + \"\u0027\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        } catch(IOException ex) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            System.out.println(\"Error reading file \u0027\" + filePath + \"\u0027\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wjlingg": 66
    }
  },
  {
    "path": "src/main/java/task/Deadline.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    protected String by; // private instance variables"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public String toSaveString(){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        return \"D\" + super.toSaveString() + \" | \" + by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wjlingg": 21
    }
  },
  {
    "path": "src/main/java/task/Event.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public String toSaveString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        return \"E\" + super.toSaveString() + \" | \" + at;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wjlingg": 21
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    protected String description; //User input"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    protected boolean isDone; //To check if the task is completed"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        this.description \u003d description; //user input string"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        this.isDone \u003d false; //initially marked as not completed"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public void markAsDone(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    } //marked as completed when done"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public String toSaveString(){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        return \" | \" + getStatusIcon() + \" | \" + description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "     * toString() provides a String representation of the Task object."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "     * @returns   a string representation of the Task object"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wjlingg": 36
    }
  },
  {
    "path": "src/main/java/task/Todo.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wjlingg"
        },
        "content": " * This class extend Task to model Todo objects."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wjlingg"
        },
        "content": " * Todo class, subclass of Task"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wjlingg"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    //Constructor for objects of class Todo"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        super(description);//super class constructor call to the Task(description) constructor"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public String toSaveString(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        return \"T\" + super.toSaveString();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    // Override the inherited toString to provide the proper implementation"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wjlingg": 25
    }
  },
  {
    "path": "src/main/java/tasklist/TaskList.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "package tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "public class TaskList extends ArrayList\u003cTask\u003e {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public TaskList filter(String keyword) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        TaskList filteredList \u003d new TaskList();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        for (Task task : this) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            if (task.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                filteredList.add(task);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        return filteredList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wjlingg": 19
    }
  },
  {
    "path": "src/main/java/ui/Ui.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import static common.Messages.DIVIDER;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import static common.Messages.ERROR_MESSAGE_LOADING;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import static common.Messages.filePath;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    private static final Scanner SCANNER \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "     * Display welcome message of the program"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        String logo \u003d"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            \"      ___         _        \\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            + \"     |  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            + \"     | | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            + \"     | |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            + \"     |____/ \\\\__,_|_|\\\\_\\\\___|\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            + \"\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                DIVIDER + logo +"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                        \"     Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                        \"     What can I do for you?\\n\" +"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                        DIVIDER"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        );"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public String readCommand(){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        return SCANNER.nextLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public void showLine(){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public void showLoadingError(){"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        System.out.println(DIVIDER + ERROR_MESSAGE_LOADING + filePath + \"\\n\" + DIVIDER);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public void showError(String errorMessage){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        System.out.println(errorMessage);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wjlingg": 48
    }
  }
]

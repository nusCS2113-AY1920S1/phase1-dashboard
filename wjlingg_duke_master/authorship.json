[
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import static common.Messages.filePath;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            //same as the previous executeCommand()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        new Duke(filePath).run();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wjlingg": 45,
      "-": 4
    }
  },
  {
    "path": "src/main/java/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        ui.showGoodbye();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        isExit();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wjlingg": 18
    }
  },
  {
    "path": "src/main/java/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    protected String userInputCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public abstract void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wjlingg": 13
    }
  },
  {
    "path": "src/main/java/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import static common.Messages.*;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    private static SimpleDateFormat simpleDateFormat \u003d new SimpleDateFormat(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public DeadlineCommand(String userInputCommand) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        this.userInputCommand \u003d userInputCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException{"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        if(userInputCommand.trim().equals(COMMAND_DEADLINE)){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            throw new DukeException(ERROR_MESSAGE_GENERAL + MESSAGE_FOLLOWUP_NUll);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }else if(userInputCommand.trim().charAt(8) \u003d\u003d \u0027 \u0027){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            String description \u003d userInputCommand.trim().split(\"\\\\s\",2)[1];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            if(description.contains(\" /by \")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                String details \u003d description.trim().split(\" /by \", 2)[0];"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                String date \u003d description.trim().split(\" /by \", 2)[1];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                if(details \u003d\u003d null || date \u003d\u003d null) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                    throw new DukeException(ERROR_MESSAGE_DEADLINE);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                }else{"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                    if(isParseDate(date)) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                        taskList.addDeadlineTask(details, convertDate(date));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                        storage.saveFile(taskList);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                    }else{"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                        throw new DukeException(ERROR_MESSAGE_INVALID_DATE);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            }else{"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                throw new DukeException(ERROR_MESSAGE_DEADLINE);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            throw new DukeException(ERROR_MESSAGE_RANDOM);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    private static boolean isParseDate(String dateStr) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            simpleDateFormat.parse(dateStr);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    private static String convertDate (String userInputDate) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        String suffix \u003d \"\";// st, nd, rd, th"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        String extra \u003d \"\";// am, pm"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        String month \u003d \"\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        String dateline \u003d \"\";//final conversion"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        String[] monthArray \u003d {\"January\", \"February\", \"March\", \"April\", \"May\", \"June\","
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"};"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        String date \u003d userInputDate.split(\"\\\\s\", 2)[0];"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        String time \u003d userInputDate.split(\"\\\\s\", 2)[1];"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        String min \u003d time.substring(2, 4);//last 2 digits of the time"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        String yr \u003d date.split(\"/\", 3)[2];"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        int hr;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        int day \u003d Integer.parseInt(date.split(\"/\", 3)[0]);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        int mth \u003d Integer.parseInt(date.split(\"/\", 3)[1]);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        int first \u003d Integer.parseInt(time.substring(0, 1));//first digit of the time"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        int second \u003d Integer.parseInt(time.substring(1, 2));//second digit of the time"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        if(day \u003d\u003d 1 || day \u003d\u003d 21 || day \u003d\u003d 31){"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            suffix \u003d \"st\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }else if(day \u003d\u003d 2 || day \u003d\u003d 22){"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            suffix \u003d \"nd\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }else if(day \u003d\u003d 3 || day \u003d\u003d 23){"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            suffix \u003d \"rd\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            suffix \u003d \"th\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        //differentiating morning and afternoon"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        extra \u003d (first \u003d\u003d 0 || (first \u003d\u003d 1 \u0026\u0026 (second \u003d\u003d 0 || second \u003d\u003d 1))) ? \"am\" : \"pm\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        int change \u003d Integer.parseInt(time.substring(0, 2)) - 12;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        //converting the hours"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        hr \u003d (first \u003d\u003d 0) ? ((second \u003d\u003d 0) ? 12 : second) :"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                ((first \u003d\u003d 1) ? ((second \u003c\u003d 2) ? (first*10 + second) :"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                        change) : change);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        //converting the month"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        for (int i \u003d 0; i \u003c 12; i++){"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            if(mth \u003d\u003d i + 1){"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                month \u003d monthArray[i];"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        dateline \u003d day + suffix + \" of \" + month + \" \" + yr + \", \" + hr + \".\" + min + extra;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        return dateline;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wjlingg": 107
    }
  },
  {
    "path": "src/main/java/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import static common.Messages.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import static common.Messages.ERROR_MESSAGE_RANDOM;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public DeleteCommand(String userInputCommand) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        this.userInputCommand \u003d userInputCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    private static boolean isParsable(String input) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            Integer.parseInt(input);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException{"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        if (userInputCommand.trim().equals(COMMAND_DELETE)) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            throw new DukeException(ERROR_MESSAGE_EMPTY_INDEX + MESSAGE_FOLLOWUP_EMPTY_INDEX);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }else if(userInputCommand.trim().charAt(6) \u003d\u003d \u0027 \u0027){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            String description \u003d userInputCommand.trim().split(\"\\\\s\",2)[1];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            if(isParsable(description)) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                //converting string to integer"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                int index \u003d Integer.parseInt(description);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                if (index \u003e taskList.getSize() || index \u003c\u003d 0) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                    if (taskList.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                        throw new DukeException(ERROR_MESSAGE_EMPTY_LIST);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                        throw new DukeException(ERROR_MESSAGE_INVALID_INDEX + taskList.getSize() + \".\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                    taskList.deleteTask(index - 1);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                    storage.saveFile(taskList);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            }else{"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                throw new DukeException(ERROR_MESSAGE_UNKNOWN_INDEX);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            throw new DukeException(ERROR_MESSAGE_RANDOM);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wjlingg": 57
    }
  },
  {
    "path": "src/main/java/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import static common.Messages.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public DoneCommand(String userInputCommand) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        this.userInputCommand \u003d userInputCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static boolean isParsable(String input) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            Integer.parseInt(input);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException{"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        if (userInputCommand.trim().equals(COMMAND_DONE)) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            throw new DukeException(ERROR_MESSAGE_EMPTY_INDEX + MESSAGE_FOLLOWUP_EMPTY_INDEX);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }else if(userInputCommand.trim().charAt(4) \u003d\u003d \u0027 \u0027){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            String description \u003d userInputCommand.trim().split(\"\\\\s\",2)[1];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            if(isParsable(description)){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                //converting string to integer"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                int index \u003d Integer.parseInt(description);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                if (index \u003e taskList.getSize() || index \u003c\u003d 0) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                    if (taskList.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                        throw new DukeException(ERROR_MESSAGE_EMPTY_LIST);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                        throw new DukeException(ERROR_MESSAGE_INVALID_INDEX + taskList.getSize() + \".\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                    taskList.doneTask(index - 1);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                    storage.saveFile(taskList);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            }else{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                throw new DukeException(ERROR_MESSAGE_UNKNOWN_INDEX);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            throw new DukeException(ERROR_MESSAGE_RANDOM);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wjlingg": 56
    }
  },
  {
    "path": "src/main/java/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import static common.Messages.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public EventCommand(String userInputCommand) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        this.userInputCommand \u003d userInputCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException{"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        if (userInputCommand.trim().equals(COMMAND_EVENT)) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            throw new DukeException(ERROR_MESSAGE_EVENT);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }else if(userInputCommand.trim().charAt(5) \u003d\u003d \u0027 \u0027){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            String description \u003d userInputCommand.trim().split(\"\\\\s\",2)[1];"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            if(description.contains(\" /at \")){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                String details \u003d description.trim().split(\" /at \", 2)[0];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                String date \u003d description.trim().split(\" /at \", 2)[1];"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                if(details \u003d\u003d null || date \u003d\u003d null){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                    throw new DukeException(ERROR_MESSAGE_EVENT);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                }else{"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                    taskList.addEventTask(details, date);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                    storage.saveFile(taskList);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            }else{"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                throw new DukeException(ERROR_MESSAGE_EVENT);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            throw new DukeException(ERROR_MESSAGE_RANDOM);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wjlingg": 42
    }
  },
  {
    "path": "src/main/java/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import static common.Messages.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public FindCommand(String userInputCommand) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        this.userInputCommand \u003d userInputCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        if(userInputCommand.trim().equals(COMMAND_FIND)){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            throw new DukeException(ERROR_MESSAGE_GENERAL + MESSAGE_FOLLOWUP_NUll);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }else if(userInputCommand.trim().charAt(4) \u003d\u003d \u0027 \u0027) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            String description \u003d userInputCommand.trim().split(\"\\\\s\", 2)[1];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            System.out.println(MESSAGE_FIND);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.findTask(description).size(); i++){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                System.out.println(\"     \" + (i + 1) + \". \" + taskList.findTask(description).get(i));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            throw new DukeException(ERROR_MESSAGE_RANDOM);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wjlingg": 35
    }
  },
  {
    "path": "src/main/java/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import static common.Messages.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public ListCommand(String userInputCommand) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        this.userInputCommand \u003d userInputCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        System.out.println(MESSAGE_TASKED);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.listTask().size(); i++){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            System.out.println(taskList.listTask().get(i));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wjlingg": 27
    }
  },
  {
    "path": "src/main/java/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import static common.Messages.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public TodoCommand(String userInputCommand) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        this.userInputCommand \u003d userInputCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException{"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        if(userInputCommand.trim().equals(COMMAND_TODO)){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            throw new DukeException(ERROR_MESSAGE_GENERAL + MESSAGE_FOLLOWUP_NUll);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }else if(userInputCommand.trim().charAt(4) \u003d\u003d \u0027 \u0027){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            String description \u003d userInputCommand.trim().split(\"\\\\s\",2)[1];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            taskList.addTodoTask(description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            storage.saveFile(taskList);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            throw new DukeException(ERROR_MESSAGE_RANDOM);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wjlingg": 33
    }
  },
  {
    "path": "src/main/java/common/Messages.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "package common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final int DISPLAYED_INDEX_OFFSET \u003d 1;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final String filePath \u003d \"C:\\\\Users\\\\Wen Jian\\\\Desktop\\\\duke\\\\src\\\\main\\\\data\\\\duke.txt\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final String MESSAGE_ADDED \u003d \"     Got it. I\u0027ve added this task:\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final String MESSAGE_BYE \u003d \"     Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final String MESSAGE_DELETE \u003d \"     Noted. I\u0027ve removed this task:\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final String MESSAGE_FIND \u003d \"     Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final String MESSAGE_FOLLOWUP_EMPTY_INDEX \u003d \"       Kindly enter the command again with an index.\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final String MESSAGE_FOLLOWUP_NUll \u003d \"       Kindly enter the command again with a description.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final String MESSAGE_ITEMS1 \u003d \"     Now you have \";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final String MESSAGE_ITEMS2 \u003d \" tasks in the list.\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final String MESSAGE_MARKED \u003d \"     Nice! I\u0027ve marked this task as done:\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final String MESSAGE_TASKED \u003d \"     Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final String ERROR_MESSAGE_DEADLINE \u003d \"       ☹ OOPS!!! Please specify the deadline in this format: \\n         deadline [event description] /by [day/month/year time]\\n         Eg: 28/8/2019 2359 (For date and time format)\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final String ERROR_MESSAGE_EMPTY_INDEX \u003d \"       ☹ OOPS!!! The index cannot be empty.\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final String ERROR_MESSAGE_EMPTY_LIST \u003d \"       ☹ OOPS!!! The list is empty.\\n       Kindly add a task.\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final String ERROR_MESSAGE_EVENT \u003d \"       ☹ OOPS!!! Please specify the event details in this format: \\n         event [event description] /at [event time or venue]\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final String ERROR_MESSAGE_GENERAL \u003d \"       ☹ OOPS!!! The description cannot be empty.\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final String ERROR_MESSAGE_INVALID_DATE \u003d \"       ☹ OOPS!!! Please specify the date and time in this format: \\n         [day/month/year time] Eg: 28/8/2019 2359\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final String ERROR_MESSAGE_INVALID_INDEX \u003d \"     Invalid index entered.\\n     Kindly enter command with index not more than \";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final String ERROR_MESSAGE_UNKNOWN_INDEX \u003d \"     Unknown index entered.\\n     Kindly enter an integer for the index.\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final String ERROR_MESSAGE_LOADING \u003d \"     ☹ OOPS!!! Error loading file: \";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final String ERROR_MESSAGE_NOTFOUND \u003d \"     ☹ OOPS!!! I\u0027m sorry, but there is no matching tasks in your list.\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final String ERROR_MESSAGE_RANDOM \u003d \"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final String COMMAND_BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final String COMMAND_DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final String COMMAND_DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final String COMMAND_DONE \u003d \"done\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final String COMMAND_EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final String COMMAND_FIND \u003d \"find\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final String COMMAND_LIST \u003d \"list\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final String COMMAND_TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static final String DIVIDER \u003d \"   ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wjlingg": 41
    }
  },
  {
    "path": "src/main/java/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public DukeException(String errorMessage){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wjlingg": 8
    }
  },
  {
    "path": "src/main/java/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import static common.Messages.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public static Command parse(String userInputCommand) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        if (userInputCommand.trim().equals(COMMAND_LIST)) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            return new ListCommand(userInputCommand);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }else if (userInputCommand.trim().equals(COMMAND_BYE)) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }else if (userInputCommand.contains(COMMAND_DONE)) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            return new DoneCommand(userInputCommand);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }else if (userInputCommand.contains(COMMAND_DEADLINE)) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            if (userInputCommand.trim().substring(0, 8).equals(COMMAND_DEADLINE)) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                return new DeadlineCommand(userInputCommand);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                throw new DukeException(ERROR_MESSAGE_RANDOM);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }else if (userInputCommand.contains(COMMAND_DELETE)) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            if (userInputCommand.trim().substring(0, 6).equals(COMMAND_DELETE)) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                return new DeleteCommand(userInputCommand);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                throw new DukeException(ERROR_MESSAGE_RANDOM);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }else if (userInputCommand.contains(COMMAND_EVENT)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                if (userInputCommand.trim().substring(0, 5).equals(COMMAND_EVENT)) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                return new EventCommand(userInputCommand);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                throw new DukeException(ERROR_MESSAGE_RANDOM);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }else if (userInputCommand.contains(COMMAND_TODO)) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            if (userInputCommand.trim().substring(0, 4).equals(COMMAND_TODO)) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                return new TodoCommand(userInputCommand);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                throw new DukeException(ERROR_MESSAGE_RANDOM);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }else if (userInputCommand.contains(COMMAND_FIND)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            if (userInputCommand.trim().substring(0, 4).equals(COMMAND_FIND)) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                return new FindCommand(userInputCommand);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                throw new DukeException(ERROR_MESSAGE_RANDOM);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            throw new DukeException(ERROR_MESSAGE_RANDOM);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wjlingg": 51
    }
  },
  {
    "path": "src/main/java/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    private static final ArrayList\u003cTask\u003e arrTaskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    private final String filePath;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public void saveFile(TaskList taskList){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            BufferedWriter bufferedWriter \u003d new BufferedWriter(fileWriter);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            for(Task task: taskList.getTaskList()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                bufferedWriter.write(task.toSaveString() + \"\\n\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            bufferedWriter.close();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        } catch(Exception exc){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            exc.printStackTrace(); // If there was an error, print the info."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            FileReader fileReader \u003d new FileReader(filePath);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            BufferedReader bufferedReader \u003d new BufferedReader(fileReader);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            String content \u003d \"\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            while((content \u003d bufferedReader.readLine())!\u003d null){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                if(content.charAt(0) \u003d\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                    String details \u003d content.substring(8);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                    Task task \u003d new Todo(details);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                    if (content.charAt(4) \u003d\u003d \u0027\\u2713\u0027) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                        task.markAsDone();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                    arrTaskList.add(task);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                }else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                    //need to escape character in string for \"|\" by adding \"\\\\\" in front of \"|\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                    //if not the split will be on the wrong place"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                    String[] split \u003d content.substring(8).split(\" \\\\| \", 2);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                    if (content.charAt(0) \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                        Task task \u003d new Deadline(split[0], split[1]);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                        if (content.charAt(4) \u003d\u003d \u0027\\u2713\u0027) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                            task.markAsDone();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                        arrTaskList.add(task);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                    } else if (content.charAt(0) \u003d\u003d \u0027E\u0027) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                        Task task \u003d new Event(split[0], split[1]);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                        if (content.charAt(4) \u003d\u003d \u0027\\u2713\u0027) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                            task.markAsDone();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                        arrTaskList.add(task);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            fileReader.close();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        } catch(FileNotFoundException ex) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            System.out.println(\"Unable to open file \u0027\" + filePath + \"\u0027\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        } catch(IOException ex) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            System.out.println(\"Error reading file \u0027\" + filePath + \"\u0027\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        return arrTaskList;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wjlingg": 74
    }
  },
  {
    "path": "src/main/java/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    protected String by; // private instance variables"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public String toSaveString(){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        return \"D\" + super.toSaveString() + \" | \" + by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wjlingg": 21
    }
  },
  {
    "path": "src/main/java/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public String toSaveString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        return \"E\" + super.toSaveString() + \" | \" + at;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wjlingg": 21
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    protected String description; //User input"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    protected boolean isDone; //To check if the task is completed"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        this.description \u003d description; //user input string"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        this.isDone \u003d false; //initially marked as not completed"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public void markAsDone(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    } //marked as completed when done"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public String toSaveString(){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        return \" | \" + getStatusIcon() + \" | \" + description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "     * toString() provides a String representation of the Task object."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "     * @returns   a string representation of the Task object"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wjlingg": 36
    }
  },
  {
    "path": "src/main/java/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wjlingg"
        },
        "content": " * This class extend Task to model Todo objects."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wjlingg"
        },
        "content": " * Todo class, subclass of Task"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wjlingg"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    //Constructor for objects of class Todo"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        super(description);//super class constructor call to the Task(description) constructor"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public String toSaveString(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        return \"T\" + super.toSaveString();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    // Override the inherited toString to provide the proper implementation"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wjlingg": 24
    }
  },
  {
    "path": "src/main/java/tasklist/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "package tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import static common.Messages.*;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    private static String msg \u003d \"\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        this.taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public ArrayList\u003cString\u003e findTask(String description) throws DukeException{"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        ArrayList\u003cString\u003e arrFind \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        for (int i \u003d 0; i \u003c getSize(); i++){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            if(taskList.get(i).getDescription().contains(description)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                arrFind.add(taskList.get(i).toString());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        if(arrFind.isEmpty()){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            throw new DukeException(ERROR_MESSAGE_NOTFOUND);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            return arrFind;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public ArrayList\u003cString\u003e listTask(){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        ArrayList\u003cString\u003e arrList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        for (int i \u003d 0; i \u003c getSize(); i++){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            final int displayIndex \u003d i + DISPLAYED_INDEX_OFFSET;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            arrList.add(\"     \" + displayIndex + \". \" + taskList.get(i));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        return arrList;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public int getSize(){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public void addDeadlineTask(String description, String by){"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        taskList.add(new Deadline(description, by));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        int index \u003d taskList.size();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        if (index \u003d\u003d 1) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            msg \u003d \" task in the list.\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            msg \u003d MESSAGE_ITEMS2;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        System.out.println(MESSAGE_ADDED + \"       \" + taskList.get(index - 1) + \"\\n\" + MESSAGE_ITEMS1 + index + msg);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public void addEventTask(String description, String at) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        taskList.add(new Event(description, at));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        int index \u003d taskList.size();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        if (index \u003d\u003d 1) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            msg \u003d \" task in the list.\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            msg \u003d MESSAGE_ITEMS2;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        System.out.println(MESSAGE_ADDED + \"       \" + taskList.get(index - 1) + \"\\n\" + MESSAGE_ITEMS1 + index + msg);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public void addTodoTask(String description) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        taskList.add(new Todo(description));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        int index \u003d taskList.size();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        if (index \u003d\u003d 1) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            msg \u003d \" task in the list.\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            msg \u003d MESSAGE_ITEMS2;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        System.out.println(MESSAGE_ADDED + \"       \" + taskList.get(index - 1) + \"\\n\" + MESSAGE_ITEMS1 + index + msg);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public void doneTask(int i){"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        taskList.get(i).markAsDone();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        System.out.println(MESSAGE_MARKED + \"       \" + taskList.get(i));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public void deleteTask(int i){"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        if (taskList.size() - 1 \u003c\u003d 1) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            msg \u003d \" task in the list.\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            msg \u003d MESSAGE_ITEMS2;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        System.out.println(MESSAGE_DELETE + \"       \" + taskList.get(i) + \"\\n\" + MESSAGE_ITEMS1 + (taskList.size() - 1) + msg);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        taskList.remove(taskList.get(i));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wjlingg": 104
    }
  },
  {
    "path": "src/main/java/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "import static common.Messages.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        this.scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "     * Display welcome message of the program"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        String logo \u003d"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            \"      ___         _        \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            + \"     |  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            + \"     | | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            + \"     | |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            + \"     |____/ \\\\__,_|_|\\\\_\\\\___|\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "            + \"\\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                DIVIDER + logo +"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                        \"     Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                        \"     What can I do for you?\\n\" +"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "                        DIVIDER"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        );"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public void showGoodbye(){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        System.out.println(MESSAGE_BYE);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public String readCommand(){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public void showLine(){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        System.out.print(DIVIDER);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public void showLoadingError(){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        System.out.println(ERROR_MESSAGE_LOADING + filePath);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wjlingg"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    public void showError(String errorMessage){"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "        System.out.println(errorMessage);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wjlingg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wjlingg": 54
    }
  }
]

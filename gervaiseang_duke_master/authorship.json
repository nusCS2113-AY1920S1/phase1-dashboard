[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gervaiseang": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "    private static List\u003cTask\u003e bookList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    enum dateTimeFormat{"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        NONE,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        DATE,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        TIME,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        DATE_TIME_FORMAT,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "    public static void main(String[] args) throws FileNotFoundException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "        File file \u003d new File(\"src/main/java/data/DukeTasks.txt\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "        bookList \u003d readFile(file);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke \");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "            Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "            String command \u003d scanner.nextLine();  // Read user input"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "            if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                try{"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                    if (bookList.size() \u003d\u003d 0) throw new DukeException(\"â˜¹ OOPS!!! The description of a list cannot be empty.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                    System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                    if (!bookList.isEmpty()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                        for (int i \u003d 1; i \u003c\u003d bookList.size(); i++) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                            System.out.println(i + \". \" + bookList.get(i - 1).toString());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                catch (DukeException e){"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                    System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "            } else if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                System.out.println(\" Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                saveFile(file);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                String[] parts \u003d command.split(\" \"); //Here the string it is divide taking as reference the space"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                String cmd \u003d parts[0];"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                if (cmd.equals(\"done\")){"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                    markDone(parts[1]);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                else if (cmd.equals(\"delete\")){"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                    deleteTask(parts[1]);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                else if (cmd.equals(\"find\")){"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                    String sequence \u003d parts[1];"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                    int x \u003d 1;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (!bookList.isEmpty()) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "                        for (int i \u003d 0; i \u003c bookList.size(); i++) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "                            if(bookList.get(i).description.contains(sequence)) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                                System.out.println(x + \". \" + bookList.get(i).toString());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                                x++;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                else{"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                    addTaskList(command);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "    private static void addTaskList(String command) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "        String[] parts \u003d command.split(\" \");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "        String task \u003d parts[0];"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "        String toReplace \u003d task + \" \";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "        String nextCommand \u003d command.replaceAll(toReplace, \"\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "        if (task.equals(\"todo\")) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "            try{"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                if (parts.length \u003d\u003d 1) throw new DukeException(\"â˜¹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                Todo tempTodo \u003d new Todo(nextCommand);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                bookList.add(tempTodo);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                System.out.println(\"    \" + tempTodo.toString());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                System.out.println(\"Now you have \" + bookList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "            catch (DukeException e){"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "        } else if (task.equals(\"event\")) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "            try{"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                if (parts.length \u003d\u003d 1) throw new DukeException(\"â˜¹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                String[] tempEvent \u003d nextCommand.split(\" /at \");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                Event event \u003d new Event(tempEvent[0], tempEvent[1]);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                bookList.add(event);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                System.out.println(\"    \" + event.toString());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                System.out.println(\"Now you have \" + bookList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "            catch (DukeException e){"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "        } else if (task.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                if (parts.length \u003d\u003d 1)"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                    throw new DukeException(\"â˜¹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                String[] tempDeadline \u003d nextCommand.split(\" /by \");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "                if (!isValidDateTime(tempDeadline[1])) throw  new DukeException(\"Please enter correct date time format: dd/mm/yyyy hhmm\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                Deadline deadline \u003d new Deadline(tempDeadline[0], tempDeadline[1]);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                bookList.add(deadline);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                System.out.println(\"    \" + deadline.toString());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                System.out.println(\"Now you have \" + bookList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "        else"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "            System.out.println(\" â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "    private static void markDone(String taskNumber) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "            int taskNum \u003d Integer.parseInt(taskNumber);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "            if (taskNum \u003d\u003d 0)"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                throw new DukeException(\"â˜¹ OOPS!!! Invalid input, please enter a number greater than 0.\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "            Task mark \u003d bookList.get(taskNum - 1);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "            mark.setDone();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "            System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "            System.out.println(\"[\" + mark.getStatusIcon() + \"] \" + mark.description);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "        catch (DukeException e) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "        catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "            System.out.println(\"â˜¹ OOPS!!! Invalid input, please enter an integer.\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void deleteTask(String taskNumber) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        int index \u003d Integer.parseInt(taskNumber) - 1;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        Task deleteTask \u003d bookList.get(index);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        bookList.remove(deleteTask);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"  \" + deleteTask.toString());"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Now you have \" + bookList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "    private static ArrayList\u003cTask\u003e readFile(File fr) throws FileNotFoundException {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "        ArrayList\u003cTask\u003e arrayList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "            Scanner scanner \u003d new Scanner(fr);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "            while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                String line \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                String[] words \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                if (words[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                    Todo readT \u003d new Todo(words[2]);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                    if (words[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                        readT.isDone \u003d true;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                    arrayList.add(readT);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                } else if (words[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                    Deadline readD \u003d new Deadline(words[2], words[3]);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                    if (words[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                        readD.isDone \u003d true;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                    arrayList.add(readD);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                } else { //event"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                    Event readE \u003d new Event(words[2], words[3]);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                    if (words[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                        readE.isDone \u003d true;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                    arrayList.add(readE);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "            System.out.println(\"File not found\");"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "        return arrayList;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "    private static void saveFile(File file){"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "            FileWriter fw \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "            for (int i \u003d 0; i \u003c bookList.size(); i++) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "                fw.append(bookList.get(i) + System.lineSeparator());"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "            fw.flush();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "        } catch (IOException IOE) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "            System.out.println(\"Something went wrong \" + IOE.getMessage());"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "    private static boolean isValidDateTime (String dateTime){"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "        SimpleDateFormat dateOnlyFormat \u003d  new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "        SimpleDateFormat timeOnlyFormat \u003d  new SimpleDateFormat(\"HHmm\");"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "        SimpleDateFormat dateHourFormat \u003d new SimpleDateFormat(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "            //dateOnlyFormat.parse(dateTime);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "            //timeOnlyFormat.parse(dateTime);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "            dateHourFormat.parse(dateTime);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gervaiseang": 170,
      "-": 60
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "    public DukeException (String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "    public DukeException (String message, Throwable throwable) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "        super(message, throwable);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gervaiseang": 9
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": " * subclass of Task when the input starts with event"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructor for event"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param description the description of event"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param at the parameter to take in the input of the description when at is detected"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return [E] Event description followed by the description after the /at"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     * override method that converts the task into user readable format"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return A string that contains the task, the checkbox and the deadline"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gervaiseang": 13,
      "-": 14
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description; //return tick or X symbols"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gervaiseang": 22
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "public class Todo extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gervaiseang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gervaiseang": 11
    }
  }
]

[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jingkang97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "run {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "\t"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "\tstandardInput \u003d System.in"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jingkang97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jingkang97": 7,
      "-": 15
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jingkang97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jingkang97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "    protected String DeadlineFormatDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "    public Deadline(String description, String by) throws DukeException{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        if(description.equals(\"deadline \") || description.equals(\"deadline\")){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "            throw new DukeException(\"______________________________________________________________________________\\n ☹ OOPS!!! The description of a deadline cannot be empty.\\n______________________________________________________________________________\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        if(by.equals(description.trim()) || by.equals(\" \")){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "            throw new DukeException(\"______________________________________________________________________________\\n ☹ OOPS!!! The time and date of a deadline cannot be empty.\\n______________________________________________________________________________\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        else{"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                by.trim();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                this.by \u003d by;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                DateTimeFormat(this.by);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                this.DeadlineFormatDateTime \u003d DateTimeFormat(this.by);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "            }catch(Exception e){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                throw new DukeException(\"Please input the date and time in this format: dd/mm/yyyy hhmm\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jingkang97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by: \" + DeadlineFormatDateTime + \")\";//super will use the Parent\u0027s/base class method instead of the child\u0027s/sub class method"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jingkang97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "    public String DateTimeFormat(String dateTime){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        LocalDateTime localDate \u003d LocalDateTime.parse(dateTime, formatter);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        String localDateTimeString \u003d formatter.format(localDate);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jingkang97"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        DateTimeFormatter customFormatter \u003d DateTimeFormatter.ofPattern(\"d\u0027\" + ordinalConversion(localDateTimeString) + \"\u0027 \u0027of\u0027 MMMM yyyy, h\u0027:\u0027mma\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        String result \u003d customFormatter.format(localDate);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "    public String ordinalConversion(String dateTimeFormat){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        String customToken [] \u003d dateTimeFormat.split(\"/\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        int ordinalNumber \u003d Integer.parseInt(customToken[0]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        switch(ordinalNumber % 10){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "            case 1:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                return \"st\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "            case 2:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                return \"nd\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "            case 3:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                return \"rd\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                return \"th\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jingkang97": 56
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "    public static void main(String[] args) throws IOException{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        //Task[] tasks \u003d new Task [100];"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        ArrayList\u003cTask\u003e tasks\u003d new ArrayList\u003c\u003e(100);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        //String [] Record \u003d new String [100]; //to be written to file at the end"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        ArrayList\u003cString\u003e Record \u003d new ArrayList\u003c\u003e(100);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jingkang97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "            File file \u003d new File(\"/Users/ngjingkang/duke/data/duke.txt\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "            Scanner filescan \u003d new Scanner(file);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "            filescan.useDelimiter(\"\\n\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "            String [] fileContent \u003d new String [100];"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jingkang97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "            while(filescan.hasNext()){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                fileContent[index] \u003d filescan.next();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                Record.add(fileContent[index]);//\u003d fileContent[index];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                String filetoken[] \u003d fileContent[index].split(\",\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                if(filetoken[0].equals(\"D\")){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                    String description \u003d filetoken[2];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                    String by \u003d filetoken[3];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                    tasks.add(new Deadline(\"deadline \" + description, by));// \u003d new Deadline(\"deadline \" + description, by);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                    tasks.get(index).isDone \u003d filetoken[1].equals(\"true\") ? true : false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jingkang97"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                    index +\u003d 1;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                else if(filetoken[0].equals(\"T\")){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                    String description \u003d filetoken[2];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                    tasks.add(new ToDo(\"todo \" + description));// \u003d new ToDo(\"todo \" + description);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                    tasks.get(index).isDone \u003d filetoken[1].equals(\"true\") ? true : false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jingkang97"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                    index +\u003d 1;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                else if(filetoken[0].equals(\"E\")){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                    String description \u003d filetoken[2];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                    String by \u003d filetoken[3];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                    tasks.add(new Event(\"event \" + description, by));// \u003d new Event(\"event \" + description, by);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                    tasks.get(index).isDone \u003d filetoken[1].equals(\"true\") ? true : false;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jingkang97"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                    index +\u003d 1;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                //index +\u003d 1;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        }catch(Exception e){"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jingkang97"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        Scanner scan \u003d new Scanner(System.in); //taking in input"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        BufferedWriter add \u003d new BufferedWriter(new FileWriter(\"/Users/ngjingkang/duke/data/duke.txt\", true));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        while(true){"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jingkang97"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "            String input \u003d scan.nextLine();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "            String[] tokens \u003d input.split(\" \");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "            if(tokens[0].equals(\"find\")){"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                    String findToken[] \u003d input.split(\"find\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                    String search \u003d findToken[1].trim();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                    if(tokens[1].equals(\" \")){"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                        System.out.println(\"______________________________________________________________________________\\n ☹ OOPS!!! The description of a deadline cannot be empty.\\n______________________________________________________________________________\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                    System.out.println(search);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                    int i \u003d 1;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                    ArrayList\u003cString\u003e searchResult \u003d new ArrayList\u003c\u003e(100);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                    System.out.println(\"______________________________________________________________________________\\nHere are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                    for (int n \u003d 0; n \u003c index; n +\u003d 1) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                        //String lineToken[] \u003d Record.get(n).split(\",\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                        String line \u003d Record.get(n);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                        if (line.contains(search)) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                            System.out.println(Integer.toString(i) + \".\" + tasks.get(n));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                            i +\u003d 1;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                    System.out.println(\"______________________________________________________________________________\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                }catch(Exception e){"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                    System.out.println(\"______________________________________________________________________________\\n ☹ OOPS!!! The task you want to find cannot be empty.\\n______________________________________________________________________________\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "            else if(tokens[0].equals(\"done\")){"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                int result \u003d Integer.parseInt(tokens[1]);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                tasks.get(result - 1).isDone \u003d true;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                System.out.println(\"[\" + tasks.get(result - 1).getStatusIcon() + \"]\" + tasks.get(result - 1).description);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                String newRecord \u003d Record.get(result-1).replace(\",false\", \",true\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                Record.set(result-1, newRecord);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "            else if(tokens[0].equals(\"remove\")){"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jingkang97"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                int result \u003d Integer.parseInt(tokens[1]);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                String taskToken[] \u003d tasks.get(result-1).toString().split(\"]\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                String taskType \u003d taskToken[0].equals(\"[E\") ? \"E\" : taskToken[0].equals(\"[D\") ? \"D\" : \"T\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                System.out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                System.out.println(\"[\" + taskType + \"]\" + \"[\" + tasks.get(result - 1).getStatusIcon() + \"]\" + tasks.get(result - 1).description);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                Record.remove(result - 1);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                tasks.remove(result - 1);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                index -\u003d 1;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "            else if(tokens[0].equals(\"deadline\")){"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                String[] token \u003d input.split(\"/by\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                String[] recordToken \u003d input.split(\"deadline|/by\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                try{"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                    tasks.add(new Deadline(token[0], token[token.length-1].trim()));// \u003d new Deadline(token[0], token[token.length-1].trim());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                    System.out.println(\"______________________________________________________________________________\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                    System.out.println(\"Got it. I have added this task: \");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                    System.out.println(tasks.get(index));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                    System.out.println(\"Now you have \" + Integer.toString(index + 1) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                    System.out.println(\"______________________________________________________________________________\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                    Record.add(\"D,\" + \"false,\" + recordToken[1].trim() + \",\" + token[token.length-1].trim());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                    index +\u003d 1;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                catch(DukeException e){"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                    System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "            else if(tokens[0].equals(\"event\")){"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                String[] token \u003d input.split(\"/at\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                String[] recordToken \u003d input.split(\"event|/at\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                    tasks.add(new Event(token[0], token[token.length-1].trim()));"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                    System.out.println(\"______________________________________________________________________________\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                    System.out.println(\"Got it. I have added this task: \");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                    System.out.println(tasks.get(index));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                    System.out.println(\"Now you have \" + Integer.toString(index + 1) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                    System.out.println(\"______________________________________________________________________________\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                    Record.add(\"E,\" + \"false,\" + recordToken[1].trim() + \",\" + token[token.length-1].trim());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                    index +\u003d 1;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                catch(DukeException e){"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                    System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "            else if(tokens[0].equals(\"todo\")){"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                    tasks.add(new ToDo(input));"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                    String[] recordToken \u003d input.split(\"todo\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                    System.out.println(\"______________________________________________________________________________\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                    System.out.println(\"Got it. I have added this task: \");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                    System.out.println(tasks.get(index));"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                    System.out.println(\"Now you have \" + Integer.toString(index + 1) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                    System.out.println(\"______________________________________________________________________________\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jingkang97"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                    Record.add(\"T,\" + \"false,\" + recordToken[1].trim());"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                    index +\u003d 1;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                catch(DukeException e){"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                    System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                    System.out.println(\"______________________________________________________________________________\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                    System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                    System.out.println(\"______________________________________________________________________________\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                    System.out.println(\"Here are the tasks in you list:\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                    for (int i \u003d 0; i \u003c index; i +\u003d 1) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                        System.out.println(i + 1 + \".\" + tasks.get(i).toString());"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                else{"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                    System.out.println(\" ______________________________________________________________________________\\n ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n______________________________________________________________________________\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        //Write to file from the Record array"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        BufferedWriter writer \u003d new BufferedWriter(new FileWriter(\"/Users/ngjingkang/duke/data/duke.txt\", false));"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        for(int l \u003d 0; l \u003c index; l +\u003d 1){"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "            if (Record.get(l) !\u003d null \u0026\u0026 l !\u003d 0) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                writer.write(\"\\n\");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                writer.write(Record.get(l));"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "            else if (Record.get(l) !\u003d null \u0026\u0026 l \u003d\u003d 0) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                writer.write(Record.get(l));"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        writer.flush();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jingkang97": 183,
      "-": 10
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jingkang97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "    public DukeException(String errorMessage){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "       super(errorMessage);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jingkang97": 6
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jingkang97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jingkang97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "    protected String EventFormatDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jingkang97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "    public Event(String description, String at)throws DukeException{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        if (description.equals(\"event \") || description.equals(\"event\")) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "            throw new DukeException(\"______________________________________________________________________________\\n ☹ OOPS!!! The description of an event cannot be empty.\\n______________________________________________________________________________\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        if (at.equals(description.trim()) || at.equals(\" \")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "            throw new DukeException(\"______________________________________________________________________________\\n ☹ OOPS!!! The time and date of an event cannot be empty.\\n______________________________________________________________________________\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jingkang97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                at.trim();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                this.at \u003d at;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                DateTimeFormat(this.at);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                this.EventFormatDateTime \u003d DateTimeFormat(this.at);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "            }catch(Exception e){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                throw new DukeException(\"Please input the date and time in this format: dd/mm/yyyy hhmm\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at: \" + EventFormatDateTime + \")\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "    public String DateTimeFormat(String dateTime){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        LocalDateTime localDate \u003d LocalDateTime.parse(dateTime, formatter);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        String localDateTimeString \u003d formatter.format(localDate);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jingkang97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        DateTimeFormatter customFormatter \u003d DateTimeFormatter.ofPattern(\"d\u0027\" + ordinalConversion(localDateTimeString) + \"\u0027 \u0027of\u0027 MMMM yyyy, h\u0027:\u0027mma\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        String result \u003d customFormatter.format(localDate);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jingkang97"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "    public String ordinalConversion(String dateTimeFormat){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        String customToken [] \u003d dateTimeFormat.split(\"/\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        int ordinalNumber \u003d Integer.parseInt(customToken[0]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        switch(ordinalNumber % 10){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "            case 1:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                return \"st\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "            case 2:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                return \"nd\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "            case 3:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                return \"rd\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "                return \"th\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jingkang97": 56
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jingkang97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "    public Task(String description){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jingkang97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        if(description.equals(\"deadline\")|| description.equals(\"todo\") || description.equals(\"event\")){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "            this.description \u003d description; //this.description refers to protected String description , \u003d description (parameter)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        else{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jingkang97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "            String token[] \u003d description.split(\"deadline|todo|event\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "            String intermediate \u003d token[1];"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "            this.description \u003d intermediate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jingkang97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jingkang97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        return \"[\" + getStatusIcon() + \"]\" + description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jingkang97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jingkang97": 27
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jingkang97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "    public ToDo(String description)throws DukeException{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        if(description.equals(\"todo \") || description.equals(\"todo\")){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "            throw new DukeException(\"______________________________________________________________________________\\n ☹ OOPS!!! The description of a todo cannot be empty.\\n______________________________________________________________________________\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jingkang97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jingkang97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jingkang97": 14
    }
  }
]

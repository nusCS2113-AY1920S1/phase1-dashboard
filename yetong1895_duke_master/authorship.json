[
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import jdk.jfr.Event;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        echo echoObject \u003d new echo();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        stringSplit checker \u003d new stringSplit();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        task[] listOfTasks \u003d new task[100];"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        dukeException exception \u003d new dukeException();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        Scanner inputs \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        saveWrite write \u003d new saveWrite();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        date dateObject \u003d new date();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        int counter \u003d 0;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        int taskNum,position,i;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        String first,second,third,forth,temp;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        String userDate;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        //open save data"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        saveRead read \u003d new saveRead();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        read.openFile(); //open the save file"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        read.readFile();//read the value of counter in the save file"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        temp \u003d read.getData();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        if(temp.length() !\u003d 0)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            counter \u003d Integer.valueOf(temp);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        for(i \u003d 1;i \u003c\u003d counter;i ++) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            read.readFile();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            temp \u003d read.getData();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            checker.splitSaveData(temp); //split the string temp"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            first \u003d checker.saveData1(); //first part; I.E. the task type"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            second \u003d checker.saveData2(); //second part; I.E done or not done"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            third \u003d checker.saveData3(); //third part; I.E description"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            if(first.equals(\"T\")) { //if it is todo task"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                listOfTasks[i] \u003d new todos(third);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                if(second.equals(\"1\"))"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    listOfTasks[i].markAsDone();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            } else if(first.equals(\"E\")) { //if it is event task"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                forth \u003d checker.saveData4();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                listOfTasks[i] \u003d new events(third,forth);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                dateObject.setCounter(counter);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                dateObject.dateConvert(forth);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                if(second.equals(\"1\"))"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    listOfTasks[i].markAsDone();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            } else if(first.equals(\"D\")) { //if it is deadline task"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                forth \u003d checker.saveData4();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                listOfTasks[i] \u003d new deadLines(third,forth);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                dateObject.setCounter(counter);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                dateObject.dateConvert(forth);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                if(second.equals(\"1\"))"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    listOfTasks[i].markAsDone();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        read.closeFile(); // close the file"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        //interface start here"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        while(true) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            String userInputs;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            userInputs \u003d inputs.nextLine();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            if (userInputs.equals(\"bye\")) { //exit with the exit message"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                echoObject.exitMessage();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            } else if (userInputs.equals(\"list\")) { //print out the list of inputs"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                if(counter \u003d\u003d 0) {//check if the task list is empty"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    System.out.println(\"Your task list is empty.\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    for (i \u003d 1; i \u003c\u003d counter; i +\u003d 1) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                        System.out.printf(\"%d.\", i);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                        System.out.println(listOfTasks[i].toString());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            } else if(checker.checkDone(userInputs) \u003d\u003d true) { //check if the user command is a valid \u0027done\u0027 command"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                taskNum \u003d checker.getTaskNum();   //get the task number of the command to be done"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                if(taskNum \u003e counter) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    exception.NullPointerException(listOfTasks, taskNum, counter); //handle exception; I.E user enter an invalid task number"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    if(listOfTasks[taskNum].checkDone() \u003d\u003d true) {//check if the task is already done"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                        System.out.println(\"This task is already marked  as done.\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                        listOfTasks[taskNum].markAsDone(); //mark the task as done"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                        System.out.println(\"Nice! I\u0027ve marked this task as done:\");//print the task after marking as done"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                        System.out.println(listOfTasks[taskNum].toString());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            }else if(checker.checkTodo(userInputs) \u003d\u003d true) { //check if the user command is a valid \u0027todo\u0027 command"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                if(userInputs.length() \u003c 6) { //handle exception; I.E. user have not enter the description of the task"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    exception.StringIndexOutOfBoundsException(listOfTasks,userInputs,counter,\"todo\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    counter --;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    listOfTasks[counter] \u003d new todos(userInputs.substring(5));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    System.out.printf(\"Got it. I\u0027ve added this task:\\n  %s\\nNow you have %d tasks in the list.\\n\", listOfTasks[counter].toString(), counter);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            } else if(checker.checkEvent(userInputs) \u003d\u003d true) {//check if the user command is a valid \u0027event\u0027 command"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                position \u003d userInputs.indexOf(\"/\"); //find the position of the separator \u0027/\u0027"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                if(position \u003d\u003d -1 || userInputs.length() \u003c\u003d position + 4) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    exception.StringIndexOutOfBoundsException(listOfTasks,userInputs,counter,\"event\");//call exception for invalid inputs"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    counter--;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                } else {//valid inputs"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    userDate \u003d userInputs.substring(position + 4);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    dateObject.setCounter(counter);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    dateObject.dateConvert(userDate);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    if(dateObject.getCheckDate() \u003d\u003d true) {//check if the date input is valid"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                        listOfTasks[counter] \u003d new events(userInputs.substring(6, position - 1), userInputs.substring(position + 4));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                        System.out.printf(\"Got it. I\u0027ve added this task:\\n  %s\\nNow you have %d tasks in the list.\\n\", listOfTasks[counter].toString(), counter);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                        counter--;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            } else if(checker.checkDeadline(userInputs) \u003d\u003d true) {//check if the user command is a valid \u0027deadline\u0027 command"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                position \u003d userInputs.indexOf(\"/\"); //find the position of the separator \u0027/\u0027"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                if(position \u003d\u003d -1 || userInputs.length() \u003c\u003d position + 4) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    exception.StringIndexOutOfBoundsException(listOfTasks,userInputs,counter,\"deadline\");//call exception for invalid inputs"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    counter--;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    userDate \u003d userInputs.substring(position + 4);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    dateObject.setCounter(counter);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    dateObject.dateConvert(userDate);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    if(dateObject.getCheckDate() \u003d\u003d true) {//check if the date input is valid"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                        listOfTasks[counter] \u003d new deadLines(userInputs.substring(9, position - 1), userInputs.substring(position + 4));"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                        System.out.printf(\"Got it. I\u0027ve added this task:\\n  %s\\nNow you have %d tasks in the list.\\n\", listOfTasks[counter].toString(), counter);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                        counter--;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            } else {//all other invalid inputs"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                System.out.println(\"Sorry, the input is invalid\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            dateObject.setCounter(counter);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        //convert the date and time"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "//        date dateObject \u003d new date();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "//        dateObject.dateConvert();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        //save"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        write.openFile();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        String numOfTasks \u003d Integer.toString(counter);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        write.addRecords(numOfTasks); //first save the value of counter into the save.txt file"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        for(i \u003d 1;i \u003c\u003d counter; i++) {//loop through the array of objects and save the information into save.txt file"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            temp \u003d listOfTasks[i].saveFormat();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            write.addRecords(temp);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        write.closeFile();//close the file"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yetong1895": 151,
      "-": 4
    }
  },
  {
    "path": "src/main/java/date.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class date {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String[] listOfDate \u003d new String[100]; //store the list of dates"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    Date dueDate \u003d new Date();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private int counter \u003d 1;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private boolean checkDate \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private int position;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void setCounter(int counter) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        this.counter \u003d counter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void dateConvert(String inputDate) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        listOfDate[counter] \u003d inputDate;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        position \u003d inputDate.indexOf(\"-\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            if(position \u003d\u003d -1) { //if there is only one input time"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                Date dueDate \u003d new SimpleDateFormat(\"dd.MM.yyyy HH mm\").parse(inputDate);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "//                System.out.println(dueDate);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                checkDate \u003d true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            } else { //if there is a time range"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                Date dueDate1 \u003d new SimpleDateFormat(\"dd.MM.yyyy HH mm\").parse(inputDate.substring(0,position));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                Date dueDate2 \u003d new SimpleDateFormat(\"dd.MM.yyyy HH mm\").parse(inputDate.substring(0,position - 5)+inputDate.substring(position + 1));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "//                System.out.println(dueDate1 +\" to \"+ dueDate2);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                checkDate \u003d true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } catch(ParseException e) {//if user input a invalid time format"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            checkDate \u003d false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            System.out.println(\"Invalid date and time format. Please enter your date and time in the following format :\\n\" +"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    \"dd.mm.yyyy hh mm  i.e. 05.12.2019 12 30  OR\\n\" +"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    \"dd.mm.yyyy hh mm-hh mm  i.e. 05.12.2019 12 30-14 30\\n\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    //check if the input date is a valid input date"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public boolean getCheckDate () {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return checkDate;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "//    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "//        return String.format(dueDate.toString());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yetong1895": 46
    }
  },
  {
    "path": "src/main/java/deadLines.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class deadLines extends task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public deadLines(String description,String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public String saveFormat() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return String.format(\"%s|%s|%s\",\"D\",super.saveFormat(),by);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yetong1895": 18
    }
  },
  {
    "path": "src/main/java/dukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class dukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    task[] listOfTask \u003d new task[100];"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    String temp;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void NullPointerException(task[] listOfTask, int a, int counter) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        this.listOfTask \u003d listOfTask;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            listOfTask[a].markAsDone();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            if (counter \u003d\u003d 0) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                System.out.printf(\"Sorry, there is not task in the list.\\n\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            } else if (counter \u003d\u003d 1) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                System.out.printf(\"Sorry, there is only 1 task in the list.\\n\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                System.out.printf(\"Sorry, there are only %d tasks in the list.\\n\", counter);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void StringIndexOutOfBoundsException(task[] listOfTask, String inputs, int a, String taskType) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        this.listOfTask \u003d listOfTask;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        if (inputs.length() \u003d\u003d 5 \u0026\u0026 taskType.equals(\"todo\")) { //hand the exception from \u0027todo\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            System.out.println(\"Sorry, the description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else if(inputs.length() !\u003d 5 \u0026\u0026 taskType.equals(\"todo\")){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                listOfTask[a] \u003d new todos(inputs.substring(5));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                System.out.println(\"Sorry, the description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        int position \u003d inputs.indexOf(\"/\"); //find the position of the separator \u0027/\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        if(taskType.equals(\"event\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                listOfTask[a] \u003d new events(inputs.substring(6, position - 1), inputs.substring(position + 4));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                if (inputs.length() \u003c\u003d 7) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    System.out.println(\"Sorry, the description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                } else if (position \u003d\u003d -1 || inputs.length() \u003c\u003d position + 4) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    System.out.println((\"Sorry, please enter a valid date and time\"));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } else if(taskType.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                listOfTask[a] \u003d new deadLines(inputs.substring(9, position - 1), inputs.substring(position + 4));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                if (inputs.length() \u003c\u003d 9) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    System.out.println(\"Sorry, the description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                } else if (position \u003d\u003d -1 || inputs.length() \u003c\u003d position + 4) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    System.out.println((\"Sorry, please enter a valid date and time\"));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yetong1895": 57
    }
  },
  {
    "path": "src/main/java/echo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class echo {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public echo() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void repeatInput(String input) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.printf(\"%s\\n\",input);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void exitMessage() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yetong1895": 13
    }
  },
  {
    "path": "src/main/java/events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class events extends task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public events(String description,String at) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public String saveFormat() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return String.format(\"%s|%s|%s\",\"E\",super.saveFormat(),at);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yetong1895": 17
    }
  },
  {
    "path": "src/main/java/saveRead.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.lang.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class saveRead {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private Scanner read;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private String datas;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void openFile() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            read \u003d new Scanner(new File(\"saves.txt\"));"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } catch(Exception e) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            System.out.println(\"Could not find any file\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    //read the next line of data"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void readFile() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            datas \u003d read.nextLine();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    //return the data value"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public String getData() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return datas;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    //close the file"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void closeFile() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        read.close();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yetong1895": 31
    }
  },
  {
    "path": "src/main/java/saveWrite.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.lang.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class saveWrite {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private Formatter write;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void openFile() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            write \u003d new Formatter(\"saves.txt\"); //create a new file call saves"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            System.out.println(\"You have an error.\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    //insert the elements into the file."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void addRecords(String temp) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        write.format(\"%s\\n\",temp);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    //close the file"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void closeFile() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        write.close();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yetong1895": 23
    }
  },
  {
    "path": "src/main/java/stringSplit.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class stringSplit {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private String split[] \u003d new String[100];"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    private int taskNum;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void breakString(String command) { //split the string into individual words"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        split \u003d command.split(\" \");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void convertToInt() { //convert the string number to int number"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        taskNum \u003d Integer.valueOf(split[1]);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public static boolean isNumeric(final String s) { //check if a string passed in is a numeric number"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return s.chars().allMatch(Character::isDigit);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public boolean checkDone(String command) { //check if there is a \"done\" command"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        breakString(command);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        if(split[0].equals(\"done\") \u0026\u0026 isNumeric(split[1]) \u003d\u003d true) { //check if the first string is \"done\" and the second string is a number."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                convertToInt();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "                    return true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public boolean checkTodo(String command) {//check if it is a todo command"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        if(split[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public boolean checkEvent(String command) {//check if it is a event command"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        if(split[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public boolean checkDeadline(String command) {//check if it is a deadline command"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        if(split[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public int getTaskNum () { //return the task number to be mark as done"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return taskNum;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void splitSaveData (String data) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        split \u003d data.split(\"\\\\|\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public String saveData1 () {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return split[0];"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public String saveData2() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return split[1];"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public String saveData3() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return split[2];"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public String saveData4() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return split[3];"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yetong1895": 69
    }
  },
  {
    "path": "src/main/java/task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "import jdk.jfr.Description;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    protected int isDoneInt;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public task(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        isDoneInt \u003d 0;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public void markAsDone() { //set the task as done"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        isDoneInt \u003d 1;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public boolean checkDone() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public String toString() { //print out the status icon and the description"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return\"[\"+ getStatusIcon()+\"]\"+\" \"+description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public String saveFormat() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return String.format(\"%d|%s\",isDoneInt,description);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yetong1895": 34
    }
  },
  {
    "path": "src/main/java/todos.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "public class todos extends task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public todos(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong1895"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public String toString() { //print out the status icon and the description"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    public String saveFormat() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "        return String.format(\"%s|%s\",\"T\",super.saveFormat());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong1895"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yetong1895": 14
    }
  }
]

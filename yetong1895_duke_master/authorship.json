[
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mrytg"
        },
        "content": "import jdk.jfr.Event;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mrytg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong"
        },
        "content": "        echo echoObject \u003d new echo();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mrytg"
        },
        "content": "        stringSplit checker \u003d new stringSplit();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong"
        },
        "content": "        task[] listOfTasks \u003d new task[100];"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mrytg"
        },
        "content": "        dukeException exception \u003d new dukeException();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong"
        },
        "content": "        Scanner inputs \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mrytg"
        },
        "content": "        int counter \u003d 0;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong"
        },
        "content": "        int taskNum;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mrytg"
        },
        "content": "        int position;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong"
        },
        "content": "        while(true) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong"
        },
        "content": "            String userInputs;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong"
        },
        "content": "            userInputs \u003d inputs.nextLine();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong"
        },
        "content": "            if (userInputs.equals(\"bye\")) { //exit with the exit message"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong"
        },
        "content": "                echoObject.exitMessage();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yetong"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mrytg"
        },
        "content": "            } else if (userInputs.equals(\"list\")) { //print out the list of inputs"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mrytg"
        },
        "content": "                for (int i \u003d 1; i \u003c\u003d counter; i +\u003d 1) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yetong"
        },
        "content": "                    System.out.printf(\"%d.\", i);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mrytg"
        },
        "content": "                    System.out.println(listOfTasks[i].toString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yetong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mrytg"
        },
        "content": "            } else if(checker.checkDone(userInputs) \u003d\u003d true) { //check if the user command is a valid \u0027done\u0027 command"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mrytg"
        },
        "content": "                    taskNum \u003d checker.getTaskNum();   //get the task number of the command to be done"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mrytg"
        },
        "content": "                if(taskNum \u003e counter) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mrytg"
        },
        "content": "                    exception.NullPointerException(listOfTasks, taskNum, counter); //handle exception; I.E user enter an invalid task number"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mrytg"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yetong"
        },
        "content": "                    listOfTasks[taskNum].markAsDone(); //mark the task as done"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mrytg"
        },
        "content": "                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");//print the task after marking as done"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mrytg"
        },
        "content": "                    System.out.println(listOfTasks[taskNum].toString());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mrytg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mrytg"
        },
        "content": "            }else if(checker.checkTodo(userInputs) \u003d\u003d true) { //check if the user command is a valid \u0027todo\u0027 command"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mrytg"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mrytg"
        },
        "content": "                if(userInputs.length() \u003c 6) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mrytg"
        },
        "content": "                    exception.StringIndexOutOfBoundsException(listOfTasks,userInputs,counter);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mrytg"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mrytg"
        },
        "content": "                    listOfTasks[counter] \u003d new todos(userInputs.substring(5));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mrytg"
        },
        "content": "                    System.out.printf(\"Got it. I\u0027ve added this task:\\n  %s\\nNow you have %d tasks in the list.\\n\", listOfTasks[counter].toString(), counter);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mrytg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mrytg"
        },
        "content": "            } else if(checker.checkEvent(userInputs) \u003d\u003d true) {//check if the user command is a valid \u0027event\u0027 command"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mrytg"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mrytg"
        },
        "content": "                position \u003d userInputs.indexOf(\"/\"); //find the position of the separator \u0027/\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mrytg"
        },
        "content": "                listOfTasks[counter] \u003d new events(userInputs.substring(6, position - 1), userInputs.substring(position + 4));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mrytg"
        },
        "content": "                checker.setTotalTask(counter); //error checking"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mrytg"
        },
        "content": "                System.out.printf(\"Got it. I\u0027ve added this task:\\n  %s\\nNow you have %d tasks in the list.\\n\", listOfTasks[counter].toString(), counter);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mrytg"
        },
        "content": "            } else if(checker.checkDeadline(userInputs) \u003d\u003d true) {//check if the user command is a valid \u0027deadline\u0027 command"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mrytg"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mrytg"
        },
        "content": "                position \u003d userInputs.indexOf(\"/\"); //find the position of the separator \u0027/\u0027"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mrytg"
        },
        "content": "                listOfTasks[counter] \u003d new deadLines(userInputs.substring(9,position - 1),userInputs.substring(position + 4));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mrytg"
        },
        "content": "                checker.setTotalTask(counter); //error checking"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mrytg"
        },
        "content": "                System.out.printf(\"Got it. I\u0027ve added this task:\\n  %s\\nNow you have %d tasks in the list.\\n\", listOfTasks[counter].toString(), counter);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yetong"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yetong"
        },
        "content": "                listOfTasks[counter] \u003d new task(userInputs);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yetong"
        },
        "content": "                counter ++;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mrytg"
        },
        "content": "                checker.setTotalTask(counter); //error checking"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mrytg"
        },
        "content": "                System.out.printf(\"added: %s\\n\",userInputs);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yetong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yetong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yetong": 22,
      "mrytg": 39,
      "-": 4
    }
  },
  {
    "path": "src/main/java/deadLines.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mrytg"
        },
        "content": "public class deadLines extends task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mrytg"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mrytg"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mrytg"
        },
        "content": "    public deadLines(String description,String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mrytg"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mrytg"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mrytg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mrytg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mrytg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mrytg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mrytg"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mrytg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mrytg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mrytg": 13
    }
  },
  {
    "path": "src/main/java/dukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mrytg"
        },
        "content": "public class dukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mrytg"
        },
        "content": "    task[] listOfTask \u003d new task[100];"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mrytg"
        },
        "content": "    String temp;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mrytg"
        },
        "content": "    public void NullPointerException(task[] listOfTask,int a,int counter) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mrytg"
        },
        "content": "        this.listOfTask \u003d listOfTask;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mrytg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mrytg"
        },
        "content": "            listOfTask[a].markAsDone();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mrytg"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mrytg"
        },
        "content": "            if(counter \u003d\u003d 0) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mrytg"
        },
        "content": "                System.out.printf(\"Sorry, there is not task in the list.\\n\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mrytg"
        },
        "content": "            } else if(counter \u003d\u003d 1) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mrytg"
        },
        "content": "                System.out.printf(\"Sorry, there is only 1 task in the list.\\n\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mrytg"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mrytg"
        },
        "content": "                System.out.printf(\"Sorry, there are only %d tasks in the list.\\n\", counter);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mrytg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mrytg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mrytg"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mrytg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mrytg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mrytg"
        },
        "content": "    public void StringIndexOutOfBoundsException(task[] listOfTask,String inputs,int a) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mrytg"
        },
        "content": "        this.listOfTask \u003d listOfTask;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mrytg"
        },
        "content": "        if (inputs.length() \u003d\u003d 5) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mrytg"
        },
        "content": "            System.out.println(\"Sorry, the description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mrytg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mrytg"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mrytg"
        },
        "content": "                listOfTask[a] \u003d new todos(inputs.substring(5));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mrytg"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mrytg"
        },
        "content": "                System.out.println(\"Sorry, the description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mrytg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mrytg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mrytg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mrytg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mrytg": 32
    }
  },
  {
    "path": "src/main/java/echo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong"
        },
        "content": "public class echo {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong"
        },
        "content": "    public echo() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong"
        },
        "content": "    public void repeatInput(String input) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong"
        },
        "content": "        System.out.printf(\"%s\\n\",input);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mrytg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong"
        },
        "content": "    public void exitMessage() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yetong": 12,
      "mrytg": 1
    }
  },
  {
    "path": "src/main/java/events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mrytg"
        },
        "content": "public class events extends task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mrytg"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mrytg"
        },
        "content": "    public events(String description,String at) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mrytg"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mrytg"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mrytg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mrytg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mrytg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mrytg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mrytg"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mrytg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mrytg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mrytg": 12
    }
  },
  {
    "path": "src/main/java/stringSplit.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong"
        },
        "content": "public class stringSplit {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong"
        },
        "content": "    private String split[] \u003d new String[100];"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong"
        },
        "content": "    private int taskNum;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong"
        },
        "content": "    private int totalTask;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong"
        },
        "content": "    public void setTotalTask(int x) { //find the total number of task in the current list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong"
        },
        "content": "        totalTask \u003d x;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong"
        },
        "content": "    public void breakString(String command) { //split the string into individual words"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mrytg"
        },
        "content": "        split \u003d command.split(\" \");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mrytg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yetong"
        },
        "content": "    public void convertToInt() { //convert the string number to int number"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong"
        },
        "content": "        taskNum \u003d Integer.valueOf(split[1]);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong"
        },
        "content": "    public static boolean isNumeric(final String s) { //check if a string passed in is a numeric number"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong"
        },
        "content": "        return s.chars().allMatch(Character::isDigit);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yetong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mrytg"
        },
        "content": "    public boolean checkDone(String command) { //check if there is a \"done\" command"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong"
        },
        "content": "        breakString(command);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong"
        },
        "content": "        if(split[0].equals(\"done\") \u0026\u0026 isNumeric(split[1]) \u003d\u003d true) { //check if the first string is \"done\" and the second string is a number."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yetong"
        },
        "content": "                convertToInt();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mrytg"
        },
        "content": " //               if(taskNum \u003c\u003d totalTask) {//check if the task number to be done is involve in the total number."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yetong"
        },
        "content": "                    return true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mrytg"
        },
        "content": " //               }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yetong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yetong"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yetong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yetong"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mrytg"
        },
        "content": "    public boolean checkTodo(String command) {//check if it is a todo command"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mrytg"
        },
        "content": "        if(split[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mrytg"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mrytg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mrytg"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mrytg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mrytg"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mrytg"
        },
        "content": "    public boolean checkEvent(String command) {//check if it is a event command"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mrytg"
        },
        "content": "        if(split[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mrytg"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mrytg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mrytg"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mrytg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mrytg"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mrytg"
        },
        "content": "    public boolean checkDeadline(String command) {//check if it is a deadline command"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mrytg"
        },
        "content": "        if(split[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mrytg"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mrytg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mrytg"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mrytg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mrytg"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mrytg"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mrytg"
        },
        "content": "    public int getTaskNum () { //return the task number to be mark as done"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mrytg"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yetong"
        },
        "content": "        return taskNum;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yetong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yetong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yetong": 30,
      "mrytg": 29
    }
  },
  {
    "path": "src/main/java/task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yetong"
        },
        "content": "import jdk.jfr.Description;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yetong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yetong"
        },
        "content": "public class task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yetong"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yetong"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yetong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yetong"
        },
        "content": "    public task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yetong"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yetong"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yetong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yetong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yetong"
        },
        "content": "    public void markAsDone() { //set the task as done"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yetong"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mrytg"
        },
        "content": "//        getStatusIcon();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yetong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yetong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yetong"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yetong"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yetong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yetong"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mrytg"
        },
        "content": "    public String toString() { //print out the status icon and the description"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mrytg"
        },
        "content": "        return\"[\"+ getStatusIcon()+\"]\"+\" \"+description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yetong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yetong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yetong": 21,
      "mrytg": 3
    }
  },
  {
    "path": "src/main/java/todos.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mrytg"
        },
        "content": "public class todos extends task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mrytg"
        },
        "content": "    public todos(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mrytg"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mrytg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mrytg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mrytg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mrytg"
        },
        "content": "    public String toString() { //print out the status icon and the description"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mrytg"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mrytg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mrytg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mrytg": 10
    }
  }
]

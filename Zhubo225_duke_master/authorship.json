[
  {
    "path": "src/main/java/ConvertDateAndTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "public class ConvertDateAndTime {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    private static String str;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    public ConvertDateAndTime (String str){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "        ConvertDateAndTime.str \u003d str;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    public static void main(String[] argv) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy Hm\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "            Date date \u003d formatter.parse(str);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "            System.out.println(date);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "            System.out.println(formatter.format(date));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhubo225": 23
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    SimpleDateFormat formatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    Date date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    public Deadline(String description, String type, String by) throws ParseException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "        super(description, type);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "        formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "        date \u003d formatter.parse(by);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "        return \"[D][\" + getStatusIcon() + \"] \" + description + \"(by: \" + date + \")\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    public String savedDescription() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    public String savedDate() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhubo225": 30
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "//import MyPackage.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    public static void Duke_Master() throws DukeException, IOException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "        ArrayList\u003cString\u003e stored_list \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "        ArrayList\u003cTask\u003e saved_tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "        String file_name \u003d \"C:\\\\Users\\\\User\\\\Desktop\\\\Duke Master\\\\src\\\\main\\\\java\\\\duke.txt\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "        Storage file \u003d new Storage(file_name, saved_tasks);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "        file.loadFile(file_name, saved_tasks);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "        for (int j \u003d 0; j \u003c (file.updateTasks()).size(); j++) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "            tasks.add((file.updateTasks()).get(j));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "            while (true) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                Scanner scan \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                String message \u003d scan.nextLine();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                Task task \u003d new Task(message, \"\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                String str1 \u003d null;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                String check \u003d null;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                if (message.contains(\" \")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                    String[] str2 \u003d task.description.split(\" \", 2);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                    check \u003d str2[0];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                    str1 \u003d str2[1];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                if (Objects.equals(task.description, \"bye\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                    Storage.writeFile(file_name, tasks);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                    System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                } else if (task.description.equals(\"todo\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                    System.out.println(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                } else if (task.description.equals(\"event\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                    System.out.println(\"Which event?\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                } else if (task.description.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                    System.out.println(\"Deadline of what?\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                } else if (Objects.equals(task.description, \"list\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                    if (i \u003d\u003d 0) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                        System.out.println(\"☹ OOPS!!! Empty list!\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                        for (int j \u003d 0; j \u003c stored_list.size(); ++j) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                            System.out.println(j + 1 + \".\" + stored_list.get(j));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                } else if (Objects.equals(check, \"done\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                        int number \u003d Integer.parseInt(str1) - 1;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                        tasks.get(number).markAsDone();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                        stored_list.set(number, tasks.get(number).toString());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n \" + tasks.get(number));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                    } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                        System.out.println(\"The task number do not exist!\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                    } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                        System.out.println(\"Oh no, invalid task number!\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                } else if (Objects.equals(check, \"delete\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                        i--;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                        int number \u003d Integer.parseInt(str1) - 1;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                        String deleted_task \u003d stored_list.get(number);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                        stored_list.remove(number);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                        System.out.println(\"Noted. I\u0027ve removed this task:\\n \" + deleted_task + \"\\nNow you have \" + stored_list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                    } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                        System.out.println(\"The task number do not exist!\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                    } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                        System.out.println(\"Oh no, invalid task number!\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                } else if (Objects.equals(check, \"find\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                    int j \u003d 0;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                    System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                    for (String temp : stored_list) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                        if (temp.contains(str1)) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                            j++;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                            System.out.println(j + \".\" + temp);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                    if (j \u003d\u003d 0) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                        System.out.println(\"Oops, no matching found!\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                    if (Objects.equals(check, \"deadline\")) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                            String[] str3 \u003d str1.split(\"/\", 2);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                            String str4 \u003d str3[1].replace(\"by \", \"\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                            Task info \u003d new Task(str3[0], \"D\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                            tasks.add(new Deadline(info.description, \"D\", str4));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                            stored_list.add(tasks.get(i).toString());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                            System.out.println(\"Got it. I\u0027ve added this task:\\n\" + \" \" + stored_list.get(i) + \"\\n\" + \"Now you have \" + stored_list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                        } catch (IndexOutOfBoundsException | ParseException ex) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                            System.out.println(\"When\u0027s the deadline? :o\\n(Format of deadline: dd/mm/yyyy TIME)\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                    } else if (Objects.equals(check, \"event\")) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                            String[] str3 \u003d str1.split(\"/\", 2);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                            String str4 \u003d str3[1].replace(\"at \", \"\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                            Task info \u003d new Task(str3[0], \"E\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                            System.out.println(str3[0]);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                            tasks.add(new Event(info.description, \"E\", str4));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                            stored_list.add(tasks.get(i).toString());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                            System.out.println(\"Got it. I\u0027ve added this task:\\n\" + \" \" + stored_list.get(i) + \"\\n\" + \"Now you have \" + stored_list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                        } catch (IndexOutOfBoundsException | ParseException ex) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                            System.out.println(\"When\u0027s the event? :o\\n(Format of event: dd/mm/yyyy TIME)\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                    } else if (Objects.equals(check, \"todo\")) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                        Task info \u003d new Task(str1, \"T\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                        tasks.add(new ToDo(info.description, \"T\"));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                        stored_list.add(tasks.get(i).toString());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + \" \" + stored_list.get(i) + \"\\n\" + \"Now you have \" + stored_list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                        --i;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                            throw new DukeException(\"unknown\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                        } catch (DukeException ex) { }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                    ++i;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "            }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    public static void main(String[] args) throws DukeException, IOException {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "        Duke_Master();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Zhubo225": 143,
      "-": 9
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    String str;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    public DukeException(String str)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "            switch (str) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                case \"empty\":"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! Instructions cannot be empty.\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                case \"empty todo\":"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                case \"empty event\":"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                case \"empty deadline\":"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                case \"unknown\":"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "            }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "            System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhubo225": 25
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    SimpleDateFormat formatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    Date date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    public Event(String description, String type, String at) throws ParseException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "        super(description, type);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "        formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "        date \u003d formatter.parse(at);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "        return \"[E][\" + getStatusIcon() + \"] \" + description + \"(at: \" + date + \")\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    public String savedDescription() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    public String savedDate() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhubo225": 30
    }
  },
  {
    "path": "src/main/java/SavedTasks.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "public class SavedTasks {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    public SavedTasks(String[] saved_tasks) throws IOException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter(\"C:/Users/User/Desktop/Duke Master/Data/Duke.txt\", true); //Set true for append mode"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "        PrintWriter printWriter \u003d new PrintWriter(fileWriter);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d saved_tasks.length; i ++) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "            String textToAppend \u003d saved_tasks[i];"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "            printWriter.println(textToAppend);  //New line"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhubo225": 16
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    public Storage (String filename, ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    public void loadFile (String file_name, ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "            String line \u003d null;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "            FileReader fr \u003d new FileReader(file_name);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "            while ((line \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                String[] str \u003d line.split(\"|\", 5);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                switch (str[0]) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                        Deadline str2 \u003d new Deadline(str[1], \"D\", str[2]);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                        if (str[2].equals(\"1\")) str2.markAsDone();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                        tasks.add(str2);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                    case \"E\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                        Event str3 \u003d new Event(str[1], \"E\", str[2]);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                        if (str[2].equals(\"1\")) str3.markAsDone();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                        tasks.add(str3);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                        ToDo str4 \u003d new ToDo(str[1], \"T\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                        if (str[2].equals(\"1\")) str4.markAsDone();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                        tasks.add(str4);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "            System.out.println(\"File not found !!!\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "        } catch (IOException | ParseException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "            System.out.println(\"Error reading file !!!\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    public static void writeFile (String file_name, ArrayList\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "        FileWriter fw \u003d new FileWriter(file_name);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "        BufferedWriter bw \u003d new BufferedWriter(fw);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "        for (Task list : tasks) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "            switch (list.type) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                    bw.write(list.type + \" \" + \"|\" + \" \" + list.savedStatusIcon() + ((Deadline) list).savedDescription() + \" \" + \"|\" + \" \"  + ((Deadline) list).savedDate() + \"\\n\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                    bw.write(list.type + \" \" + \"|\" + \" \"  + list.savedStatusIcon() + ((Event) list).savedDescription() + \" \" + \"|\" + \" \"  + ((Event) list).savedDate() + \"\\n\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                    bw.write(list.type + \" \" + \"|\" + \" \"  + list.savedStatusIcon() + ((ToDo) list).savedDescription() + \"\\n\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    public ArrayList\u003cTask\u003e updateTasks () {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhubo225": 67
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    protected String description, type;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    public Task(String description, String type) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    public boolean markAsDone() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "        return isDone \u003d true;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    public int savedStatusIcon() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "        return (isDone ? 1 : 0);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhubo225": 22
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    public ToDo(String description, String type) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "        super(description, type);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "        return \"[T][\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    public String savedDescription() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhubo225"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhubo225": 15
    }
  }
]

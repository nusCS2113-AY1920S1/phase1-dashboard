[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "test {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    mainClassName \u003d \"src.main.java.Duke\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "modakshantanu": 27,
      "-": 14
    }
  },
  {
    "path": "src/main/java/duke/CommandType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": " * An enum of the 8 different types of commands a user can issue"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "public enum CommandType {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    INVALID,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    DELETE,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    LIST,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    DONE,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    EVENT,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    BYE,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "modakshantanu": 16
    }
  },
  {
    "path": "src/main/java/duke/Commands/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "package duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import duke.CommandType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import duke.StorageHandler;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import duke.Tasks.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import duke.Tasks.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import duke.Tasks.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import duke.Tasks.Todo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": " * Command to Add a Task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    private CommandType type \u003d CommandType.INVALID;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    private String description \u003d \"\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    private String date \u003d \"\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * @param type The type of Task"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * @param tokens 1st element - the description of the task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     *               2nd optional element - The date (for Events and Deadlines)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public AddCommand(CommandType type, String ...tokens) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        this.description \u003d tokens[0];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        if (tokens.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            this.date \u003d tokens[1];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public void execute(Ui ui, TaskList taskList, StorageHandler storageHandler) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        Task task \u003d null;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                task \u003d new Todo(description);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                task \u003d new Event(description,date);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                task \u003d new Deadline(description,date);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        taskList.addTask(task);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        storageHandler.addTask(task);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        ui.printLines(\"Added task: \" + task.toString());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "modakshantanu": 56
    }
  },
  {
    "path": "src/main/java/duke/Commands/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "package duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import duke.StorageHandler;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": " * Command to indicate that the user wishes to exit"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public ByeCommand() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        isBye \u003d true;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public void execute(Ui ui, TaskList taskList, StorageHandler storageHandler) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        ui.printLines(\"Goodbye\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "modakshantanu": 19
    }
  },
  {
    "path": "src/main/java/duke/Commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "package duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import duke.StorageHandler;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": " * Parent class for all commands"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public boolean isBye \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * Executes the actions that need to be taken for that command"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * Action varies for each type of command"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * @param ui The Ui object (for outputting to the user)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * @param taskList The list of tasks that will be read/updated"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * @param storageHandler The storage handler for the program"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public abstract void execute(Ui ui, TaskList taskList, StorageHandler storageHandler);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "modakshantanu": 24
    }
  },
  {
    "path": "src/main/java/duke/Commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "package duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import duke.StorageHandler;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import duke.Tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": " * Command requesting to delete a task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public void execute(Ui ui, TaskList taskList, StorageHandler storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        Task deleted \u003d taskList.deleteTask(index);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        storage.saveData(taskList.getTaskList());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        ui.printLines(\"Removed this task:\" , deleted.toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "modakshantanu": 25
    }
  },
  {
    "path": "src/main/java/duke/Commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "package duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import duke.StorageHandler;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": " * Command to mark a task as done"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    int index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public DoneCommand(int index) {  this.index \u003d index;  }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public void execute(Ui ui, TaskList taskList, StorageHandler storageHandler) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        taskList.setCompleted(index,true);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        storageHandler.saveData(taskList.getTaskList());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        ui.printLines(\"Task set as done:\", taskList.getByIndex(index).toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "modakshantanu": 22
    }
  },
  {
    "path": "src/main/java/duke/Commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "package duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import duke.StorageHandler;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": " * Command to show all tasks containing a keyword"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public void execute(Ui ui, TaskList taskList, StorageHandler storageHandler) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        ui.printHorizLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        ui.printUnformattedLines(\"Here are the matching tasks:\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        ui.printUnformattedLines(taskList.filterToStringArray(keyword));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        ui.printHorizLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "modakshantanu": 28
    }
  },
  {
    "path": "src/main/java/duke/Commands/InvalidCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "package duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import duke.StorageHandler;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": " * Any Command that is invalid"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": " * When executed, it shows an \"Invalid Command\" message to the user"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "public class InvalidCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    private String message \u003d \"Invalid Command!\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public InvalidCommand() {}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public InvalidCommand(String message) {  this.message \u003d message;  }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public void execute(Ui ui, TaskList taskList, StorageHandler storageHandler) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        ui.printLines(message);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "modakshantanu": 25
    }
  },
  {
    "path": "src/main/java/duke/Commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "package duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import duke.StorageHandler;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": " * Command to list all the tasks"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public void execute(Ui ui, TaskList taskList, StorageHandler storageHandler) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        ui.printLines(taskList.filterToStringArray(\"\"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "modakshantanu": 16
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import duke.Commands.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import duke.Tasks.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import duke.Tasks.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import duke.Tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import duke.Tasks.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": " * The main duke class"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": " * To start the program, instantiate a duke object and call .run()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    private static final String horizontalLine \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "   // private static ArrayList\u003cduke.Tasks.Task\u003e taskList \u003d new ArrayList\u003cduke.Tasks.Task\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    private static TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    private static StorageHandler storage \u003d new StorageHandler(\"data.txt\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    private static Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    private static Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * Starts the program"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        taskList.setTaskList(storage.getData());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        ui.printWelcome();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            if (input.isBlank()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            Command c \u003d parser.parseLine(input, taskList.size());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            c.execute(ui, taskList, storage);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            if (c.isBye) {  return;  }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "modakshantanu": 47,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import duke.Commands.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": " * Class that handles all parsing of user input"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * Parses one line of input text and returns the corresponding Command object"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * @param line A single line String of user input (not necessary valid)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * @param listSize The size of the task list of the program"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * @return The command that needs to be executed in response"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public Command parseLine(String line, int listSize) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        // remove all | characters from input"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        line \u003d line.replace(\"|\",\"\")"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                .trim(); // remove leading and trailing spaces"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        String[] tokens \u003d line.split(\" \",2);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        if (tokens.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            return new InvalidCommand();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        switch(tokens[0].toLowerCase()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            case \"done\": case \"delete\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                if (tokens.length !\u003d 2) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                    return new InvalidCommand();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                int index;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                    index \u003d Integer.parseInt(tokens[1]) - 1;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                } catch(Exception ignored) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                    return new InvalidCommand();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                if (index \u003c 0 || index \u003e\u003d listSize) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                    return new InvalidCommand(\"Index not in bounds\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                if (tokens[0].toLowerCase().equals(\"done\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                    return new DoneCommand(index);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                    return new DeleteCommand(index);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            case \"todo\": case \"event\": case \"deadline\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                if (tokens.length !\u003d 2) {  return new InvalidCommand();  }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                String content \u003d tokens[1];"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                String[] subTokens \u003d null;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                switch (tokens[0].toLowerCase()) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                    case \"todo\": return new AddCommand(CommandType.TODO,content);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                    case \"event\": subTokens \u003d content.split(\"/at\"); break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                    case \"deadline\": subTokens \u003d content.split(\"/by\"); break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                if (subTokens.length !\u003d 2 || subTokens[0].isBlank() || subTokens[1].isBlank()) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                    return new InvalidCommand();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                if (tokens[0].toLowerCase().equals(\"event\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                    return new AddCommand(CommandType.EVENT, subTokens[0], subTokens[1]);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                    return new AddCommand(CommandType.DEADLINE, subTokens[0], subTokens[1]);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                if (tokens.length !\u003d 2 || tokens[1].contains(\" \")) {  return new InvalidCommand();  }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                String keyword \u003d tokens[1];"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                return new FindCommand(keyword);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                return new ByeCommand();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        return new InvalidCommand();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "modakshantanu": 91
    }
  },
  {
    "path": "src/main/java/duke/StorageHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import duke.Tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import java.nio.file.StandardOpenOption;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": " * Handles the storing of data in a text file"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "public class StorageHandler {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    private String path;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * @param path The path + name of the text file to store the data"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    StorageHandler(String path) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        this.path \u003d path;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        file \u003d new File(path);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * get the data stored in the text file"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * @return An ArrayList containing all the tasks"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public ArrayList\u003cTask\u003e getData() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        ArrayList\u003cTask\u003e array \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            Scanner scanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                String data \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                if (data.isBlank()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                array.add(Task.parseStorageString(data));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            System.out.println(\"An error occurred.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        return array;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * Saves the data passed into the text file"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * Overwrites and old data in the text file"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * @param data The ArrayList of tasks to be saved"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public void saveData(ArrayList\u003cTask\u003e data) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            FileWriter writer \u003d new FileWriter(path);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            for (int i \u003d 0; i \u003c data.size(); i++) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                writer.write(data.get(i).toStorageString() + \"\\n\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        } catch (IOException e){"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            System.out.println(\"Error while writing file\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * Appends the new task data to the end of the text file"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * @param task The new task to be added"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            Files.write(Paths.get(path),task.toStorageString().getBytes(), StandardOpenOption.APPEND);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "modakshantanu": 94
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import duke.Tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": " * Handles storage of Tasks (in RAM) while the program is running"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * Adds t to the taskList"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * @param t new task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public void addTask(Task t) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        taskList.add(t);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * deletes task at the given index"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * @param index The index (must be a valid index)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * @return The deleted task"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public Task deleteTask(int index) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        return taskList.remove(index);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * @param word A single word without spaces to be matched with"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * @return The subset of taskList whose descriptions contain that word"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public ArrayList\u003cTask\u003e filterByKeyword(String word) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        ArrayList\u003cTask\u003e temp \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        for (Task task:taskList) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            String[] tokens \u003d task.toString().split(\" \");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            for (String token: tokens) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                if (token.equalsIgnoreCase(word)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                    temp.add(task);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * Same as filterByKeyword, but returns an Array of Strings in a suitable format for output"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public String[] filterToStringArray(String word) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        ArrayList\u003cString\u003e temp \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            Task task \u003d taskList.get(i);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            String[] tokens \u003d task.toString().split(\" \");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            for (String token: tokens) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                if (token.equalsIgnoreCase(word) || word.isBlank()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                    temp.add(i+1 + \". \" + task.toString());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        return temp.toArray(new String[0]);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * Sets isCompleted for one element in taskList"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * @param index The index of the taskList element set to be completed"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * @param isCompleted Whether or not the task is completed"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public void setCompleted(int index, boolean isCompleted) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        taskList.get(index).setCompleted(isCompleted);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * @return size of taskList"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * @param index index of the required element"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * @return The element of taskList at that index"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public Task getByIndex(int index) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * @return the entire taskList"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * @param taskList the value that taskList is set to"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public void setTaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "modakshantanu": 109
    }
  },
  {
    "path": "src/main/java/duke/Tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "package duke.Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    private String dueDateString \u003d \"\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    private Date dueDate \u003d null;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public Deadline(String description, String dueDate) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        this.dueDateString \u003d dueDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        this.dueDate \u003d parseDateString(dueDateString);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by: \" + this.dueDateString + \")\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public String toStorageString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        return \"D|\" + super.toStorageString() + \"|\" + this.dueDateString;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "modakshantanu": 25
    }
  },
  {
    "path": "src/main/java/duke/Tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "package duke.Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    private String dueDateString \u003d \"\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    private Date dueDate \u003d null; // Used if the date given is in date format"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public Event(String description, String dueDate) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        this.dueDateString \u003d dueDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        this.dueDate \u003d Task.parseDateString(dueDateString);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at: \" + this.dueDateString + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public String toStorageString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        return \"E|\" + super.toStorageString() + \"|\" + this.dueDateString;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "modakshantanu": 25
    }
  },
  {
    "path": "src/main/java/duke/Tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "package duke.Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": " * Parent class of all types of Tasks stored in the task list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    protected String description \u003d \"\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    protected boolean isCompleted \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    Task(String description) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * Converts a line from the text storage file to the correct task object"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * @param s The line in the storage file"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * @return The correct Task/child class object for that line"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public static Task parseStorageString(String s) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        String[] tokens \u003d s.split(\"\\\\|\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        if (tokens.length !\u003d 3 \u0026\u0026 tokens.length !\u003d 4) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            System.out.println(\"File Handling Errrr\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            return  new Task(\"ERROR\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        Task temp;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        switch (tokens[0]) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                temp \u003d new Todo(tokens[2]);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                temp \u003d new Event(tokens[2], tokens[3]);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                temp \u003d new Deadline(tokens[2], tokens[3]);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                System.out.println(\"File handling errorrr\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                return new Task(\"Err\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        temp.setCompleted(tokens[1].equals(\"1\"));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * @param dateString The string inputted by the user as a date"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * @return The Date object"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    static Date parseDateString(String dateString) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        String[] formats \u003d {\"d/M/y HHmm\"};"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        for (String format : formats) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                return new SimpleDateFormat(format).parse(dateString);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            } catch(ParseException ignored) {}"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * @return A string representation of the Task for display to the user"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        String message \u003d description;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        if (isCompleted) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            message \u003d \"[✓] \" + message;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            message \u003d \"[✗] \" + message;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public void setCompleted(boolean completed) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        isCompleted \u003d completed;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * @return A string representation of the Task for putting in the storage file"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public String toStorageString() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        return (isCompleted?\"1\":\"0\") + \"|\" + description;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "modakshantanu": 99
    }
  },
  {
    "path": "src/main/java/duke/Tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "package duke.Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "public class Todo extends Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public String toStorageString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        return \"T|\" + super.toStorageString();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "modakshantanu": 18
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": " * Handles printing output to the user"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    private final String horizLine \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * Prints a single horizontal line"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public void printHorizLine() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        System.out.println(horizLine);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * Prints one of more strings between horizontal lines"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * @param strings Variable number of strings / String array"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public void printLines(String ...strings) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        System.out.println(horizLine);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        for (String s: strings) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            System.out.println(s);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        System.out.println(horizLine);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * Same as printLines, without horizontal Lines at the top and bottom"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public void printUnformattedLines(String ...strings) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        for (String s: strings) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            System.out.println(s);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     * Print the welcome message"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public void printWelcome() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "modakshantanu": 53
    }
  },
  {
    "path": "src/test/java/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "modakshantanu": 10
    }
  },
  {
    "path": "src/test/java/duke/Tasks/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "package duke.Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public void basicTodoTest() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        Task t \u003d new Task(\"Foo Bar\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        assertEquals(\"[✗] \" + \"Foo Bar\", t.toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        t.setCompleted(true);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        assertEquals(\"[✓] \" + \"Foo Bar\", t.toString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "modakshantanu": 21
    }
  }
]

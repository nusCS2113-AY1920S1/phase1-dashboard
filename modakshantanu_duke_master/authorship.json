[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "sourceSets.main.java.srcDirs \u003d [\u0027src\u0027]"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    mainClassName \u003d \"main.java.Duke\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "modakshantanu": 16,
      "-": 14
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    private String dueDateString \u003d \"\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    private Date dueDate \u003d null;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    Deadline(String description,String dueDate) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        this.dueDateString \u003d dueDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        this.dueDate \u003d Task.parseDateString(dueDateString);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by: \" + this.dueDateString + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public String toStorageString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        return \"D|\" + super.toStorageString() + \"|\" + this.dueDateString;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "modakshantanu": 22
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import java.util.regex.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    private static final String horizontalLine \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    private static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    private static StorageHandler storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        storage \u003d new StorageHandler();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        taskList \u003d storage.getData();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            // remove all occurrences of | as it is a separator for file storage"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            input \u003d input.replace(\"|\",\"\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                printFormattedLine(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            } else if (input.startsWith(\"list\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                printList();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            } else if (input.startsWith(\"done\") || input.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                // parse the input string and get the index of the task that needs to be marked done"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                int doneIndex;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                    doneIndex \u003d  Integer.parseInt(input.substring(input.lastIndexOf(\" \") + 1)) - 1;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                    // Error if the string after \"done\" is not an integer"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                    printFormattedLine(\"That task doesn\u0027t exist\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                // error handling if the index is not in the array"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                if (doneIndex \u003c 0 || doneIndex \u003e\u003d taskList.size()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                    printFormattedLine(\"That task doesn\u0027t exist\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                if (input.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                    removeTask(doneIndex);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                taskList.get(doneIndex).setCompleted(true);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                System.out.println(taskList.get(doneIndex).toString());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            } else if (input.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                String desc \u003d input.substring(4);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                if (desc.isBlank()) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                    printFormattedLine(\"Todo cannot be empty\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                addItem(new Todo(desc));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            } else if (input.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                String temp  \u003d input.substring(8);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                String[] tokens \u003d temp.split(\"/by\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                if (tokens.length !\u003d 2 || tokens[0].isBlank() || tokens[1].isBlank()) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                    System.out.println(\"Invalid format, use \\\"deadline \u003cDescription\u003e /by \u003cDate|dd/MM/yyyy hhmm\u003e\\\"\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                addItem(new Deadline(tokens[0],tokens[1]));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            } else if (input.startsWith(\"event\") ) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                String temp  \u003d input.substring(5);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                String[] tokens \u003d temp.split(\"/at\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                if (tokens.length !\u003d 2 || tokens[0].isBlank() || tokens[1].isBlank()) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                    System.out.println(\"Invalid format, use \\\"event \u003cDescription\u003e /at \u003cDate|dd/MM/yyyy hhmm\u003e\\\"\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                addItem(new Event(tokens[0],tokens[1]));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            }  else { // only add non-empty strings"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                System.out.println(\"Invalid command\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    // Prints one String between 2 horizontal Lines"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    private static void printFormattedLine(String line) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    private static void addItem(Task item) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        taskList.add(item);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        storage.addTask(item);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        printFormattedLine(\"added: \" + item);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    private static void removeTask(int index) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        taskList.remove(index);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        storage.saveData(taskList);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        printFormattedLine(\"Task \" + ++index + \" deleted\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    private static void printList() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        // Print each element of list with numbering"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            System.out.println(i+1 + \". \" + taskList.get(i).toString());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "modakshantanu": 126,
      "-": 11
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    private String dueDateString \u003d \"\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    private Date dueDate \u003d null; // Used if the date given is in date format"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    Event(String description, String dueDate) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        this.dueDateString \u003d dueDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        this.dueDate \u003d Task.parseDateString(dueDateString);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at: \" + this.dueDateString + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public String toStorageString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        return \"E|\" + super.toStorageString() + \"|\" + this.dueDateString;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "modakshantanu": 23
    }
  },
  {
    "path": "src/main/java/StorageHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import org.jetbrains.annotations.NotNull;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import java.nio.file.StandardOpenOption;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "public class StorageHandler {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    private String path \u003d \"data.txt\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    StorageHandler() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        file \u003d new File(path);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public ArrayList\u003cTask\u003e getData() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        ArrayList\u003cTask\u003e array \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            Scanner scanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                String data \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                if (data.isBlank()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                array.add(Task.parseStorageString(data));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            System.out.println(\"An error occurred.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        return array;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public void saveData(ArrayList\u003cTask\u003e data) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            FileWriter writer \u003d new FileWriter(path);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            for (int i \u003d 0; i \u003c data.size(); i++) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                writer.write(data.get(i).toStorageString() + \"\\n\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        } catch (IOException e){"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            System.out.println(\"Error while writing file\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    void addTask(Task task) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            Files.write(Paths.get(path),task.toStorageString().getBytes(), StandardOpenOption.APPEND);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "modakshantanu": 69
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    protected String description \u003d \"\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    protected boolean isCompleted \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    Task(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public static Task parseStorageString(String s) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        String[] tokens \u003d s.split(\"\\\\|\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        if (tokens.length !\u003d 3 \u0026\u0026 tokens.length !\u003d 4) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            System.out.println(\"File Handling Errrr\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            return  new Task(\"ERROR\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        Task temp;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        switch (tokens[0]) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                temp \u003d new Todo(tokens[2]);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                temp \u003d new Event(tokens[2], tokens[3]);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                temp \u003d new Deadline(tokens[2], tokens[3]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                System.out.println(\"File handling errorrr\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                return new Task(\"Err\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        temp.setCompleted(tokens[1].equals(\"1\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    static Date parseDateString(String dateString) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        String[] formats \u003d {\"d/M/y HHmm\"};"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        for (String format : formats) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "                return new SimpleDateFormat(format).parse(dateString);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            } catch(ParseException ignored) {}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        String message \u003d description;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        if (isCompleted) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            message \u003d \"[✓] \" + message;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "            message \u003d \"[✗] \" + message;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public void setCompleted(boolean completed) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        isCompleted \u003d completed;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public String toStorageString() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        return (isCompleted?\"1\":\"0\") + \"|\" + description;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "modakshantanu": 76
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "public class Todo extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    Todo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    public String toStorageString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "        return \"T|\" + super.toStorageString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "modakshantanu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "modakshantanu": 16
    }
  }
]

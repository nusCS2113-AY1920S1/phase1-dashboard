[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "group \u0027com.nwjbrandon.duke\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    mainClassName \u003d \"com.nwjbrandon.duke.Duke\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    testImplementation(\u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "test {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    testLogging.showStandardStreams \u003d true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 27,
      "-": 18
    }
  },
  {
    "path": "src/main/java/com/nwjbrandon/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "package com.nwjbrandon.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.nwjbrandon.duke.services.TaskManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.nwjbrandon.duke.services.interfaces.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Main application starts running here."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param args - input of array of strings from console"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public static void main(String[] args) throws Exception {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Ui.greetingMessage();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        String pwd \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        TaskManager taskManager \u003d new TaskManager();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        String filePath \u003d pwd + \"/data/duke.txt\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        taskManager.loadData(filePath);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        while (taskManager.run()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        taskManager.saveData(filePath);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Ui.farewellMessage();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 27,
      "-": 2
    }
  },
  {
    "path": "src/main/java/com/nwjbrandon/duke/constants/TaskCommands.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "package com.nwjbrandon.duke.constants;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "public enum TaskCommands {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    LIST(\"list\"),"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    DONE(\"done\"),"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    TODO(\"todo\"),"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    EVENT(\"event\"),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    DEADLINE(\"deadline\"),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    DELETE(\"delete\"),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    FIND(\"find\"),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    BYE(\"bye\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Name of the tasks commands."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private final String name;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Create commands."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param name name of the commands."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    TaskCommands(String name) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Return command in string."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @return command in string."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @Override public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 35
    }
  },
  {
    "path": "src/main/java/com/nwjbrandon/duke/exceptions/DukeEmptyCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "package com.nwjbrandon.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.nwjbrandon.duke.services.interfaces.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "public class DukeEmptyCommandException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Error message for empty command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private String errorMessage \u003d \"☹ OOPS!!! The description of a %s cannot be empty.\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Create error exception for empty command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param taskName name of command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public DukeEmptyCommandException(String taskName) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        errorMessage \u003d String.format(errorMessage, taskName);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Show the error message for empty command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public void showError() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Ui.showError(errorMessage);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 28
    }
  },
  {
    "path": "src/main/java/com/nwjbrandon/duke/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "package com.nwjbrandon.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.nwjbrandon.duke.services.interfaces.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Error message for general command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private String errorMessage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    DukeException() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Create error exception for general command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param errorMessage name of command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Show the error message for general command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public void showError() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Ui.showError(errorMessage);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 30
    }
  },
  {
    "path": "src/main/java/com/nwjbrandon/duke/exceptions/DukeOutOfBoundException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "package com.nwjbrandon.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.nwjbrandon.duke.services.interfaces.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "public class DukeOutOfBoundException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Error message for out of bound command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public DukeOutOfBoundException() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Show the error message for out of bound command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public void showError() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        String errorMessage \u003d \"☹ OOPS!!! I\u0027m cannot find the task.\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Ui.showError(errorMessage);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 22
    }
  },
  {
    "path": "src/main/java/com/nwjbrandon/duke/exceptions/DukeTypeConversionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "package com.nwjbrandon.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.nwjbrandon.duke.services.interfaces.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "public class DukeTypeConversionException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Error message for type conversion command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public DukeTypeConversionException() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Show the error message for type conversion command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public void showError() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        String errorMessage \u003d \"☹ OOPS!!! Cannot convert types.\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Ui.showError(errorMessage);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 22
    }
  },
  {
    "path": "src/main/java/com/nwjbrandon/duke/exceptions/DukeWrongCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "package com.nwjbrandon.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.nwjbrandon.duke.services.interfaces.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "public class DukeWrongCommandException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Error message for wrong command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public DukeWrongCommandException() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Show the error message for wrong command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public void showError() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        String errorMessage \u003d \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Ui.showError(errorMessage);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 21
    }
  },
  {
    "path": "src/main/java/com/nwjbrandon/duke/services/TaskManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "package com.nwjbrandon.duke.services;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.nwjbrandon.duke.constants.TaskCommands;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.nwjbrandon.duke.services.commands.AddCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.nwjbrandon.duke.services.commands.DoneCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.nwjbrandon.duke.services.commands.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.nwjbrandon.duke.services.commands.SearchCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.nwjbrandon.duke.services.tasks.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.nwjbrandon.duke.services.tasks.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.nwjbrandon.duke.services.tasks.Deadlines;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.nwjbrandon.duke.services.tasks.Todos;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.nwjbrandon.duke.services.tasks.Events;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.nwjbrandon.duke.services.storage.Storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.nwjbrandon.duke.services.interfaces.Ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.nwjbrandon.duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.nwjbrandon.duke.exceptions.DukeWrongCommandException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.nwjbrandon.duke.exceptions.DukeTypeConversionException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.nwjbrandon.duke.exceptions.DukeOutOfBoundException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.nwjbrandon.duke.exceptions.DukeEmptyCommandException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "public class TaskManager {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Container for list of task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private TaskList tasksList;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Create task manager."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public TaskManager() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        tasksList \u003d new TaskList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Load tasks from file input."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param taskDetails information of tasks from file input."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @throws DukeEmptyCommandException empty command."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private void loadTasksList(String taskDetails) throws DukeEmptyCommandException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        String[] details \u003d taskDetails.split(\"\\\\s\\\\|\\\\s\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        if (details[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            task \u003d new Todos(details, tasksList.numberOfTasks());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        } else if (details[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            task \u003d new Deadlines(details, tasksList.numberOfTasks());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            task \u003d new Events(details, tasksList.numberOfTasks());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        if (details[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            task.setDoneStatus(true);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        tasksList.addTask(task);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Load data from file."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param filePath file path."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @throws FileNotFoundException file not found."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @throws DukeEmptyCommandException empty command."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public void loadData(String filePath) throws FileNotFoundException, DukeEmptyCommandException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        ArrayList\u003cString\u003e inputList \u003d Storage.loadData(filePath);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        for (String taskDetails: inputList) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            loadTasksList(taskDetails);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        showTasksList();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Format data to save."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @return data to save"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private String saveTaskList() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        for (Task task : tasksList.getTasksList()) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            if (task instanceof Todos) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                output.append(\"T\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            } else if (task instanceof Deadlines) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                output.append(\"D\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                output.append(\"E\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            output.append(\" | \").append(task.getIsDoneStatus() ? \"1\" : \"0\").append(\" | \").append(task.getTaskName());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            if (!(task instanceof Todos)) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                output.append(\" | \").append(task.getBy());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            output.append(\"\\n\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Save data to file."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param filePath file path."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @throws IOException IO error."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public void saveData(String filePath) throws IOException {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Storage.saveData(filePath, this.saveTaskList());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Show the list of tasks."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private void showTasksList() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Ui.showTasksList(tasksList);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Run the application."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @return whether the program is done"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public boolean run() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            String userInput \u003d Ui.readInput();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            int size \u003d tasksList.numberOfTasks();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            if (userInput.equals(TaskCommands.LIST.toString())) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                this.showTasksList();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            } else if (userInput.startsWith(TaskCommands.DONE.toString())) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                DoneCommand c \u003d new DoneCommand(userInput, TaskCommands.DONE.toString(), size);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                tasksList.markDone(c.getTaskIndex());"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            } else if (userInput.startsWith(TaskCommands.TODO.toString())) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                AddCommand c \u003d new AddCommand(userInput, TaskCommands.TODO.toString(), size + 1);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                tasksList.addTask(c.setTask());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            } else if (userInput.startsWith(TaskCommands.EVENT.toString())) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                AddCommand c \u003d new AddCommand(userInput, TaskCommands.EVENT.toString(), size + 1);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                tasksList.addTask(c.setTask());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            } else if (userInput.startsWith(TaskCommands.DEADLINE.toString())) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                AddCommand c \u003d new AddCommand(userInput, TaskCommands.DEADLINE.toString(), size + 1);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                tasksList.addTask(c.setTask());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            } else if (userInput.startsWith(TaskCommands.DELETE.toString())) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                DeleteCommand c \u003d new DeleteCommand(userInput, TaskCommands.DELETE.toString(), size);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                tasksList.removeTask(c.getTaskIndex());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            } else if (userInput.startsWith(TaskCommands.FIND.toString())) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                SearchCommand c \u003d new SearchCommand(userInput, TaskCommands.FIND.toString());"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                tasksList.searchTask(c.getTaskDescription());"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            } else if (userInput.equals(TaskCommands.BYE.toString())) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                throw new DukeWrongCommandException();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        } catch (DukeWrongCommandException e) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            e.showError();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        } catch (DukeOutOfBoundException e) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            e.showError();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        } catch (DukeEmptyCommandException e) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            e.showError();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        } catch (DukeTypeConversionException e) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            e.showError();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            DukeException err \u003d new DukeException(e.toString());"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            err.showError();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 161
    }
  },
  {
    "path": "src/main/java/com/nwjbrandon/duke/services/commands/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "package com.nwjbrandon.duke.services.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.nwjbrandon.duke.constants.TaskCommands;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.nwjbrandon.duke.exceptions.DukeEmptyCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.nwjbrandon.duke.exceptions.DukeWrongCommandException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.nwjbrandon.duke.services.tasks.Deadlines;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.nwjbrandon.duke.services.tasks.Events;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.nwjbrandon.duke.services.tasks.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.nwjbrandon.duke.services.tasks.Todos;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.nwjbrandon.duke.services.validations.Parser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Description of task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private String taskDescription;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Number of tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private int size;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Type of command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Create add command."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param userInput input by user."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param command type of command."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param size number of tasks."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @throws DukeEmptyCommandException empty command."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public AddCommand(String userInput, String command, int size) throws DukeEmptyCommandException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        this.taskDescription \u003d parseCommand(userInput, command);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        this.size \u003d size;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Create specific task."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @return specific task."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @throws DukeWrongCommandException wrong command."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public Task setTask() throws DukeWrongCommandException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        if (command.equals(TaskCommands.TODO.toString())) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            return new Todos(taskDescription, size);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        } else if (command.equals(TaskCommands.DEADLINE.toString())) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            return new Deadlines(taskDescription, size);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        } else if (command.equals(TaskCommands.EVENT.toString())) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            return new Events(taskDescription, size);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            throw new DukeWrongCommandException();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Validate user input."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param userInput input by user."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param command type of command."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @return instruction in input."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @throws DukeEmptyCommandException empty command."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public String parseCommand(String userInput, String command) throws DukeEmptyCommandException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        return Parser.checkCommandInput(userInput, command);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 71
    }
  },
  {
    "path": "src/main/java/com/nwjbrandon/duke/services/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "package com.nwjbrandon.duke.services.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.nwjbrandon.duke.exceptions.DukeEmptyCommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "abstract class Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Create new command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    Command() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Validate user input."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param userInput input by user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param command type of command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @return instruction in input."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @throws DukeEmptyCommandException empty command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    abstract String parseCommand(String userInput, String command) throws DukeEmptyCommandException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 22
    }
  },
  {
    "path": "src/main/java/com/nwjbrandon/duke/services/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "package com.nwjbrandon.duke.services.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.nwjbrandon.duke.exceptions.DukeEmptyCommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.nwjbrandon.duke.exceptions.DukeOutOfBoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.nwjbrandon.duke.exceptions.DukeTypeConversionException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.nwjbrandon.duke.services.validations.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Index of task in string."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private String taskIndexString;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Number of tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private int size;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Create delete command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param userInput input by user."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param command type of command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param size number of tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @throws DukeEmptyCommandException empty command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public DeleteCommand(String userInput, String command, int size) throws DukeEmptyCommandException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        this.size \u003d size;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        this.taskIndexString \u003d parseCommand(userInput, command);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Get task index."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @return task index."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @throws DukeOutOfBoundException index is not within given list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @throws DukeTypeConversionException input cannot convert to integer."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public int getTaskIndex() throws DukeOutOfBoundException, DukeTypeConversionException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Integer taskIndex \u003d Parser.checkStringToIntegerConversion(taskIndexString);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        return Parser.checkIndex(taskIndex - 1, size);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Validate user input."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param userInput input by user."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param command type of command."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @return instruction in input."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @throws DukeEmptyCommandException empty command."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public String parseCommand(String userInput, String command) throws DukeEmptyCommandException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        return Parser.checkCommandInput(userInput, command);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 54
    }
  },
  {
    "path": "src/main/java/com/nwjbrandon/duke/services/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "package com.nwjbrandon.duke.services.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.nwjbrandon.duke.exceptions.DukeEmptyCommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.nwjbrandon.duke.exceptions.DukeOutOfBoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.nwjbrandon.duke.exceptions.DukeTypeConversionException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.nwjbrandon.duke.services.validations.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Index of task in string."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private String taskIndexString;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Number of tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private int size;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Create done command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param userInput input by user."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param command type of command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param size number of tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @throws DukeEmptyCommandException empty command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public DoneCommand(String userInput, String command, int size) throws DukeEmptyCommandException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        this.size \u003d size;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        this.taskIndexString \u003d parseCommand(userInput, command);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Get task index."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @return task index."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @throws DukeOutOfBoundException index is not within given list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @throws DukeTypeConversionException input cannot convert into integer."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public int getTaskIndex() throws DukeOutOfBoundException, DukeTypeConversionException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Integer taskIndex \u003d Parser.checkStringToIntegerConversion(taskIndexString);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        return Parser.checkIndex(taskIndex - 1, size);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Validate user input."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param userInput input by user."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param command type of command."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @return instruction in input."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @throws DukeEmptyCommandException empty command."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public String parseCommand(String userInput, String command) throws DukeEmptyCommandException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        return Parser.checkCommandInput(userInput, command);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 55
    }
  },
  {
    "path": "src/main/java/com/nwjbrandon/duke/services/commands/SearchCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "package com.nwjbrandon.duke.services.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.nwjbrandon.duke.exceptions.DukeEmptyCommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.nwjbrandon.duke.services.validations.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "public class SearchCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Description of task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private String taskDescription;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Create search command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param userInput input by user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param command type of command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @throws DukeEmptyCommandException empty command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public SearchCommand(String userInput, String command) throws DukeEmptyCommandException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        this.taskDescription \u003d parseCommand(userInput, command);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Get description of task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @return description of task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public String getTaskDescription() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        return taskDescription;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Validate user input."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param userInput input by user."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param command type of command."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @return instruction in input."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @throws DukeEmptyCommandException empty command."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public String parseCommand(String userInput, String command) throws DukeEmptyCommandException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        return Parser.checkCommandInput(userInput, command);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 43
    }
  },
  {
    "path": "src/main/java/com/nwjbrandon/duke/services/interfaces/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "package com.nwjbrandon.duke.services.interfaces;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.nwjbrandon.duke.services.tasks.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Divider for messages."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private static String divider \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Create user interface."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Read input."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @return input."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public static String readInput() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Scanner scan \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        return scan.nextLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Show divider."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private static void printDivider() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        System.out.println(\"\\t\" + Ui.divider);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Show greeting message."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public static void greetingMessage() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        String output \u003d \"\\t Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                + \"\\t What can I do for you?\\n\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Ui.printDivider();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        System.out.print(output);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Ui.printDivider();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Show farewell message."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public static void farewellMessage() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        String output \u003d \"\\t Bye. Hope to see you again soon!\\n\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Ui.printDivider();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        System.out.print(output);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Ui.printDivider();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Show list of tasks."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param tasksList list of tasks."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public static void showTasksList(TaskList tasksList) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        int size \u003d tasksList.numberOfTasks();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        StringBuilder output \u003d new StringBuilder(\"\\t Here are the tasks in your lists:\\n\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        for (int i \u003d 0; i \u003c size; i++) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            output.append(\"\\t \").append(i + 1).append(\".\")"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                    .append(tasksList.getTask(i).toTaskDescriptionString())"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                    .append(\"\\n\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Ui.printDivider();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        System.out.print(output);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Ui.printDivider();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Show add task message."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param taskDescription description of task."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param numberOfTasks number of tasks."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public static void showAddTaskString(String taskDescription, int numberOfTasks) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        String output \u003d  \"\\t Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                + \"\\t   \" + taskDescription + \"\\n\""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                + \"\\t Now you have \" + numberOfTasks + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Ui.printDivider();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        System.out.print(output);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Ui.printDivider();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Show remove task message."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param taskDescription description of task."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param size number of task."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public static void showRemoveTaskString(String taskDescription, int size) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        String output \u003d  \"\\t Noted. I\u0027ve removed this task:\\n\""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                + \"\\t   \" + taskDescription + \"\\n\""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                + \"\\t Now you have \" + (size - 1) + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Ui.printDivider();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        System.out.print(output);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Ui.printDivider();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Show added task message."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param command command."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param taskDescription description of task."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public static void showTaskActionString(String command, String taskDescription) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Ui.printDivider();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        System.out.print(command + taskDescription + \"\\n\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Ui.printDivider();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Show the list of tasks by keywords."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public static void showSearchTask(TaskList tasksList, String keyword) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        StringBuilder output \u003d new StringBuilder(\"\\t Here are the matching tasks in your list:\\n\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        int size \u003d tasksList.numberOfTasks();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        for (int i \u003d 0; i \u003c size; i++) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            if (tasksList.getTask(i).getTaskName().contains(keyword)) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                output.append(\"\\t \").append(count).append(\".\").append(tasksList.getTask(i)"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                        .toTaskDescriptionString()).append(\"\\n\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Ui.printDivider();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        System.out.print(output);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Ui.printDivider();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Show set status message."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param taskDescription description of task."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public static void showSetDoneStatus(String taskDescription) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        String output \u003d \"\\t Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                + \"\\t \" + taskDescription + \"\\n\";"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Ui.printDivider();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        System.out.print(output);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Ui.printDivider();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Show error message."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param errorMessage error message."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public static void showError(String errorMessage) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Ui.printDivider();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        System.out.print(\"\\t \" + errorMessage + \"\\n\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Ui.printDivider();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 154
    }
  },
  {
    "path": "src/main/java/com/nwjbrandon/duke/services/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "package com.nwjbrandon.duke.services.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Create storage to IO."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Load data from file."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param filePath path to file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @return arraylist of string of data."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @throws FileNotFoundException file not found"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public static ArrayList\u003cString\u003e loadData(String filePath) throws FileNotFoundException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Scanner scan \u003d new Scanner(file);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        ArrayList\u003cString\u003e inputList \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        while (scan.hasNextLine()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            String taskDetails \u003d scan.nextLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            inputList.add(taskDetails);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        return inputList;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Save data into file."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param filePath path to file."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param data data in string."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @throws IOException IO error."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public static void saveData(String filePath, String data) throws IOException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        fw.write(data);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 47
    }
  },
  {
    "path": "src/main/java/com/nwjbrandon/duke/services/tasks/Deadlines.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "package com.nwjbrandon.duke.services.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.nwjbrandon.duke.services.interfaces.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "public class Deadlines extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Create deadline task from command input."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param taskName task name."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param numberOfTasks number of tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public Deadlines(String taskName, int numberOfTasks) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        super(taskName, numberOfTasks);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Create deadline task from file input."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param taskDetails task information from file input."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param numberOfTasks number of tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public Deadlines(String[] taskDetails, int numberOfTasks) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        this(taskDetails[2] + \" /by \" + taskDetails[3], numberOfTasks);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Format name of task before creating task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param taskName task name."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @return formatted task name."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public String formatTaskName(String taskName) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        String[] parts \u003d taskName.split(\" /by \");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            this.taskName \u003d parts[0];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            this.by \u003d parts[1];"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            return parts[0] + \" (by: \" + dateFormatter(parts[1]) + \")\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            this.by \u003d parts[1];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            return parts[0] + \" (by: \" + parts[1] + \")\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Add task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param size number of tasks."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public void addTaskString(int size) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Ui.showAddTaskString(\"[D][\" + this.getStatusIcon() + \"] \" + this.getTaskDescription(), size);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Remove task."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param size number of tasks."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public void removeTaskString(int size) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Ui.showRemoveTaskString(\"[D][\" + this.getStatusIcon() + \"] \" + this.getTaskDescription(), size);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Get task description."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @return description of task."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public String toTaskDescriptionString() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        return \"[D][\" + this.getStatusIcon() + \"] \" + this.getTaskDescription();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "}"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 74
    }
  },
  {
    "path": "src/main/java/com/nwjbrandon/duke/services/tasks/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "package com.nwjbrandon.duke.services.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.nwjbrandon.duke.services.interfaces.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "public class Events extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Create event task from command line."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param taskName task name."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param numberOfTasks number of tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public Events(String taskName, int numberOfTasks) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        super(taskName, numberOfTasks);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Create event task from file input."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param taskDetails task information from file input."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param numberOfTasks number of tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public Events(String[] taskDetails, int numberOfTasks) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        this(taskDetails[2] + \" /at \" + taskDetails[3], numberOfTasks);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Format name of task before creating task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param taskName task name."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @return formatted task name."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public String formatTaskName(String taskName) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        String[] parts \u003d taskName.split(\" /at \");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            this.taskName \u003d parts[0];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            this.by \u003d parts[1];"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            return parts[0] + \" (at: \" + dateFormatter(parts[1]) + \")\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            this.by \u003d parts[1];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            return parts[0] + \" (at: \" + parts[1] + \")\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Add task."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param size number of tasks."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public void addTaskString(int size) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Ui.showAddTaskString(\"[E][\" + this.getStatusIcon() + \"] \" + this.getTaskDescription(), size);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Remove task."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param size number of tasks."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public void removeTaskString(int size) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Ui.showRemoveTaskString(\"[E][\" + this.getStatusIcon() + \"] \" + this.getTaskDescription(), size);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Get task description."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @return description of task."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public String toTaskDescriptionString() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        return \"[E][\" + this.getStatusIcon() + \"] \" + this.getTaskDescription();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "}"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 75
    }
  },
  {
    "path": "src/main/java/com/nwjbrandon/duke/services/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "package com.nwjbrandon.duke.services.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.nwjbrandon.duke.services.interfaces.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Task name."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    String taskName;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Task done status."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Task date."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    String by \u003d \"\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Task name and date."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private String taskDescription \u003d \"\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Create task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param taskDescription description of task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param numberOfTasks number of tasks."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    protected Task(String taskDescription, int numberOfTasks) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        this(taskDescription, numberOfTasks, false);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Create task."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param taskDescription description of tasks."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param numberOfTasks number of tasks."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param isDone done status."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private Task(String taskDescription, int numberOfTasks, boolean isDone) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        this.taskDescription \u003d this.formatTaskName(taskDescription);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        this.addTaskString(numberOfTasks);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Format task name."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param taskDescription description of task."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @return formatted task name."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public String formatTaskName(String taskDescription) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        return taskDescription;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Get the task date."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @return task date."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Get the task description."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @return task description."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    String getTaskDescription() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        return this.taskDescription;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Get the task name."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @return task name."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public String getTaskName() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        return taskName;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Get the done status."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @return done status."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public boolean getIsDoneStatus() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Set the done status."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param isDone done status."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public void setDoneStatus(boolean isDone) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        this.showSetDoneStatus();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Show the set done status message."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private void showSetDoneStatus() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Ui.showSetDoneStatus(this.toTaskDescriptionString());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Get icon for done status."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @return icon for done status."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    String getStatusIcon() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        return (isDone ? \"✓\" : \"✗\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Get the task description."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @return task description."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public String toTaskDescriptionString() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.getTaskDescription();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Format date from file input."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param originalDate representation of date from file input."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @return representation of date in terminal."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @throws ParseException incorrect format of date."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    String dateFormatter(String originalDate) throws ParseException {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        String pattern \u003d \"dd/MM/yyyy hhmm\";"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(pattern);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Date date \u003d formatter.parse(originalDate);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        pattern \u003d \"d\";"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        formatter \u003d new SimpleDateFormat(pattern);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        final String a \u003d formatter.format(date);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        pattern \u003d \"MMMM yyyy, h\";"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        formatter \u003d new SimpleDateFormat(pattern);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        final String b \u003d formatter.format(date);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        pattern \u003d \"a\";"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        formatter \u003d new SimpleDateFormat(pattern);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        final String c \u003d formatter.format(date).toLowerCase();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        String symbol \u003d \"\";"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        switch (a) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        case \"1\":"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            symbol \u003d \"st\";"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        case \"2\":"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            symbol \u003d \"nd\";"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        case \"3\":"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            symbol \u003d \"rd\";"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            symbol \u003d \"th\";"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        return \"\" + a + symbol + \" of \" + b + c;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Add task."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param size number of tasks."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public void addTaskString(int size) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Ui.showTaskActionString(\"\\t added: \", this.getTaskDescription());"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Remove task."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param size number of tasks."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public void removeTaskString(int size) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Ui.showTaskActionString(\"\\t removed: \", this.getTaskDescription());"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 182
    }
  },
  {
    "path": "src/main/java/com/nwjbrandon/duke/services/tasks/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "package com.nwjbrandon.duke.services.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.nwjbrandon.duke.services.interfaces.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Container for tasks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private ArrayList\u003cTask\u003e tasksList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Create list of tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        tasksList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Get the list of tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @return list of tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasksList() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        return tasksList;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Add task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param task task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        tasksList.add(task);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Remove task."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param taskIndex index of task."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public void removeTask(int taskIndex) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        tasksList.get(taskIndex).removeTaskString(this.numberOfTasks());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        tasksList.remove(taskIndex);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Set task as done."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param taskIndex index of task."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public void markDone(int taskIndex) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        tasksList.get(taskIndex).setDoneStatus(true);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Get number of tasks."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @return number of tasks."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public int numberOfTasks() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        return tasksList.size();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Get task."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param taskIndex task index."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @return task."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public Task getTask(int taskIndex) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        return tasksList.get(taskIndex);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Get tasks by keywords."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param keyword keyword by input."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public void searchTask(String keyword) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Ui.showSearchTask(this, keyword);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 79
    }
  },
  {
    "path": "src/main/java/com/nwjbrandon/duke/services/tasks/Todos.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "package com.nwjbrandon.duke.services.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.nwjbrandon.duke.services.interfaces.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "public class Todos extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Create todos task from command line."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param taskName task name."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param numberOfTasks number of tasks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public Todos(String taskName, int numberOfTasks) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        super(taskName, numberOfTasks);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Create event task from file input."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param taskDetails task information from file input."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param numberOfTasks number of tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public Todos(String[] taskDetails, int numberOfTasks) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        this(taskDetails[2], numberOfTasks);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Format name of task before creating task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param taskName task name"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @return formatted task name."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public String formatTaskName(String taskName) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        return taskName;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Add task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param size number of tasks."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public void addTaskString(int size) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Ui.showAddTaskString(\"[T][\" + this.getStatusIcon() + \"] \" + this.getTaskDescription(), size);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Remove task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public void removeTaskString(int size) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Ui.showRemoveTaskString(\"[T][\" + this.getStatusIcon() + \"] \" + this.getTaskDescription(), size);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Get task description."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @return description of task."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public String toTaskDescriptionString() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        return \"[T][\" + this.getStatusIcon() + \"] \" + this.getTaskDescription();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 63
    }
  },
  {
    "path": "src/main/java/com/nwjbrandon/duke/services/validations/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "package com.nwjbrandon.duke.services.validations;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.nwjbrandon.duke.exceptions.DukeEmptyCommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.nwjbrandon.duke.exceptions.DukeOutOfBoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.nwjbrandon.duke.exceptions.DukeTypeConversionException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Check whether string can convert to integer."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param taskIndexString task index in string."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @return task index."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @throws DukeTypeConversionException type conversion error."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public static Integer checkStringToIntegerConversion(String taskIndexString) throws DukeTypeConversionException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            return Integer.parseInt(taskIndexString);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            throw new DukeTypeConversionException();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Check whether index is within list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param index task index."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param size number of tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @return task index."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @throws DukeOutOfBoundException index falls outside of list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public static Integer checkIndex(Integer index, int size) throws DukeOutOfBoundException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        if (size \u003c\u003d index || index \u003c 0) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            throw new DukeOutOfBoundException();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            return index;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Check whether the user input is blank."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @return string if no blanks found."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private static String checkBlanksInUserInput(String userInput, String command) throws DukeEmptyCommandException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        if (userInput.isBlank()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            throw new DukeEmptyCommandException(command);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            return userInput;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Check whether the instruction is found in the input."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param userInput input by user."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param command type of command."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @return instruction in input if found."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @throws DukeEmptyCommandException empty command."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private static String checkLengthOfCommandInput(String userInput, String command) throws DukeEmptyCommandException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            return userInput.substring(command.length() + 1);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "            throw new DukeEmptyCommandException(command);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * Validates user input before creating task."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param userInput input by user."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @param command type of command."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @return instructions in input"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     * @throws DukeEmptyCommandException empty command."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public static String checkCommandInput(String userInput, String command) throws DukeEmptyCommandException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        return checkBlanksInUserInput(checkLengthOfCommandInput(userInput, command), command);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 76
    }
  },
  {
    "path": "src/test/java/com/nwjbrandon/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "package com.nwjbrandon.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "class DukeTest extends TestExtender {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    void testMainMethod() throws Exception {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        provideInput(\"bye\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Duke.main(new String[0]);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        String output \u003d getOutput();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        String expected \u003d \"\\t____________________________________________________________\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                        + \"\\t Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                        + \"\\t What can I do for you?\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                        + \"\\t____________________________________________________________\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                        + \"\\t____________________________________________________________\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                        + \"\\t Here are the tasks in your lists:\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                        + \"\\t____________________________________________________________\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                        + \"\\t____________________________________________________________\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                        + \"\\t Bye. Hope to see you again soon!\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                        + \"\\t____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        assertEquals(expected, output);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 26
    }
  },
  {
    "path": "src/test/java/com/nwjbrandon/duke/TestExtender.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "package com.nwjbrandon.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.io.ByteArrayInputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import org.junit.jupiter.api.AfterEach;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "// https://stackoverflow.com/questions/1647907/junit-how-to-simulate-system-in-testing"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "public class TestExtender {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private final InputStream systemIn \u003d System.in;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private final PrintStream systemOut \u003d System.out;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    private ByteArrayOutputStream testOut;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public void setUpOutput() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        testOut \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        System.setOut(new PrintStream(testOut));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    protected void provideInput(String data) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        ByteArrayInputStream testIn \u003d new ByteArrayInputStream(data.getBytes());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        System.setIn(testIn);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    protected String getOutput() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        return testOut.toString();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @AfterEach"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    public void restoreSystemInputOutput() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        System.setIn(systemIn);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        System.setOut(systemOut);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 39
    }
  },
  {
    "path": "src/test/java/com/nwjbrandon/duke/services/TaskManagerTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "package com.nwjbrandon.duke.services;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.nwjbrandon.duke.TestExtender;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "class TaskManagerTest extends TestExtender {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    void testTodo() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        final String testString \u003d \"todo borrow book\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        provideInput(testString);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        TaskManager taskManager \u003d new TaskManager();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        taskManager.run();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        String output \u003d getOutput();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        String expected \u003d \"\\t____________________________________________________________\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                        + \"\\t Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                        + \"\\t   [T][✗] borrow book\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                        + \"\\t Now you have 1 tasks in the list.\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                        + \"\\t____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        assertEquals(expected, output);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    void testBye() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        final String testString \u003d \"bye\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        provideInput(testString);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        TaskManager taskManager \u003d new TaskManager();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        boolean status \u003d taskManager.run();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        assertFalse(status);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 34
    }
  },
  {
    "path": "src/test/java/com/nwjbrandon/duke/services/tasks/DeadlinesTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "package com.nwjbrandon.duke.services.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.nwjbrandon.duke.TestExtender;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "class DeadlinesTest extends TestExtender {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    void testTodoIsoDate() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        new Deadlines(\"borrow book /by 2/2/2019 1900\", 1);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        String output \u003d getOutput();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        String expected \u003d \"\\t____________________________________________________________\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                        + \"\\t Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                        + \"\\t   [D][✗] borrow book (by: 2nd of February 2019, 7pm)\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                        + \"\\t Now you have 1 tasks in the list.\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                        + \"\\t____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        assertEquals(expected, output);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    void testTodo() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        new Deadlines(\"borrow book /by Sunday\", 1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        String output \u003d getOutput();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        String expected \u003d \"\\t____________________________________________________________\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                + \"\\t Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                + \"\\t   [D][✗] borrow book (by: Sunday)\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                + \"\\t Now you have 1 tasks in the list.\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                + \"\\t____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        assertEquals(expected, output);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    void testGetTaskName() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Deadlines task \u003d new Deadlines(\"borrow book /by Sunday\",1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        String taskName \u003d task.getTaskName();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        assertEquals(\"borrow book /by Sunday\", taskName);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    void testGetTaskNameIsoDate() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Deadlines task \u003d new Deadlines(\"borrow book /by 2/2/2019 1900\",1);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        String taskName \u003d task.getTaskName();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        assertEquals(\"borrow book\", taskName);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    void testGetIsDoneStatus() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Deadlines task \u003d new Deadlines(\"borrow book /by Sunday\", 1);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        boolean doneStatus \u003d task.getIsDoneStatus();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        assertFalse(doneStatus);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 56
    }
  },
  {
    "path": "src/test/java/com/nwjbrandon/duke/services/tasks/EventsTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "package com.nwjbrandon.duke.services.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.nwjbrandon.duke.TestExtender;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "class EventsTest extends TestExtender {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    void testTodoIsoDate() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        new Events(\"borrow book /at 2/2/2019 1900\", 1);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        String output \u003d getOutput();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        String expected \u003d \"\\t____________________________________________________________\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                        + \"\\t Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                        + \"\\t   [E][✗] borrow book (at: 2nd of February 2019, 7pm)\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                        + \"\\t Now you have 1 tasks in the list.\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                        + \"\\t____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        assertEquals(expected, output);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    void testTodo() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        new Events(\"borrow book /at Sunday\", 1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        String output \u003d getOutput();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        String expected \u003d \"\\t____________________________________________________________\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                + \"\\t Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                + \"\\t   [E][✗] borrow book (at: Sunday)\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                + \"\\t Now you have 1 tasks in the list.\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                + \"\\t____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        assertEquals(expected, output);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    void testGetTaskName() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Events task \u003d new Events(\"borrow book /at Sunday\",1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        String taskName \u003d task.getTaskName();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        assertEquals(\"borrow book /at Sunday\", taskName);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    void testGetTaskNameIsoDate() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Events task \u003d new Events(\"borrow book /at 2/2/2019 1900\",1);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        String taskName \u003d task.getTaskName();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        assertEquals(\"borrow book\", taskName);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    void testGetIsDoneStatus() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Events task \u003d new Events(\"borrow book /at Sunday\", 1);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        boolean doneStatus \u003d task.getIsDoneStatus();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        assertFalse(doneStatus);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 56
    }
  },
  {
    "path": "src/test/java/com/nwjbrandon/duke/services/tasks/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "package com.nwjbrandon.duke.services.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.nwjbrandon.duke.TestExtender;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNull;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "class TaskTest extends TestExtender {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    void testTask() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        new Task(\"borrow book\", 1);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        String output \u003d getOutput();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        String expected \u003d \"\\t____________________________________________________________\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                        + \"\\t added: borrow book\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                        + \"\\t____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        assertEquals(expected, output);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    void testTaskName() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Task task \u003d new Task(\"borrow book\", 1);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        String taskName \u003d task.getTaskName();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        assertNull(taskName);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    void testTaskStatus() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Task task \u003d new Task(\"added book\", 1);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        boolean doneStatus \u003d task.getIsDoneStatus();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        assertFalse(doneStatus);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    void testsetTaskDone() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Task task \u003d new Task(\"added book\", 1);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        boolean doneStatus \u003d task.getIsDoneStatus();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        assertFalse(doneStatus);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        task.setDoneStatus(true);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        doneStatus \u003d task.getIsDoneStatus();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        assertTrue(doneStatus);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        task.setDoneStatus(false);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        doneStatus \u003d task.getIsDoneStatus();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        assertFalse(doneStatus);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 49
    }
  },
  {
    "path": "src/test/java/com/nwjbrandon/duke/services/tasks/TodosTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "package com.nwjbrandon.duke.services.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import com.nwjbrandon.duke.TestExtender;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "class TodosTest extends TestExtender {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    void testTodo() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        new Todos(\"borrow book\", 1);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        String output \u003d getOutput();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        String expected \u003d \"\\t____________________________________________________________\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                        + \"\\t Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                        + \"\\t   [T][✗] borrow book\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                        + \"\\t Now you have 1 tasks in the list.\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "                        + \"\\t____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        assertEquals(expected, output);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    void testGetTaskName() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Todos task \u003d new Todos(\"borrow book\",1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        String taskName \u003d task.getTaskName();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        assertEquals(\"borrow book\", taskName);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    void testGetIsDoneStatus() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        Todos task \u003d new Todos(\"borrow book\", 1);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        boolean doneStatus \u003d task.getIsDoneStatus();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "        assertFalse(doneStatus);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nwjbrandon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nwjbrandon": 37
    }
  }
]

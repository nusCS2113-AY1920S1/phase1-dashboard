[
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "import models.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    protected Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    //private ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    private Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    public void printTasksByKeyword(String keyword) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        for (Task t : taskList.getTasks()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "            if (t.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                tasks.add(t);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "            throw new DukeException(\"No results with the keyword \u0027\" + keyword + \"\u0027 was found.\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        for (Task t: tasks){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "            ui.printAccordingTaskType(taskList.getTasks().indexOf(t), t);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    public void deleteTask(String input) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        String[] KeywordCheck \u003d input.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        int i \u003d Integer.parseInt(KeywordCheck[1]);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        i -\u003d 1; // reset to start at 0"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        if (input.equals(\"delete\")){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "            throw new DukeException(\"Please indicate models.Task Number you want to delete.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        else if (i \u003e taskList.getTasks().size() || i \u003c 0) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "            throw new DukeException(\"This models.Task Number does not exist.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        ui.printAccordingTaskType(i, taskList.getTasks().get(i));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        taskList.deleteTask(i);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        storage.save(taskList.getTasks());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        System.out.println(\"Now you have \" + taskList.getTasks().size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    public void setTaskDone(String input) throws DukeException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        String[] KeywordCheck \u003d input.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        int i \u003d Integer.parseInt(KeywordCheck[1]);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        i -\u003d 1;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        if (input.equals(\"done\")){"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "            throw new DukeException(\"Please indicate models.Task Number you want to have marked Done.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        else if (i \u003e taskList.getTasks().size() || i \u003c 0) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "            throw new DukeException(\"This models.Task Number does not exist.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        taskList.setTaskDone(i);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        storage.save(taskList.getTasks());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        ui.printAccordingTaskType(i, taskList.getTasks().get(i));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    public void addTask(String input) throws DukeException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        if (input.equals(\"todo\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "            throw new DukeException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        // process input into description"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        Task t \u003d new Task(input.substring(5));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        taskList.addTask(t);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        storage.save(taskList.getTasks());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        System.out.print(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        System.out.println(\"[T][\\u2718] \" + t.getDescription());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        System.out.println(\"Now you have \" + taskList.getTasks().size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    public void addDeadline(String input) throws DukeException {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        if (input.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "            throw new DukeException(\"The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        } else if (!input.contains(\"/by\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "            throw new DukeException(\"The deadline must be specified for a models.Deadline models.Task.\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        // process input into description and date"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        String[] KeywordCheck \u003d input.split(\"/\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        String dateString \u003d String.join(\"/\", Arrays.copyOfRange(KeywordCheck, 1, KeywordCheck.length));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        Date date \u003d Utilities.formatStringToDate(dateString.substring(3));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        //System.out.println(date);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        Deadline d \u003d new Deadline(KeywordCheck[0].substring(9), date);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        taskList.addTask(d);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        storage.save(taskList.getTasks());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        System.out.print(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        System.out.println(\"[D][\" + d.getStatusIcon() + \"] \" + d.getDescription() + \"(by: \" + ui.printDateToString(d.getDate()) + \")\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        System.out.println(\"Now you have \" + taskList.getTasks().size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    public void addEvent(String input) throws DukeException {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        if (input.equals(\"event\")) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "            throw new DukeException(\"The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        } else if (!input.contains(\"/at\")) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "            throw new DukeException(\"The date/time must be specified for an models.Event models.Task.\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        // process input into description and date"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        String[] KeywordCheck \u003d input.split(\"/\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        String dateString \u003d String.join(\"/\", Arrays.copyOfRange(KeywordCheck, 1, KeywordCheck.length));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        Date date \u003d Utilities.formatStringToDate(dateString.substring(3));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        Event e \u003d new Event(KeywordCheck[0].substring(6), date);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        taskList.addTask(e);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        storage.save(taskList.getTasks());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        System.out.print(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        System.out.println(\"[E][\" + e.getStatusIcon() + \"] \" + e.getDescription() + \"(at: \" + ui.printDateToString(e.getDate()) + \")\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        System.out.println(\"Now you have \" + taskList.getTasks().size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    public void run(){"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        ui.greet();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "            input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "            String[] KeywordCheck \u003d input.split(\"/\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "            String[] instruction \u003d KeywordCheck[0].split(\"\\\\s+\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "            switch (instruction[0]) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                case \"bye\":"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                    ui.exit();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                    ui.listTasks(taskList.getTasks());"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                        setTaskDone(input);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                    catch (DukeException errMsg) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                        System.out.println(errMsg.toString());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                        addTask(input);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                    } catch (DukeException errMsg) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                        System.out.println(errMsg.toString());"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                        addDeadline(input);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                    } catch (DukeException errMsg) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                        System.out.println(errMsg.toString());"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                        addEvent(input);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                    } catch (DukeException errMsg) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                        System.out.println(errMsg.toString());"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                        System.out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                        deleteTask(input);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                    catch (DukeException errMsg) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                        System.out.println(errMsg.toString());"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                case \"find\":"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                        System.out.println(\"Here are the matching tasks in your list: \");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                        String keyword \u003d input.substring(5);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                        printTasksByKeyword(keyword);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                    catch (DukeException errMsg) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                        System.out.println(errMsg.toString());"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                    System.out.println(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        // constructor"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        taskList \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        // constructor"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        taskList \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "debbiextan": 201,
      "-": 4
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "public class Main {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "debbiextan": 9
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "import models.Deadline;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "import models.Event;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "import models.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    final String FILEPATH \u003d \"./duke.csv\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        // constructor"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        // constructor"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        // FILEPATH \u003d filePath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    public void save(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        File file \u003d null;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        PrintWriter writer \u003d null;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "            file \u003d new File(FILEPATH);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "            if (file.createNewFile()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                System.out.printf(\"Save file created at %s.\\n\", FILEPATH);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "            writer \u003d new PrintWriter(file);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "            for (Task t : tasks) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                String type \u003d t.getType();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                 if (t instanceof Deadline) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                    Deadline d \u003d (Deadline) t;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                    String date \u003d Utilities.formatDateToString(d.getDate());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                    writer.printf(\"%s,%s,%s,%s\\n\", d.getType(), d.getDone(), d.getDescription(), date);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                } else if (t instanceof Event) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                    Event e \u003d (Event) t;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                    String date \u003d Utilities.formatDateToString(e.getDate());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                    writer.printf(\"%s,%s,%s,%s\\n\", e.getType(), e.getDone(), e.getDescription(), date);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                    writer.printf(\"%s,%s,%s\\n\", t.getType(), t.getDone(), t.getDescription());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        catch (FileNotFoundException fnfe) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "            System.out.printf(\"File at %s does not exist.\\n\", FILEPATH);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "            System.out.printf(\"Error writing to File at %s.\\n\", FILEPATH);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    public ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "            File file \u003d new File(FILEPATH);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(new FileReader(file));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "            while ((line \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                String[] list \u003d line.split(\",\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                if (list.length \u003c 3 || list.length \u003e 4) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                    System.out.println(\"Invalid CSV! Exiting...\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                    System.exit(0);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                    Task t \u003d new Task(list[2]);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                    boolean done \u003d Boolean.parseBoolean(list[1]);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                    if (list[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                        // To Do models.Task"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                        t.setDone(done);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                        tasks.add(t);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                    else if (list[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                        // models.Deadline models.Task"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                        Date date \u003d Utilities.formatStringToDate(list[3]);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                        Deadline d \u003d new Deadline(list[2], date);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                        d.setDone(done);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                        tasks.add(d);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                    else if (list[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                        // models.Event models.Task"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                        Date date \u003d Utilities.formatStringToDate(list[3]);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                        Event e \u003d new Event(list[2], date);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                        e.setDone(done);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                        tasks.add(e);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        catch (IOException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "            System.out.printf(\"Unable to read File at %s\\n\", FILEPATH);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "debbiextan": 99
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "import models.Deadline;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "import models.Event;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "import models.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    // Deals with user interactions"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        //Constructor"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\n\\tWhat can I do for you?\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    public void exit() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        System.exit(0); // ends program"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    public void listTasks(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        System.out.println(\"Here are the tasks in your list: \");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "            printAccordingTaskType(i, tasks.get(i));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    public void printAccordingTaskType(int i, Task task) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        int label \u003d i+1;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        if (task.getType().equals(\"T\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "            System.out.println(label + \". [\" + task.getType() + \"][\" + task.getStatusIcon() + \"] \" + task.getDescription());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        else if (task.getType().equals(\"D\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "            Deadline d \u003d (Deadline) task;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "            String date \u003d printDateToString(d.getDate());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "            System.out.println(label + \". [\" + d.getType() + \"][\" + d.getStatusIcon() + \"] \" + d.getDescription() + \"(by: \" + date + \")\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        else if (task.getType().equals(\"E\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "            Event e \u003d (Event) task;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "            String date \u003d printDateToString(e.getDate());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "            System.out.println(label + \". [\" + e.getType() + \"][\" + e.getStatusIcon() + \"] \" + e.getDescription() + \"(at: \" + date + \")\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    public String printDateToString(Date date) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        // Format to Print: 2nd of December 2019, 6pm"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        DateFormat df \u003d new SimpleDateFormat(\"d \u0027of\u0027 MMMM yyyy, ha\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        String formatted \u003d df.format(date);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        ArrayList\u003cString\u003e dated \u003d new ArrayList\u003cString\u003e(Arrays.asList(formatted.split(\"\\\\s+\")));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        String suffix \u003d getDateSuffix(dated.get(0));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        dated.add(1, suffix);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        int count \u003d 0;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        for (String s : dated) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "            sb.append(s);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "            if (count \u003e 0 \u0026\u0026 count \u003c dated.size()-1) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "                sb.append(\" \");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    public String getDateSuffix(String num) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        int n \u003d Integer.parseInt(num);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        if (n \u003d\u003d 11 \u0026\u0026 n \u003c\u003d 13) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "            return \"th\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        switch (n % 10) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "            case 1:  return \"st\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "            case 2:  return \"nd\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "            case 3:  return \"rd\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "            default: return \"th\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "debbiextan": 90
    }
  },
  {
    "path": "src/main/java/Utilities.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "public class Utilities {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    public static Date formatStringToDate(String date) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        Date formatted;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "            DateFormat ft \u003d new SimpleDateFormat(\"d/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "            formatted \u003d ft.parse(date);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "            return formatted;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        catch (ParseException e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "            System.out.println(\"Invalid date format!\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    public static String formatDateToString(Date date) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        // Format to Print: 2nd of December 2019, 6pm"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        DateFormat df \u003d new SimpleDateFormat (\"d/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        String formatted \u003d df.format(date);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        return formatted;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "debbiextan": 30
    }
  },
  {
    "path": "src/main/java/models/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "package models;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    //protected String date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    private Date date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    private boolean isDeadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    public Deadline(String description, Date date) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        this.isDeadline \u003d true;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        this.type \u003d \"D\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    public Date getDate() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "//    public void setDate(String date) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "//        this.date \u003d date;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "//    public void printFormattedDate(Date date) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "//        SimpleDateFormat ft \u003d new SimpleDateFormat(\"MMM dd\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "//        System.out.println(\"(by: \" + ft.format(date) + \")\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "debbiextan": 34
    }
  },
  {
    "path": "src/main/java/models/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "package models;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    private String errMsg;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    public DukeException(String errMsg) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        super(errMsg);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        this.errMsg \u003d errMsg;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        return \"☹ OOPS!!! \" + errMsg;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "debbiextan": 14
    }
  },
  {
    "path": "src/main/java/models/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "package models;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    //protected String date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    private Date date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    private boolean isEvent;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    public Event(String description, Date date) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        this.isEvent \u003d true;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        this.type \u003d \"E\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    public Date getDate() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "//    public void setDate(String date) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "//        this.date \u003d date;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "debbiextan": 31
    }
  },
  {
    "path": "src/main/java/models/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "package models;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    public String getType() { return type \u003d \"T\"; }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    public boolean getDone(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    public void setDone(boolean done) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        isDone \u003d done;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "debbiextan": 29
    }
  },
  {
    "path": "src/main/java/models/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "package models;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "import models.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    // contains task list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        //constructor"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    // Create models.Task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    public void addTask(Task t){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    // Retrieve Tasks"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    // Update Tasks"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    public void setTaskDone(int index){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        tasks.get(index).setDone(true);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    // Delete by Object"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    public void deleteTask(Task t) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        tasks.remove(t);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "debbiextan"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    // Delete by Index"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "    "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "debbiextan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "debbiextan": 40
    }
  }
]

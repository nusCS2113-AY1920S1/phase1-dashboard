[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rssujay"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rssujay"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rssujay"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rssujay"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    mainClassName \u003d \"Duke.Duke\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rssujay"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rssujay"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rssujay"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rssujay"
        },
        "content": "test {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rssujay": 23,
      "-": 19
    }
  },
  {
    "path": "src/main/java/Duke/Commands/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rssujay"
        },
        "content": "package Duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.Exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.Exceptions.InputException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.Tasks.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.Tasks.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.Tasks.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.Tasks.Todo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rssujay"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    private String fullCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * Constructor for creation of Task objects, does some input checking."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * @param components Components of the full command"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * @param fullCommand the full command"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * @throws DukeException Can throw from invalid input or storage errors"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public AddCommand(String[] components, String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        this.type \u003d components[0];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        if (components.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            throw new InputException(\"☹ OOPS!!! The description of a task cannot be empty.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        } else if (this.type.equals(\"deadline\") \u0026\u0026 components[1].equals(\"/by\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            throw new InputException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        } else if (this.type.equals(\"event\") \u0026\u0026 components[1].equals(\"/by\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            throw new InputException(\"☹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * Add Task to task list."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * @param taskList TaskList instance."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * @param storage Storage instance."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * @param ui Ui instance."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * @throws DukeException invalid input or storage error."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public void execute(TaskList taskList, Storage storage, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        List\u003cString\u003e formattedOutput \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        Task added;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            switch (this.type) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                added \u003d taskList.addTask(new Todo(fullCommand.replaceFirst(\"todo \", \"\")));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                formattedOutput.add(\"Got it. I\u0027ve added this todo:\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                formattedOutput.add(added.toString());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                added \u003d taskList.addTask(new Deadline(fullCommand.substring(0, fullCommand.lastIndexOf(\" /by\"))"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                        .replaceFirst(\"deadline \", \"\"),"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                        fullCommand.split(\"/by \")[1]));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                formattedOutput.add(\"Got it. I\u0027ve added this deadline:\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                formattedOutput.add(added.toString());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                added \u003d taskList.addTask(new Event(fullCommand.substring(0, fullCommand.lastIndexOf(\" /at\"))"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                        .replaceFirst(\"event \", \"\"),"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                        fullCommand.split(\"/at \")[1]));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                formattedOutput.add(\"Got it. I\u0027ve added this event:\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                formattedOutput.add(added.toString());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            throw new InputException(\"Please ensure that you enter the full command.\\n\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                    + \"Duke.Tasks.Deadline: deadline \u003ctask name\u003e /by \u003cDD/MM/YYYY HHMM\u003e\\n\""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                    + \"Duke.Tasks.Event: event \u003ctask name\u003e /at \u003cstart as DD/MM/YYYY HHMM\u003e_\u003cend as DD/MM/YYYY HHMM\u003e\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        formattedOutput.add(\"You currently have \" + taskList.getTasks().size()"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                + ((taskList.getTasks().size() \u003d\u003d 1) ? \" task in the list.\" : \" tasks in the list.\"));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        ui.showFormatted(formattedOutput);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        storage.setData(taskList.getTasks());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "rssujay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rssujay": 84
    }
  },
  {
    "path": "src/main/java/Duke/Commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rssujay"
        },
        "content": "package Duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.Exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rssujay"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    private boolean isExit;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public abstract void execute(TaskList taskList, Storage storage, Ui ui) throws DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public void setExit(boolean exit) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        isExit \u003d exit;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rssujay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rssujay": 20
    }
  },
  {
    "path": "src/main/java/Duke/Commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rssujay"
        },
        "content": "package Duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.Exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.Exceptions.InputException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.Tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rssujay"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * Deletes the relevant task in the task list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * @param taskList TaskList instance."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * @param storage Storage instance."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * @param ui Ui instance."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * @throws DukeException Invalid index or storage error."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public void execute(TaskList taskList, Storage storage, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            List\u003cString\u003e formattedOutput \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            List\u003cTask\u003e tasks \u003d taskList.getTasks();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            Task removed \u003d taskList.removeTask(index);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            storage.setData(tasks);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            formattedOutput.add(\"Noted. I\u0027ve removed this task:\\n\" + removed.toString());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            formattedOutput.add(\"You currently have \" + tasks.size()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                    + ((tasks.size() \u003d\u003d 1) ? \" task in the list.\" : \" tasks in the list.\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            ui.showFormatted(formattedOutput);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            throw new InputException(\"Invalid index entered. Type \u0027list\u0027 to see your list.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rssujay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rssujay": 44
    }
  },
  {
    "path": "src/main/java/Duke/Commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rssujay"
        },
        "content": "package Duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.Exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.Exceptions.InputException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.Tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rssujay"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * Mark task in task list as done."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * @param taskList TaskList instance."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * @param storage Storage instance."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * @param ui Ui instance."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * @throws DukeException invalid index or storage error."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public void execute(TaskList taskList, Storage storage, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            List\u003cString\u003e formattedOutput \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            Task completed \u003d taskList.markDone(index);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            storage.setData(taskList.getTasks());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            formattedOutput.add(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            formattedOutput.add(completed.toString());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            ui.showFormatted(formattedOutput);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            throw new InputException(\"Invalid index entered. Type \u0027list\u0027 to see your list.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rssujay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rssujay": 40
    }
  },
  {
    "path": "src/main/java/Duke/Commands/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rssujay"
        },
        "content": "package Duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rssujay"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public void execute(TaskList taskList, Storage storage, Ui ui){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        this.setExit(true);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rssujay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rssujay": 12
    }
  },
  {
    "path": "src/main/java/Duke/Commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rssujay"
        },
        "content": "package Duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.Exceptions.InputException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.Tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rssujay"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * Constructor for finding tasks using a keyword."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * @param components Components of the full command"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * @param fullCommand the full command"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * @throws InputException missing keyword"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public FindCommand(String[] components, String fullCommand) throws InputException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        if (components.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            throw new InputException(\"☹ OOPS!!! You need to enter a keyword.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            keyword \u003d fullCommand.replaceFirst(\"find \", \"\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * Searches for tasks using a keyword."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * @param taskList TaskList instance"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * @param storage Storage instance"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * @param ui Ui instance"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public void execute(TaskList taskList, Storage storage, Ui ui) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        int resultCount \u003d 0;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        ArrayList\u003cString\u003e formattedOutput \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        formattedOutput.add(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        List\u003cTask\u003e tasks \u003d taskList.getTasks();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            if (task.getTaskName().contains(keyword)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                formattedOutput.add((resultCount++ + 1) + \". \" + task.toString());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        ui.showFormatted(formattedOutput);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rssujay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rssujay": 49
    }
  },
  {
    "path": "src/main/java/Duke/Commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rssujay"
        },
        "content": "package Duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.Tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rssujay"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * Generates a list of tasks currently within the task list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * @param taskList TaskList instance."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * @param storage Storage instance."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * @param ui Ui instance."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public void execute(TaskList taskList, Storage storage, Ui ui) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        List\u003cTask\u003e tasks \u003d taskList.getTasks();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        List\u003cString\u003e formattedOutput \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        formattedOutput.add(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getTasks().size(); i++) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            formattedOutput.add((Integer.toString(i + 1) + \". \" + tasks.get(i).toString()));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        ui.showFormatted(formattedOutput);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rssujay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rssujay": 29
    }
  },
  {
    "path": "src/main/java/Duke/Commands/UnknownCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rssujay"
        },
        "content": "package Duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.Exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.Exceptions.InputException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rssujay"
        },
        "content": "public class UnknownCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public void execute(TaskList taskList, Storage storage, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        throw new InputException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rssujay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rssujay": 15
    }
  },
  {
    "path": "src/main/java/Duke/DateTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rssujay"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.Exceptions.DateFormatException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.Exceptions.DateValueException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.Exceptions.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rssujay"
        },
        "content": "public class DateTime {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    private int day;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    private int month;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    private int year;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    private int hour;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    private int min;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * Constructor for simple dateTime object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * @param dateTime A string in the format DD/MM/YYYY."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * @throws DukeException Exception triggered if values are invalid or formatting is incorrect."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public DateTime(String dateTime) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            String[] components \u003d dateTime.split(\" \");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            String[] dateComponents \u003d components[0].split(\"/\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            this.day \u003d Integer.parseInt(dateComponents[0]);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            this.month \u003d Integer.parseInt(dateComponents[1]);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            this.year \u003d Integer.parseInt(dateComponents[2]);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            int timeComponents \u003d Integer.parseInt(components[1]);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            this.min \u003d timeComponents % 100;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            this.hour \u003d timeComponents / 100;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException | NumberFormatException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            throw new DateFormatException(\"Please enter valid dates and times, as DD/MM/YYYY HHMM\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        if ((day \u003c 1 || day \u003e 31) || (month \u003c 1 || month \u003e 12)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                || (year \u003c 0) || (hour \u003c 0 || hour \u003e 23) || (min \u003c 0 || min \u003e 59)) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            throw new DateValueException(\"Please enter valid dates and times, as DD/MM/YYYY HHMM\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * Converts the dateTime object back to the string version - this can be reused to create an"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * identical dateTime object."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * @return String equivalent of dateTime object."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        String dayStr \u003d (this.day \u003c 10) ? \"0\" + Integer.toString(this.day) : Integer.toString(this.day);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        String monthStr \u003d (this.month \u003c 10) ? \"0\" + Integer.toString(this.month) : Integer.toString(this.month);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        String yearStr \u003d (this.year \u003c 10) ? \"000\" + Integer.toString(this.year)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                : (this.year \u003c 100) ? \"00\" + Integer.toString(this.year)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                : (this.year \u003c 1000) ? \"0\" + Integer.toString(this.year) : Integer.toString(this.year);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        String hourStr \u003d (this.hour \u003c 10) ? \"0\" + Integer.toString(this.hour) : Integer.toString(this.hour);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        String minStr \u003d (this.min \u003c 10) ? \"0\" + Integer.toString(this.min) : Integer.toString(this.min);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        return dayStr + \"/\" + monthStr + \"/\" + yearStr + \" \" + hourStr + minStr;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rssujay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rssujay": 55
    }
  },
  {
    "path": "src/main/java/Duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rssujay"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.Commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.Exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rssujay"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    private Ui userInterface;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    private Storage dukeData;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    Duke(String filePath) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        userInterface \u003d new Ui();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            dukeData \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rssujay"
        },
        "content": "             tasks \u003d new TaskList(dukeData.loadData());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            userInterface.showFormatted(e.getMessage());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    private void startDuke() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        userInterface.showWelcome();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        boolean exitCheck \u003d false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        while (!exitCheck) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            String input \u003d userInterface.readInput();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                Command command \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                command.execute(tasks, dukeData, userInterface);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                exitCheck \u003d command.isExit();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                userInterface.showFormatted(e.getMessage());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        userInterface.showGoodbye();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     Entry point into this java program."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        Duke dukeInstance \u003d new Duke(\"data/duke.txt\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        dukeInstance.startDuke();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rssujay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rssujay": 46
    }
  },
  {
    "path": "src/main/java/Duke/Exceptions/DateFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rssujay"
        },
        "content": "package Duke.Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rssujay"
        },
        "content": "public class DateFormatException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public DateFormatException(String errorMsg) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        super(\"Invalid Date Format\\n\\n\" + errorMsg);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rssujay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rssujay": 7
    }
  },
  {
    "path": "src/main/java/Duke/Exceptions/DateValueException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rssujay"
        },
        "content": "package Duke.Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rssujay"
        },
        "content": "public class DateValueException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public DateValueException(String errorMsg) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        super(\"Invalid Date Values\\n\" + errorMsg);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rssujay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rssujay": 7
    }
  },
  {
    "path": "src/main/java/Duke/Exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rssujay"
        },
        "content": "package Duke.Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rssujay"
        },
        "content": "public abstract class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public DukeException(String errorMsg) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        super(errorMsg);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rssujay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rssujay": 7
    }
  },
  {
    "path": "src/main/java/Duke/Exceptions/InputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rssujay"
        },
        "content": "package Duke.Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rssujay"
        },
        "content": "public class InputException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public InputException(String errorMsg) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        super(\"Invalid Input\\n\\n\" + errorMsg);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rssujay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rssujay": 7
    }
  },
  {
    "path": "src/main/java/Duke/Exceptions/StorageException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rssujay"
        },
        "content": "package Duke.Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rssujay"
        },
        "content": "public class StorageException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public StorageException(String errMsg) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        super(\"I/O Error\\n\\n\" + errMsg);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rssujay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rssujay": 7
    }
  },
  {
    "path": "src/main/java/Duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rssujay"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.Commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.Commands.AddCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.Commands.FindCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.Commands.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.Commands.ExitCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.Commands.UnknownCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.Commands.ListCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.Commands.DoneCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.Exceptions.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.Exceptions.InputException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rssujay"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * Parses an input string into a workable command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * @param input user typed in this string."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * @return a Command that can executed."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * @throws DukeException Storage errors or input errors."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        String[] components \u003d input.split(\" \");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            switch (components[0]) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                command \u003d new DoneCommand(Integer.parseInt(components[1]) - 1);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                command \u003d new ListCommand();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                command \u003d new DeleteCommand(Integer.parseInt(components[1]) - 1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                command \u003d new FindCommand(components, input);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                command \u003d new AddCommand(components, input);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                command \u003d new ExitCommand();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                command \u003d new UnknownCommand();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            return command;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            throw new InputException(\"Invalid index entered. Type \u0027list\u0027 to see your list.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rssujay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rssujay": 61
    }
  },
  {
    "path": "src/main/java/Duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rssujay"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.Exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.Exceptions.StorageException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.Tasks.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.Tasks.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.Tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.Tasks.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import java.util.Vector;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rssujay"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    private File dukeFile;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * This constructor creates the file if needed."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * @param fileLocation relative path of the text file to store data in."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public Storage(String fileLocation) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            dukeFile \u003d new File(fileLocation);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            dukeFile.createNewFile();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            throw new StorageException(e.getMessage());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * This method retrieves data from the text file, and constructs objects to insert back into the list."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * @return tasks"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public List\u003cTask\u003e loadData() throws DukeException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        Vector\u003cTask\u003e tasks \u003d new Vector\u003c\u003e();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            BufferedReader inputStream \u003d new BufferedReader(new FileReader(dukeFile));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            while (true) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                String currentLine \u003d inputStream.readLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                if (currentLine \u003d\u003d null) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                    String[] arguments \u003d currentLine.split(\" \\\\| \");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                    switch (arguments[0]) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                        tasks.addElement(new Todo(Integer.parseInt(arguments[1]), arguments[2]));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                        tasks.addElement(new Deadline(Integer.parseInt(arguments[1]), arguments[2], arguments[3]));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                        tasks.addElement(new Event(Integer.parseInt(arguments[1]), arguments[2], arguments[3]));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            inputStream.close();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            throw new StorageException(e.getMessage());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * This method takes in a vector and calls each task\u0027s storeString method to store its data in the correct format."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * @param tasks A vector of tasks currently in the program."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public void setData(List\u003cTask\u003e tasks) throws DukeException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            BufferedWriter outputStream \u003d new BufferedWriter(new FileWriter(dukeFile));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                outputStream.write(task.storeString());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                outputStream.newLine();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            outputStream.close();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            throw new StorageException(e.getMessage());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "rssujay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rssujay": 84
    }
  },
  {
    "path": "src/main/java/Duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rssujay"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.Tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rssujay"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    TaskList() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public Task addTask(Task task) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public Task removeTask(int index)throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        return tasks.remove(index);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public List\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public Task markDone(int index) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        tasks.get(index).markDone();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rssujay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rssujay": 36
    }
  },
  {
    "path": "src/main/java/Duke/Tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rssujay"
        },
        "content": "package Duke.Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.DateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.Exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rssujay"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    private DateTime by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public Deadline(String description, String by) throws DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        this.by \u003d new DateTime(by);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * This constructor is used for recreation of Duke.Tasks.Deadline from storage."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * @param done 1 if task has been marked complete, 0 otherwise."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * @param description the name or description of the deadline."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * @param by the due date/time of the deadline."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public Deadline(int done, String description, String by) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        this.isDone \u003d (done \u003d\u003d 1);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        this.by \u003d new DateTime(by);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public String storeString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        return \"D | \" + super.storeString() + \" | \" + this.getBy();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + this.by + \")\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    private String getBy() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        return this.by.toString();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rssujay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rssujay": 39
    }
  },
  {
    "path": "src/main/java/Duke/Tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rssujay"
        },
        "content": "package Duke.Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.DateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import Duke.Exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rssujay"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    private DateTime start;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    private DateTime end;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * Constructor for Duke.Tasks.Event object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * @param description name of the event."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * @param at Will be broken into two dateTime objects."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * @throws DukeException thrown from Duke.DateTime object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public Event(String description, String at) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        String[] duration \u003d at.split(\"_\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        this.start \u003d new DateTime(duration[0]);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        this.end \u003d new DateTime(duration[1]);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * This constructor is used for recreation of Duke.Tasks.Deadline from storage."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * @param done 1 if task has been marked complete, 0 otherwise."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * @param description the name or description of the event."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * @param at the actual date/time/duration of the event."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public Event(int done, String description, String at) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        this.isDone \u003d (done \u003d\u003d 1);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        String[] duration \u003d at.split(\"_\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        this.start \u003d new DateTime(duration[0]);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        this.end \u003d new DateTime(duration[1]);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public String storeString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        return \"E | \" + super.storeString() + \" | \" + this.getStart() + \"_\" + this.getEnd();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.getStart() + \" to \" + this.getEnd() + \")\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    private String getStart() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        return this.start.toString();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    private String getEnd() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        return this.end.toString();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rssujay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rssujay": 54
    }
  },
  {
    "path": "src/main/java/Duke/Tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rssujay"
        },
        "content": "package Duke.Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rssujay"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    private String taskName;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    Boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public Task(String taskName) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        return (isDone ? \"✓\" : \"✗\"); //return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.getTaskName();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public String storeString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        return Integer.toString((isDone ? 1 : 0)) + \" | \" + this.getTaskName();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public String getTaskName() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        return this.taskName;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rssujay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rssujay": 31
    }
  },
  {
    "path": "src/main/java/Duke/Tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rssujay"
        },
        "content": "package Duke.Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rssujay"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public Todo(String taskName) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public Todo(int done, String taskName) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        this.isDone \u003d (done \u003d\u003d 1);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public String storeString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        return \"T | \" + super.storeString();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rssujay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rssujay": 22
    }
  },
  {
    "path": "src/main/java/Duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rssujay"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rssujay"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    private Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * This is to show a welcome message on startup."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        List\u003cString\u003e welcome \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        welcome.add(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        welcome.add(\"What can I do for you?\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        showFormatted(welcome);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * This is to show a goodbye message on exit."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public void showGoodbye() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        showFormatted(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * This is to add the Duke UI wrapper to printed messages."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * @param output A single string to be printed."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public void showFormatted(String output) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        String horizontalLine \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        String formattedOutput \u003d horizontalLine + \"\\n\" + output + \"\\n\" + horizontalLine;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        System.out.println(formattedOutput);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * This is to add the Duke UI wrapper to printed messages."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * @param output A List of strings that will be accumulated into a Single string."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public void showFormatted(List\u003cString\u003e output) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        String formattedOutput \u003d \"\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        for (String outputItem : output) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            formattedOutput \u003d formattedOutput.concat(outputItem + \"\\n\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        showFormatted(formattedOutput.substring(0, formattedOutput.length() - 1));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public String readInput() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rssujay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rssujay": 52
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rssujay"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    private Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * This is to show a welcome message on startup."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        List\u003cString\u003e welcome \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        welcome.add(\"Hello! I\u0027m Duke.Duke\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        welcome.add(\"What can I do for you?\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        showFormatted(welcome);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * This is to show a goodbye message on exit."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public void showGoodbye() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        showFormatted(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * This is to add the Duke UI wrapper to printed messages."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * @param output A single string to be printed."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public void showFormatted(String output) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        String horizontalLine \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        String formattedOutput \u003d horizontalLine + \"\\n\" + output + \"\\n\" + horizontalLine;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        System.out.println(formattedOutput);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * This is to add the Duke UI wrapper to printed messages."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * @param output A List of strings that will be accumulated into a Single string."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public void showFormatted(List\u003cString\u003e output) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        String formattedOutput \u003d \"\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        for (String outputItem : output) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            formattedOutput \u003d formattedOutput.concat(outputItem + \"\\n\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        showFormatted(formattedOutput);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public String readInput() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rssujay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rssujay": 50
    }
  }
]

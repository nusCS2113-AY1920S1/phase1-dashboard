[
  {
    "path": "build.gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rssujay"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rssujay"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rssujay"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rssujay"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rssujay"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rssujay"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rssujay"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rssujay"
        },
        "content": "test {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rssujay": 23,
      "-": 19
    }
  },
  {
    "path": "data/duke.txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rssujay"
        },
        "content": "T | 0 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rssujay"
        },
        "content": "D | 0 | wassup | 01/02/0003 0405"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rssujay"
        },
        "content": "E | 0 | testing | 01/02/0003 0405_06/07/0008 0910"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rssujay"
        },
        "content": "E | 1 | testing | 01/02/0003 0405_06/07/0008 0910"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rssujay"
        },
        "content": "E | 1 | testing | 01/02/0003 0405_06/07/0008 0910"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rssujay"
        },
        "content": "T | 1 | hi"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rssujay"
        },
        "content": "D | 0 | test | 11/11/2011 2345"
      }
    ],
    "authorContributionMap": {
      "rssujay": 7
    }
  },
  {
    "path": "src/main/java/DateTime.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rssujay"
        },
        "content": "public class DateTime {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    private int day;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    private int month;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    private int year;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    private int hour;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    private int min;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * Constructor for simple dateTime object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * @param dateTime A string in the format DD/MM/YYYY."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * @throws DukeException Exception triggered if values are invalid or formatting is incorrect."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public DateTime(String dateTime) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            String[] components \u003d dateTime.split(\" \");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            String[] dateComponents \u003d components[0].split(\"/\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            this.day \u003d Integer.parseInt(dateComponents[0]);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            this.month \u003d Integer.parseInt(dateComponents[1]);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            this.year \u003d Integer.parseInt(dateComponents[2]);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            int timeComponents \u003d Integer.parseInt(components[1]);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            this.min \u003d timeComponents % 100;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            this.hour \u003d timeComponents / 100;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            if ((day \u003c 1 || day \u003e 31) || (month \u003c 1 || month \u003e 12)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                    || (year \u003c 0) || (hour \u003c 0 || hour \u003e 23) || (min \u003c 0 || min \u003e 59)) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                throw new Exception();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            throw new DukeException(\"Please enter valid dates and times, as DD/MM/YYYY HHMM\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * Converts the dateTime object back to the string version - this can be reused to create an"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * identical dateTime object."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * @return String equivalent of dateTime object."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        String dayStr \u003d (this.day \u003c 10) ? \"0\" + Integer.toString(this.day) : Integer.toString(this.day);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        String monthStr \u003d (this.month \u003c 10) ? \"0\" + Integer.toString(this.month) : Integer.toString(this.month);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        String yearStr \u003d (this.year \u003c 10) ? \"000\" + Integer.toString(this.year)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                : (this.year \u003c 100) ? \"00\" + Integer.toString(this.year)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                : (this.year \u003c 1000) ? \"0\" + Integer.toString(this.year) : Integer.toString(this.year);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        String hourStr \u003d (this.hour \u003c 10) ? \"0\" + Integer.toString(this.hour) : Integer.toString(this.hour);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        String minStr \u003d (this.min \u003c 10) ? \"0\" + Integer.toString(this.min) : Integer.toString(this.min);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        return dayStr + \"/\" + monthStr + \"/\" + yearStr + \" \" + hourStr + minStr;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rssujay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rssujay": 49
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rssujay"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    protected DateTime by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public Deadline(String description, String by) throws DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        this.by \u003d new DateTime(by);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * This constructor is used for recreation of Deadline from storage."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * @param done 1 if task has been marked complete, 0 otherwise."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * @param description the name or description of the deadline."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * @param by the due date/time of the deadline."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public Deadline(int done, String description, String by) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        this.isDone \u003d (done \u003d\u003d 1);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        this.by \u003d new DateTime(by);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public String storeString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        return \"D | \" + super.storeString() + \" | \" + this.getBy();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + this.by + \")\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    private String getBy() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        return this.by.toString();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rssujay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rssujay": 34
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import java.util.Vector;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     Entry point into this java program."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rssujay"
        },
        "content": "         */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        PrintBuffer.addElement(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        PrintBuffer.addElement(\"What can I do for you?\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        System.out.println(PrintBuffer.getPrint());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        startDuke();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    private static void exitConversation() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        PrintBuffer.addElement(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        System.out.println(PrintBuffer.getPrint());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    private static void startDuke() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        Vector\u003cTask\u003e inputs \u003d new Vector\u003c\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        Storage dukeData \u003d new Storage(\"data/duke.txt\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            inputs \u003d dukeData.getData();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            PrintBuffer.addElement(e.getMessage());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            System.out.println(PrintBuffer.getPrint());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            String[] commands \u003d input.split(\" \");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                exitConversation();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            } else if (commands[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                    int index \u003d Integer.parseInt(commands[1]) - 1;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                    inputs.get(index).markDone();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                    PrintBuffer.addElement(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                    PrintBuffer.addElement(inputs.get(index).toString());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                    dukeData.setData(inputs);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                    PrintBuffer.clear();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                    PrintBuffer.addElement(\"Invalid index. Type \u0027list\u0027 to see your list.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                PrintBuffer.addElement(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                for (int i \u003d 0; i \u003c inputs.size(); i++) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                    String temp \u003d Integer.toString(i + 1)  + \".\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                    PrintBuffer.addElement(temp.concat(inputs.get(i).toString()));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                    switch (commands[0]) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                    case \"todo\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                        if (commands.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                        inputs.addElement(new Todo(input.replaceFirst(\"todo \", \"\")));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                    case \"deadline\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                        inputs.addElement(new Deadline(input.substring(0, input.lastIndexOf(\" /by\"))"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                                .replaceFirst(\"deadline \", \"\"),"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                                input.split(\"/by \")[1]));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                    case \"event\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                        inputs.addElement(new Event(input.substring(0, input.lastIndexOf(\" /at\"))"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                                .replaceFirst(\"event \", \"\"),"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                                input.split(\"/at \")[1]));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                    dukeData.setData(inputs);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                    PrintBuffer.addElement(\"Got it. I\u0027ve added this task:\\n\" + inputs.lastElement().toString()"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                            + \"\\nNow you have \" + Integer.toString(inputs.size())"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                            + ((inputs.size() \u003d\u003d 1) ? \" task in the list.\" : \" tasks in the list.\"));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                    PrintBuffer.addElement(e.getMessage());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                } catch (StringIndexOutOfBoundsException | ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                    PrintBuffer.addElement(\"Please ensure that you enter the full command.\\n\""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                            + \"Deadline: deadline \u003ctask name\u003e /by \u003cend\u003e\\n\""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                            + \"Event: event \u003ctask name\u003e /at \u003cstart as DD/MM/YY HHMM\u003e_\u003cend as DD/MM/YY HHMM\u003e\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            System.out.println(PrintBuffer.getPrint());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rssujay": 90,
      "-": 10
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rssujay"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public DukeException(String errorMsg) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        super(errorMsg);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rssujay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rssujay": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rssujay"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    protected DateTime start;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    protected DateTime end;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * Constructor for Event object."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * @param description name of the event."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * @param at Will be broken into two dateTime objects."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * @throws DukeException thrown from DateTime object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public Event(String description, String at) throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        String[] duration \u003d at.split(\"_\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        this.start \u003d new DateTime(duration[0]);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        this.end \u003d new DateTime(duration[1]);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * This constructor is used for recreation of Deadline from storage."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * @param done 1 if task has been marked complete, 0 otherwise."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * @param description the name or description of the event."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * @param at the actual date/time/duration of the event."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public Event(int done, String description, String at) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        this.isDone \u003d (done \u003d\u003d 1);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        String[] duration \u003d at.split(\"_\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        this.start \u003d new DateTime(duration[0]);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        this.end \u003d new DateTime(duration[1]);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public String storeString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        return \"E | \" + super.storeString() + \" | \" + this.getStart() + \"_\" + this.getEnd();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.getStart() + \" to \" + this.getEnd() + \")\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    private String getStart() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        return this.start.toString();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    private String getEnd() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        return this.end.toString();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rssujay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rssujay": 49
    }
  },
  {
    "path": "src/main/java/PrintBuffer.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import java.util.Vector;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rssujay"
        },
        "content": "public class PrintBuffer {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    private static Vector\u003cString\u003e buffer \u003d new Vector\u003c\u003e();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * Adds a new string to the back of the buffer."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * @param content - Any string to be wrapped."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public static void addElement(String content) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        buffer.addElement(content);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * Prints out each item currently in the buffer"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * vector on a new line. Subsequently, clears the buffer."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public static String getPrint() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        String horizontalLine \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        String constructed \u003d \"\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        constructed \u003d constructed.concat(horizontalLine + \"\\n\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        for (int i \u003d 0; i \u003c buffer.size(); i++) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            constructed \u003d constructed.concat(buffer.get(i) + \"\\n\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        constructed \u003d constructed.concat(horizontalLine);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        buffer.clear();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        return constructed;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * Clears the current items in the print buffer."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public static void clear() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        buffer.clear();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rssujay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rssujay": 36
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import java.util.Vector;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rssujay"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    private File dukeData;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * This constructor creates the file if needed."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * @param fileLocation relative path of the text file to store data in."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public Storage(String fileLocation) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            dukeData \u003d new File(fileLocation);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            dukeData.createNewFile();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            PrintBuffer.addElement(\"IO Exception: \" + e.getMessage());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            System.out.println(PrintBuffer.getPrint());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * This method retrieves data from the text file, and constructs objects to insert back into the list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * @return tasks"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public Vector\u003cTask\u003e getData() throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        Vector\u003cTask\u003e tasks \u003d new Vector\u003c\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            BufferedReader inputStream \u003d new BufferedReader(new FileReader(dukeData));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            while (true) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                String currentLine \u003d inputStream.readLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                if (currentLine \u003d\u003d null) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                    String[] arguments \u003d currentLine.split(\" \\\\| \");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                    switch (arguments[0]) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                        tasks.addElement(new Todo(Integer.parseInt(arguments[1]), arguments[2]));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                        tasks.addElement(new Deadline(Integer.parseInt(arguments[1]), arguments[2], arguments[3]));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                        tasks.addElement(new Event(Integer.parseInt(arguments[1]), arguments[2], arguments[3]));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            inputStream.close();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            PrintBuffer.addElement(\"IO Exception: \" + e.getMessage());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            System.out.println(PrintBuffer.getPrint());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * This method takes in a vector and calls each task\u0027s storeString method to store its data in the correct format."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     * @param tasks A vector of tasks currently in the program."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public void setData(Vector\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            BufferedWriter outputStream \u003d new BufferedWriter(new FileWriter(dukeData));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                outputStream.write(task.storeString());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                outputStream.newLine();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            outputStream.close();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            PrintBuffer.addElement(\"IO Exception: \" + e.getMessage());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            System.out.println(PrintBuffer.getPrint());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rssujay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rssujay": 77
    }
  },
  {
    "path": "src/main/java/Task.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rssujay"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    protected String taskName;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    protected Boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public Task(String taskName) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        return (isDone ? \"✓\" : \"✗\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.getTaskName();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public String storeString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        return Integer.toString((isDone ? 1 : 0)) + \" | \" + this.getTaskName();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public String getTaskName() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        return this.taskName;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rssujay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rssujay": 29
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rssujay"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public Todo(String taskName) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public Todo(int done, String taskName) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        this.isDone \u003d (done \u003d\u003d 1);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public String storeString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        return \"T | \" + super.storeString();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rssujay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rssujay": 20
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rssujay"
        },
        "content": "import java.util.Vector;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rssujay"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     Entry point into this java program."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rssujay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rssujay"
        },
        "content": "         */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        PrintBuffer.addElement(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        PrintBuffer.addElement(\"What can I do for you?\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        System.out.println(PrintBuffer.getPrint());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        startDuke();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    private static void exitConversation() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        PrintBuffer.addElement(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        System.out.println(PrintBuffer.getPrint());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    private static void startDuke() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        Vector\u003cTask\u003e inputs \u003d new Vector\u003c\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        Storage dukeData \u003d new Storage(\"data/duke.txt\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            inputs \u003d dukeData.getData();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            PrintBuffer.addElement(e.getMessage());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            System.out.println(PrintBuffer.getPrint());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            String[] commands \u003d input.split(\" \");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rssujay"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                exitConversation();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            } else if (commands[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                    int index \u003d Integer.parseInt(commands[1]) - 1;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                    inputs.get(index).markDone();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                    PrintBuffer.addElement(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                    PrintBuffer.addElement(inputs.get(index).toString());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                    dukeData.setData(inputs);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                    PrintBuffer.clear();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                    PrintBuffer.addElement(\"Invalid index. Type \u0027list\u0027 to see your list.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                PrintBuffer.addElement(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                for (int i \u003d 0; i \u003c inputs.size(); i++) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                    String temp \u003d Integer.toString(i + 1)  + \".\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                    PrintBuffer.addElement(temp.concat(inputs.get(i).toString()));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                    switch (commands[0]) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                    case \"todo\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                        if (commands.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                        inputs.addElement(new Todo(input.replaceFirst(\"todo \", \"\")));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                    case \"deadline\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                        inputs.addElement(new Deadline(input.substring(0, input.lastIndexOf(\" /by\"))"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                                .replaceFirst(\"deadline \", \"\"),"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                                input.split(\"/by \")[1]));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                    case \"event\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                        inputs.addElement(new Event(input.substring(0, input.lastIndexOf(\" /at\"))"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                                .replaceFirst(\"event \", \"\"),"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                                input.split(\"/at \")[1]));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                    dukeData.setData(inputs);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                    PrintBuffer.addElement(\"Got it. I\u0027ve added this task:\\n\" + inputs.lastElement().toString()"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                            + \"\\nNow you have \" + Integer.toString(inputs.size())"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                            + ((inputs.size() \u003d\u003d 1) ? \" task in the list.\" : \" tasks in the list.\"));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                    PrintBuffer.addElement(e.getMessage());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                } catch (StringIndexOutOfBoundsException | ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                    PrintBuffer.addElement(\"Please ensure that you enter the full command.\\n\""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                            + \"Deadline: deadline \u003ctask name\u003e /by \u003cend\u003e\\n\""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                            + \"Event: event \u003ctask name\u003e /at \u003cstart as DD/MM/YY HHMM\u003e_\u003cend as DD/MM/YY HHMM\u003e\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "rssujay"
        },
        "content": "                }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "rssujay"
        },
        "content": "            System.out.println(PrintBuffer.getPrint());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "rssujay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "rssujay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "rssujay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rssujay": 100
    }
  }
]

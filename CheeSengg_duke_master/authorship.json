[
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import Duke.Commands.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import Duke.Exception.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import Duke.Parser.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import Duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import Duke.Task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import Duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public Duke(File filePath){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        tasks \u003d storage.load();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        File currentDir \u003d new File(System.getProperty(\"user.dir\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        File filePath \u003d new File(currentDir.toString() + \"\\\\src\\\\main\\\\data\\\\duke.txt\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        new Duke(filePath).run();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            } catch (NumberFormatException e){"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                ui.setMessage(\"     Invalid Command\\n\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CheeSengg": 45,
      "-": 3
    }
  },
  {
    "path": "src/main/java/Duke/Commands/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package Duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import Duke.Constant.Duke_Response;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import Duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import Duke.Task.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import Duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import Duke.DateFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private String taskType;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private String dateTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Constructor for ToDo task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * There is no dateTime for this type of task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param taskType The task type to be added"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param description The description of task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public AddCommand(String taskType, String description){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.dateTime \u003d \"\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Constructor for Event and Deadline Task"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param taskType The task type to be added"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param description The description of task"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param dateTime The date and time of task to either be completed or attend to"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public AddCommand(String taskType, String description, String dateTime){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * To append new task to the arraylist"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param tasks The arraylist of task stored by Duke"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param ui The user interface that handles messages"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param storage The database to read files and write txt files"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        DateFormatter dateFormatter \u003d new DateFormatter(dateTime);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        switch (taskType.toLowerCase()){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                task \u003d new Todo(description);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                ui.setMessage(new Duke_Response().ADD + \"      \" + task.toString()"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                        + \"\\n    Now you have \" + tasks.size() + \" tasks in your list.\\n\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                task \u003d new Event(description, dateFormatter.getDateTime());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                ui.setMessage(new Duke_Response().ADD + \"      \" + task.toString()"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                        + \"\\n    Now you have \" + tasks.size() + \" tasks in your list.\\n\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                task \u003d new Deadline(description, dateFormatter.getDateTime());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                ui.setMessage(new Duke_Response().ADD + \"      \" + task.toString()"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                        + \"\\n    Now you have \" + tasks.size() + \" tasks in your list.\\n\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CheeSengg": 70
    }
  },
  {
    "path": "src/main/java/Duke/Commands/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package Duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import Duke.Constant.Duke_Response;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import Duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import Duke.Task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import Duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class ByeCommand extends Command{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Write all the tasks in TaskList into duke.txt"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Set messages by ui to BYE"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param tasks The arraylist of task stored by Duke"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param ui The user interface that handles messages"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param storage The database to read files and write txt files"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        storage.write(tasks);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        ui.setMessage(new Duke_Response().BYE);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Exit program"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return quit \u003d true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CheeSengg": 31
    }
  },
  {
    "path": "src/main/java/Duke/Commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package Duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import Duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import Duke.Task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import Duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    protected boolean quit;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param tasks The arraylist of task stored by Duke"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param ui The user interface that handles messages"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param storage The database to read files and write txt files"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Duke does not stop running"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return quit \u003d false"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public boolean isExit(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CheeSengg": 24
    }
  },
  {
    "path": "src/main/java/Duke/Commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package Duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import Duke.Constant.Duke_Response;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import Duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import Duke.Task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import Duke.Task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import Duke.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class DeleteCommand extends Command{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Constructor for DeleteCommand"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param index The task to be deleted, index of user\u0027s list starts from 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public DeleteCommand(int index){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Delete the task that is input by user"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param tasks The arraylist of task stored by Duke"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param ui The user interface that handles messages"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param storage The database to read files and write txt files"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String message;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        if(tasks.size() \u003e\u003d index) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            Task task \u003d tasks.deleteTask(index);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            message \u003d new Duke_Response().DELETE_FOUND + \"      \" + task.toString() + \"\\n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } else{"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            message \u003d new Duke_Response().NOT_FOUND;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        ui.setMessage(message);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CheeSengg": 38
    }
  },
  {
    "path": "src/main/java/Duke/Commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package Duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import Duke.Constant.Duke_Response;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import Duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import Duke.Task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import Duke.Task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import Duke.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class DoneCommand extends Command{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Constructor for DoneCommand"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param index The task to be set as done, index of user\u0027s list starts from 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public DoneCommand(int index){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Mark the task that is input by user as done"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param tasks The arraylist of task stored by Duke"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param ui The user interface that handles messages"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param storage The database to read files and write txt files"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String message;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        if(tasks.size() \u003e\u003d index){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            if(!tasks.isCompletedTask(index)) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                Task task \u003d tasks.doneTask(index);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                message \u003d new Duke_Response().DONE_FOUND + \"      \" + task.toString() + \"\\n\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                message \u003d new Duke_Response().DONE_COMPLETED;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            message \u003d new Duke_Response().NOT_FOUND;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        ui.setMessage(message);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CheeSengg": 43
    }
  },
  {
    "path": "src/main/java/Duke/Commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package Duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import Duke.Constant.Duke_Response;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import Duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import Duke.Task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import Duke.Task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import Duke.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class FindCommand extends Command{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private String item;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Constructor for FindCommand"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param item The String input by user for searching of task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public FindCommand(String item){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.item \u003d item;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Finds all the tasks that contains the word that the user input"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param tasks The arraylist of task stored by Duke"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param ui The user interface that handles messages"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param storage The database to read files and write txt files"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        ArrayList\u003cTask\u003e foundTask \u003d tasks.findTask(item);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        if(foundTask.isEmpty()){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            message \u003d new Duke_Response().NOT_FOUND;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            message \u003d new Duke_Response().FIND_FOUND;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            int counter \u003d 1;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            for(Task i : foundTask){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                message +\u003d \"      \" + counter + \".\" + i.toString();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        ui.setMessage(message);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CheeSengg": 45
    }
  },
  {
    "path": "src/main/java/Duke/Commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package Duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import Duke.Constant.Duke_Response;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import Duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import Duke.Task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import Duke.Task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import Duke.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class ListCommand extends Command{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * List out all the task, listing of task starts from 1"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param tasks ArrayList of task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param storage The database to read files and write txt files"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String message;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        if(tasks.isEmpty()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            message \u003d new Duke_Response().LIST_NOT_FOUND;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } else{"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            message \u003d new Duke_Response().LIST_FOUND;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            int counter \u003d 1;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            for (Task i : tasks) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                message +\u003d \"    \" + counter + \".\" + i.toString();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        ui.setMessage(message);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CheeSengg": 31
    }
  },
  {
    "path": "src/main/java/Duke/Constant/Duke_Response.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package Duke.Constant;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class Duke_Response {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public final String LOGO \u003d \"Hello from\\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                                + \" ____        _        \\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public final String SPACES \u003d \"   __________________________________\\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public final String GREET \u003d \"    Hello! I\u0027m Duke\\n    What can I do for you?\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public final String BYE \u003d \"    Bye. Hope to see you again soon!\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public final String LIST_FOUND \u003d \"    Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public final String LIST_NOT_FOUND \u003d \"    ☹ OOPS!!! Your List is currently empty.\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public final String DONE_FOUND \u003d \"    Nice! I\u0027ve marked this task as done:\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public final String DONE_COMPLETED \u003d \"    ☹ OOPS!!! This task has already been completed\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public final String DELETE_FOUND \u003d \"    Noted. I\u0027ve removed this task:\\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public final String FIND_FOUND \u003d \"    Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public final String NOT_FOUND \u003d \"    ☹ OOPS!!! The task cannot be found. \\n\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public final String EXCEPTION \u003d \"    ☹ OOPS!!! That is an invalid input\\n    Please try again. \\n\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public final String ADD \u003d \"    Got it. I\u0027ve added this task:\\n\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CheeSengg": 35
    }
  },
  {
    "path": "src/main/java/Duke/DateFormatter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class DateFormatter {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private final DateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param message the deadline or event time to be processed to give date and time params"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public DateFormatter(String message){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String[] splitStr \u003d message.split(\" \");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        if(splitStr.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            date \u003d formatDate(splitStr[0]);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            time \u003d formatTime(splitStr[1]);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        if(date \u003d\u003d null || time \u003d\u003d null){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            date \u003d message;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            time \u003d null;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private String formatDate(String date){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String[] splitDate \u003d date.split(\"/\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        if(splitDate.length \u003d\u003d 3) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            String day \u003d dayFormat(splitDate[0]);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            String month \u003d monthFormat(splitDate[1]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            String year \u003d splitDate[2];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            if (month \u003d\u003d null || day \u003d\u003d null || !isValidDate(splitDate[0], splitDate[1], splitDate[2]))"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return day + month + year + \", \";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param day the date to be appended with necessary suffix"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return String of the day with its suffix"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private String dayFormat(String day){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        if(day.equals(\"1\") || day.equals(\"21\") || day.equals(\"31\")){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            day \u003d day + \"st of \";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } else if(day.equals(\"2\") || day.equals(\"22\")){"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return day + \"nd of \";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } else if(day.equals(\"3\") || day.equals(\"23\")){"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return day + \"rd of \";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } else if (Integer.parseInt(day) \u003e 31){"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return day + \"th of \";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param month the month to be converted"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return the String format of month"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private String monthFormat(String month){"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        switch (month){"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            case \"1\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                return \"January \";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            case \"2\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                return\"February \";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            case \"3\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                return \"March \";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            case \"4\":"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                return \"April \";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            case \"5\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                return \"May \";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            case \"6\":"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                return \"June \";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            case \"7\":"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                return \"July \";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            case \"8\":"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                return \"August \";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            case \"9\":"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                return \"September \";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            case \"10\":"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                return \"October \";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            case \"11\":"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                return \"November \";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            case \"12\":"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                return \"December \";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param day to be converted to int to check if day is in range for a particular month"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param month for reference to check day is in range for the month"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param year to check for leap year exceptions"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return {@code true} date can be found in the calendar"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     *         {@code false} otherwise"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private boolean isValidDate(String day, String month, String year){"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        int yr \u003d Integer.parseInt(year);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        int mth \u003d Integer.parseInt(month);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        int dy \u003d Integer.parseInt(day);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        if(mth \u003d\u003d 2){"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return (isLeap(yr) \u0026\u0026 dy \u003c\u003d 29) || (!isLeap(yr) \u0026\u0026 dy \u003c\u003d 28);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } else if(mth \u003d\u003d 4|| mth \u003d\u003d 6|| mth \u003d\u003d 9 || mth \u003d\u003d 11){"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return dy \u003c\u003d 30;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return dy \u003c\u003d 31;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param year to check whether its a leap year"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return {@code true} if it is a leap year"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     *         {@code false} otherwise"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private boolean isLeap(int year){"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return year % 400 \u003d\u003d 0 || (year % 4 \u003d\u003d 0 \u0026\u0026 year % 100 !\u003d 0);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param time 24-Hour clock"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return String of 12-Hour clock with correct suffix"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private String formatTime(String time){"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String hour \u003d time.substring(0,2);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String min \u003d time.substring(2,4);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String suffix \u003d (Integer.parseInt(hour) \u003c 12) ? \"am\" : \"pm\";"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        if(Integer.parseInt(hour) \u003e 23 || Integer.parseInt(min) \u003e 59)"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        if(Integer.parseInt(hour) \u003d\u003d 0)"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            hour \u003d \"12\";"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        else if(Integer.parseInt(hour) \u003e 12)"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            hour \u003d Integer.toString(Integer.parseInt(hour) - 12);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        if(min.equals(\"00\"))"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return hour + suffix;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        else"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return hour + \".\" + min + suffix;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String getDateTime(){"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        if(this.time \u003d\u003d null){"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return this.date;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return this.date + this.time;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public boolean isValidDateTime() {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return date !\u003d null \u0026\u0026 time !\u003d null;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CheeSengg": 165
    }
  },
  {
    "path": "src/main/java/Duke/Exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package Duke.Exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public DukeException(String message){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CheeSengg": 7
    }
  },
  {
    "path": "src/main/java/Duke/Parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package Duke.Parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import Duke.Commands.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import Duke.Exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Parse the date and return AddCommand class for Event task type"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param taskType The type of Task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param command Command to be parse to description and dateTime"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return AddCommand for Event task type"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static Command parseEvent(String taskType, String command){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String[] splitStr \u003d command.split(\"/at \", 2);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return new AddCommand(taskType, splitStr[0], splitStr[1]);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Parse the date and return AddCommand class for Deadline task type"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param taskType The type of Task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param command Command to be parse to description and dateTime"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return AddCommand for Deadline task type"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static Command parseDeadline(String taskType, String command){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String[] splitStr \u003d command.split(\"/by \", 2);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return new AddCommand(taskType, splitStr[0], splitStr[1]);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Mark the task indicated by user to be done"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param command The taskNo to be converted to an integer"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return DoneCommand with the index of item to be mark as done"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @throws NumberFormatException"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static Command parseDone(String command) throws NumberFormatException{"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        int index \u003d Integer.parseInt(command);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return new DoneCommand(index);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Delete the task indicated by user"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param command The taskNo to be converted to an integer"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return DeleteCommand with the index of item to be deleted"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @throws NumberFormatException"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static Command parseDelete(String command) throws NumberFormatException{"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        int index \u003d Integer.parseInt(command);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return new DeleteCommand(index);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * To return the correct command given by user, Class method"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param fullCommand Command input by user to be parse"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return The correct Command class as defined by first word"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @throws NumberFormatException"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public static Command parse(String fullCommand) throws NumberFormatException, DukeException{"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String[] splitStr \u003d fullCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        switch (splitStr[0].toLowerCase()){"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                return new AddCommand(splitStr[0], splitStr[1]);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                return parseDeadline(splitStr[0], splitStr[1]);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                return parseEvent(splitStr[0], splitStr[1]);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                return new FindCommand(splitStr[1]);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                return parseDone(splitStr[1]);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                return parseDelete(splitStr[1]);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                return new ByeCommand();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                throw new DukeException(\"Invalid Command\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CheeSengg": 89
    }
  },
  {
    "path": "src/main/java/Duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import Duke.Task.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private File filePath;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Constructor for Storage Class"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Create directory and file in the event that it does not exist"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param filePath File, the path of the duke.txt File"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public Storage(File filePath){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            if(!filePath.getParentFile().exists())"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                filePath.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            if(!filePath.exists())"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                filePath.createNewFile();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } catch (IOException e){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            System.out.println(\"Unable to create file.\\n\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Read all the tasks that are stored in the duke.txt and load into TaskList"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return TaskList with all the tasks that were stored in the duke.txt file"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public TaskList load(){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            FileReader rd \u003d new FileReader(filePath);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(rd);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            String message;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            int counter \u003d 0;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            while((message \u003d br.readLine()) !\u003d null){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                String[] arrStr \u003d message.split(\" \\\\| \");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                if(arrStr.length \u003d\u003d 3){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    tasks.add(new Todo(arrStr[2]));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                } else if (arrStr[0].equals(\"D\")){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    tasks.add(new Deadline(arrStr[2], arrStr[3]));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    tasks.add(new Event(arrStr[2], arrStr[3]));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                if(arrStr[1].equals(\"1\")){"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    tasks.get(counter).markAsDone();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            br.close();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            rd.close();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } catch (IOException e){"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            System.out.println(\"Unable to load file.\\n\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Write to duke.txt all the tasks that has been stored in TaskList"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param tasks The TaskList with all the added tasks. To be written into txt file for storage"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void write(TaskList tasks){"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            filePath.delete();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            filePath.createNewFile();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            FileWriter wr \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            for(Task i : tasks){"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                wr.write(i.writeToFile() + \"\\n\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            wr.close();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } catch (IOException e){"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            System.out.println(\" BYE, sorry you suck.\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CheeSengg": 87
    }
  },
  {
    "path": "src/main/java/Duke/Task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package Duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public final String SYMBOL \u003d \"[D]\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Constructor for Deadline Task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param description The deadline\u0027s task name"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param by The dateTime of the deadline"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public Deadline(String description, String by){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return the expected format of String message for this task"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return SYMBOL + super.toString() + \" (by: \" + this.by + \")\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Used when using storage.write"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * For reference to store the correct task type for each task"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return The Symbol to reference to their task type"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String getSymbol() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return this.SYMBOL;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * The String format to be written into the duke.txt File for each task"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return String format for task to be written into the duke.txt File"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return String.format(\"D | %d | %s | %s\",  (isCompleted() ? 1 : 0), this.getDescription(), this.by);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CheeSengg": 43
    }
  },
  {
    "path": "src/main/java/Duke/Task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package Duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public final String SYMBOL \u003d \"[E]\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Constructor for Event task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param description The event name"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param date The dateTime of the event"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public Event(String description, String date){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.at \u003d date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return return the expected format of String message for this task"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return this.SYMBOL + super.toString() + \" (at: \" + this.at + \")\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Used when using storage.write"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * For reference to store the correct task type for each task"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return The Symbol to reference to their task type"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String getSymbol() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return this.SYMBOL;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * The String format to be written into the duke.txt File for each task"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return String format for task to be written into the duke.txt File"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return String.format(\"E | %d | %s | %s\",  (isCompleted() ? 1 : 0), this.getDescription(), this.at);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CheeSengg": 43
    }
  },
  {
    "path": "src/main/java/Duke/Task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package Duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private boolean isCompleted \u003d false;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * To make task as done"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        isCompleted \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * To check if task is done"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return {@code true} Task is completed"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     *          {@code false} Task is incomplete"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public boolean isCompleted() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return isCompleted;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Get the task description"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return String of the task description"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String getDescription(){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Get the corresponding Icon according to whether task is completed"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return If task is complete get TICK, If task is incomplete get CROSS"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private String getStatusIcon(){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return (isCompleted ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return the expected format of String message for this task"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return  \"[\" + getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public abstract String getSymbol();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public abstract String writeToFile();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CheeSengg": 54
    }
  },
  {
    "path": "src/main/java/Duke/Task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package Duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class TaskList extends ArrayList\u003cTask\u003e {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Get the task for index based on 1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param index the index of task to be queried, index starts from 1"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return The task with index starting from 0"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Task getTask(int index){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return this.get(index - 1);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Delete Task based on user input"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param index the index of task to be deleted, index starts from 1"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return The task that is deleted"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public Task deleteTask(int index){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return this.remove(index-1);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param index The index of task to check if it is already completed, index starts from 1"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return {@code true} The task has been marked as completed"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     *          {@code false} The task has not been mark as completed"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public boolean isCompletedTask(int index){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return getTask(index).isCompleted();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Set Task as done based on user input"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param index the index of task to be set as done, index starts from 1"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return The task that is completed and set as done"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public Task doneTask(int index){"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        Task refTask \u003d this.getTask(index);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        refTask.markAsDone();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return refTask;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Finds all the task that contains the String and append task to new arraylist"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param item String that contains the item user wants to find"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return New ArrayList with task that contains the String user input"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public ArrayList\u003cTask\u003e findTask(String item){"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        ArrayList\u003cTask\u003e foundTask \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        for(Task i : this){"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            if(i.getDescription().contains(item))"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                foundTask.add(i);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return foundTask;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CheeSengg": 64
    }
  },
  {
    "path": "src/main/java/Duke/Task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package Duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "Todo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public final String SYMBOL \u003d \"[T]\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Constructor for Todo task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param description The deadline\u0027s task name"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public Todo(String description){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return the expected format of String message for this task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return SYMBOL + super.toString() + \"\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Used when using storage.write"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * For reference to store the correct task type for each task"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return The Symbol to reference to their task type"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String getSymbol() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return this.SYMBOL;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * The String format to be written into the duke.txt File for each task"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return String format for task to be written into the duke.txt File"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return String.format(\"T | %d | %s\",  (isCompleted() ? 1 : 0), this.getDescription());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CheeSengg": 41
    }
  },
  {
    "path": "src/main/java/Duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import Duke.Constant.Duke_Response;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Duke_Response dr \u003d new Duke_Response();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     *  Constructor for Ui, Default value of message is greetings"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public Ui(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.message \u003d dr.SPACES + dr.GREET + dr.SPACES;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * To read in the command by user to be processed"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return String input by user to be stored as command"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String readCommand(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Set messages after Command.execute is invoked"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param message The message that Duke will respond with after processing a command"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void setMessage(String message) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.message \u003d dr.SPACES + message + dr.SPACES;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Print out the Duke LOGO"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void showWelcome(){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        System.out.println(dr.LOGO);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        new Ui().showLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Print out the messages in the format that Duke will respond with"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void showLine(){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        System.out.println(this.message);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CheeSengg": 50
    }
  }
]

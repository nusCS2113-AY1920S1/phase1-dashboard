[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    Date deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    public Deadline(String name, Date deadline){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        super(name);//super calls the parent class constructor"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        this.deadline\u003ddeadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        return \"[D][\"+showDoneStatus()+\"]\"+ getName() + \" (by: \"+deadline+\")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jasonchanwq": 15
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    //instance fields"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    String taskType;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    boolean checkbox;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e(); //create list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    //constructor method"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    public Duke(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    //main method"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        Scanner s \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        String cinLine\u003d\" \";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        while(!cinLine.equals(\"bye\")){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "            cinLine \u003d s.nextLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "            int i \u003d cinLine.indexOf(\u0027 \u0027);//if (i\u003d\u003d-1) or use if(i!\u003d-1)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "            if(cinLine.equals(\"list\")){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                //method to print everything"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                for(int j\u003d0;j\u003ctasks.size();j++){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                    System.out.println(\"    \" + (j+1) + \".\" + tasks.get(j));// do not need .getName() and .showDoneStatus because of toString"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "            else if(cinLine.equals(\"bye\")){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "            else"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "            {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                try{"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                    String cinFirstWord \u003d cinLine.substring(0,i);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                    String cinLineLessFirstWord \u003d cinLine.substring(i+1);//less SPACE"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                if(cinFirstWord.equals(\"done\")){"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                    int number \u003d Integer.parseInt(cinLineLessFirstWord);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                    tasks.get(number-1).setDone();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                else if(cinFirstWord.equals(\"find\")){"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                    for(int j\u003d0;j\u003ctasks.size();j++){"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                        String find \u003d tasks.get(j).getName();   //very important"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                        int k \u003d find.indexOf(cinLineLessFirstWord);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                        if(k!\u003d-1) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                            System.out.println(\"    \" + (j + 1) + \".\" + tasks.get(j));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                else if(cinFirstWord.equals(\"delete\")){"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                    int number \u003d Integer.parseInt(cinLineLessFirstWord);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                    tasks.remove(number-1);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                else if(cinFirstWord.equals(\"todo\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                    if(cinLineLessFirstWord.length()\u003d\u003d0){"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                        System.out.println(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                    Task task \u003d new Todo(cinLineLessFirstWord);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                    tasks.add(task);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                    System.out.println(\"Now you have \" + tasks.size() + \" task(s) in the list\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                    //System.out.println(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                else if(cinFirstWord.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                    int j \u003d cinLineLessFirstWord.indexOf(\"/by\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                    try{"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                        String cinDeadline \u003d cinLineLessFirstWord.substring(j+4);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                        String cinDeadlineLessDate \u003d cinLineLessFirstWord.substring(0,j-1);//less space"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                        String sDate1\u003dcinDeadline;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                        Date date1\u003dnew SimpleDateFormat(\"dd/MM/yyyy hhmm\").parse(sDate1);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                        Task task \u003d new Deadline(cinDeadlineLessDate,date1);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                        tasks.add(task);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                        System.out.println(\"Now you have \" + tasks.size() + \" task(s) in the list\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                    catch(StringIndexOutOfBoundsException ex){"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                        System.out.println(\"Sorry no /by detected for deadline!\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                    } catch (ParseException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                        e.printStackTrace();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                else if(cinFirstWord.equals(\"event\")) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                    int j \u003d cinLineLessFirstWord.indexOf(\"/at\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                    try{"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                        String cinEvent \u003d cinLineLessFirstWord.substring(j+4);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                        String cinEventLessDate \u003d cinLineLessFirstWord.substring(0,j-1);//less space"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                        Task task \u003d new Event(cinEventLessDate,cinEvent);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                        tasks.add(task);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                        System.out.println(\"Now you have \" + tasks.size() + \" task(s) in the list\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                    catch(StringIndexOutOfBoundsException ex){"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                        System.out.println(\"Sorry no /at detected for event!\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                else{"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                    System.out.println( \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                catch (StringIndexOutOfBoundsException ex){"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                System.out.println(\"☹ OOPS!!! The description cannot be empty.\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        /////////////////////////////////////////////////////////////////"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        try(FileWriter fileWriter \u003d new FileWriter(\"duke.txt\")) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "            //inherited method from java.io.Writer"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "            for(int j\u003d0;j\u003ctasks.size();j++) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                fileWriter.write(\"    \" + (j + 1) + \".\" + tasks.get(j));"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                fileWriter.write(System.lineSeparator()); //new line"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        /////////////////////////////////////////////////////////////////"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "}"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "/*"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "import java.sql.SQLOutput;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "*/"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    String name;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    boolean isDone;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    String tickCross;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    public void Task(String description){"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        name \u003d taskName;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    */"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    public void addToDo(String toDoTask){"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        name\u003d taskName;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        System.out.println(\"    Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        System.out.println(\"    [T][✗] \"+name);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    public void addDeadline(String deadlineTask, String date){"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        name\u003d taskName;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    public void addEvent(String eventTask, String date, String time){"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        name\u003d taskName;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    */"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    //public static void main(String[] args) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        *//*"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        System.out.println(\"    Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        System.out.println(\"    What can I do for you?\");"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        Scanner scanner;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        String clone \u003d \"\";"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        String clone2 \u003d \"\";"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        int clone_2;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        String state \u003d \"✗\";"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        List\u003cString\u003e EntryList \u003d new ArrayList\u003cString\u003e(); //create list"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        List\u003cString\u003e stateList \u003d new ArrayList\u003cString\u003e(); //create list"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        while(!clone.equals(\"bye\"))"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "            clone \u003d scanner.next();// the cin equivalent for c++"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "            if(!clone.equals(\"list\") \u0026\u0026 !clone.equals(\"done\"))"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "            {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                EntryList.add(clone);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                stateList.add(\"✗\");"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "            if(clone.equals(\"done\"))"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "            {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                System.out.println(\"1\");"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                clone2 \u003d scanner.next();"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                clone_2 \u003d Integer.parseInt(clone2);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                stateList.set((clone_2-1),\"✓\");"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                System.out.println(\"    Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                System.out.println(\"    [\"+ stateList.get(clone_2-1) + \"] \"+ EntryList.get(clone_2-1));"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "            else if(clone.equals(\"list\"))"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "            {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                for(int i\u003d0;i\u003cEntryList.size();i++){"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                    System.out.println(\"    \" + (i+1) + \".[\" + stateList.get(i) + \"] \" + EntryList.get(i));"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "            else if(!clone.equals(\"bye\"))"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "            {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                System.out.println(\"    added: \" + clone);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "            else"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "            {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                System.out.println(\"    Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "}*/"
      }
    ],
    "authorContributionMap": {
      "jasonchanwq": 243,
      "-": 9
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    //contructor"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    public DukeException(String message){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jasonchanwq": 6
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    String event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    public Event(String name, String event){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        super(name);//super calls the parent class constructor"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        this.event\u003devent;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        return \"[E][\"+showDoneStatus()+\"]\"+ getName() + \" (at: \"+event+\")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jasonchanwq": 13
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "     * constuctor method"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    public Task(String name){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        this.name \u003d name;   // this. refers to instance variable"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    public void setName(String name) {//to change name"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    public void setDone(){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    public String showDoneStatus(){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        return isDone?\"✓\":\"✗\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "jasonchanwq": 29
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    public Todo(String name){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        super(name);//super calls the parent class constructor"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        return \"[T][\"+showDoneStatus()+\"]\"+ getName();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jasonchanwq": 11
    }
  }
]

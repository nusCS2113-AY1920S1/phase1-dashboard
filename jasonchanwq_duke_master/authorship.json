[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": " * Deadline represents a deadline-type Task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": " * Deadline is a child of Task"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    protected LocalDateTime dateBy;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    public Deadline(String name, LocalDateTime deadline){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        this.dateBy \u003ddeadline;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "     * Returns the date of the deadline"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "     * @return The dateBy of the dateline"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    public LocalDateTime getDateBy() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        return dateBy;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "     * Sets the date of the deadline"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "     * @param dateBy This is the dateBy in d/MM/yyyy HHmm"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    public void setDateBy(LocalDateTime dateBy) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        this.dateBy \u003d dateBy;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "     * Returns the date of the deadline in d/MM/yyyy HHmm format"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "     * @return The date of the deadline in d/MM/yyyy HHmm format"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    public String showDateBy() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        return getDateBy().format(outputFormatter);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "     * Returns a string that represents the object"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "     * @return This returns the task type, showDoneStatus and the name of object"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        return \"[D][\"+showDoneStatus()+\"]\"+ getName() + \" (by: \"+ dateBy.format(outputFormatter)+\")\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jasonchanwq": 47
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": " * Duke.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": " * @author Chan Wei Qiang Jason"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    protected Ui ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    protected TaskList tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    //constructor method"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    public Duke(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    //main method"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        //storage.loadTask();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        Scanner s \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        String cinLine\u003d\" \";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        while(!cinLine.equals(\"bye\")){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "            cinLine \u003d s.nextLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "            int i \u003d cinLine.indexOf(\u0027 \u0027);//if (i\u003d\u003d-1) or use if(i!\u003d-1)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "            if(i\u003d\u003d-1)   //meaning the input consists of a single word"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "            {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                singleWordEntered(cinLine);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "            else    //meaning the input consists of more than a word"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "            {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                    //String cinFirstWord \u003d cinLine.substring(0,i);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                    //String cinLineLessFirstWord \u003d cinLine.substring(i+1);//less SPACE"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                    String cinFirstWord \u003d parser.getFirstWord(cinLine);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                    String cinLineLessFirstWord \u003d parser.getCinLessFirstWord(cinLine);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                    switch (cinFirstWord) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                        case \"done\": {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                            int number \u003d Integer.parseInt(cinLineLessFirstWord);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                            //TaskList.getTaskList(number - 1).setDone();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                            tasks.doneTask(number);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                        case \"find\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                            for (int j \u003d 0; j \u003c tasks.getTaskListSize(); j++) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                                String find \u003d tasks.getTaskName(j);   //very important"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                                int k \u003d find.indexOf(cinLineLessFirstWord);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                                if (k !\u003d -1) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                                    System.out.println(\"    \" + (j + 1) + \".\" + tasks.getTask(j));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                        case \"delete\": {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                            int number \u003d Integer.parseInt(cinLineLessFirstWord);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                            tasks.deleteTask(number);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                        case \"todo\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                            if (cinLineLessFirstWord.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                                ui.empty(\"todo\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                                Task task \u003d new Todo(cinLineLessFirstWord);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                                tasks.addTask(task);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                                ui.showListSize(tasks.getTaskListSize());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                        case \"deadline\": {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                            if (cinLineLessFirstWord.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                                ui.empty(\"deadline\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                            int j \u003d cinLineLessFirstWord.indexOf(\"/by\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                                String cinDeadline \u003d cinLineLessFirstWord.substring(j + 4);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                                String cinDeadlineLessDate \u003d cinLineLessFirstWord.substring(0, j - 1);//less space"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                                DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy HHmm\", Locale.ENGLISH);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                                LocalDateTime date1 \u003d LocalDateTime.parse(cinDeadline, inputFormatter);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                                Task task \u003d new Deadline(cinDeadlineLessDate, date1);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                                tasks.addTask(task);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                                ui.showListSize(tasks.getTaskListSize());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                            } catch (StringIndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                                ui.showNoDeadlineDetected();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                        case \"event\": {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                            if (cinLineLessFirstWord.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                                ui.empty(\"event\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                            int j \u003d cinLineLessFirstWord.indexOf(\"/at\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                                String cinEvent \u003d cinLineLessFirstWord.substring(j + 4);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                                String cinEventLessDate \u003d cinLineLessFirstWord.substring(0, j - 1);//less space"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                                DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy HHmm\", Locale.ENGLISH);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                                LocalDateTime date1 \u003d LocalDateTime.parse(cinEvent, inputFormatter);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                                Task task \u003d new Event(cinEventLessDate, date1);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                                tasks.addTask(task);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                                ui.showListSize(tasks.getTaskListSize());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                            } catch (StringIndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                                ui.showNoEventDetected();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                        default:"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                            ui.showUnknownCommand();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        storage.saveTask();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    public void singleWordEntered(String cinLine) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        switch(cinLine){"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                //method to print everything"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                for(int j\u003d0;j\u003ctasks.getTaskListSize();j++){"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                    System.out.println(\"    \" + (j+1) + \".\" + tasks.getTask(j));// do not need .getName() and .showDoneStatus because of toString"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                ui.showBye();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                ui.showUnknownCommand();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "jasonchanwq": 142,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    //constructor"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    public DukeException(String message){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jasonchanwq": 6
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": " * Event represents a event-type Task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": " * Event is a child of Task"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    protected LocalDateTime at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    public Event(String name, LocalDateTime time){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        super(name);//super calls the parent class constructor"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        this.at\u003dtime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "     * Returns a string that represents the event timing when called"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "     * @return This returns the event timing"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    public LocalDateTime getEventAt(){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    public String showEventAt() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        return getEventAt().format(outputFormatter);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "     * Returns a string that represents the object"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "     * @return This returns the task type, showDoneStatus and the name of object"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        return \"[E][\"+showDoneStatus()+\"]\"+ getName() + \" (at: \"+showEventAt()+\")\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jasonchanwq": 34
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    public Parser(){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    public String getFirstWord(String cinLine){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        String str \u003d cinLine;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        String[] arrOfStr \u003d str.split(\" \", 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        return arrOfStr[0];"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    public String getCinLessFirstWord(String cinLine){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        String str \u003d cinLine;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        String[] arrOfStr \u003d str.split(\" \", 2);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        return arrOfStr[1];"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jasonchanwq": 17
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "public class Storage extends Duke {//might be wrong need to edit this"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    List\u003cTask\u003e previousList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    // constructor"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    public void saveTask() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        try(FileWriter fileWriter \u003d new FileWriter(\"duke.txt\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "            //inherited method from java.io.Writer"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "            for(int j\u003d0;j\u003ctasks.getTaskListSize();j++) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                fileWriter.write(\"    \" + (j + 1) + \".\" + tasks.getTask(j));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                fileWriter.write(System.lineSeparator()); //new line"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    public List\u003cTask\u003e loadTask() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "            Scanner scanner \u003d new Scanner(\"duke.txt\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "            while (scanner.hasNext()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                String cinLine \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                int i \u003d cinLine.indexOf(\u0027 \u0027);//if (i\u003d\u003d-1) or use if(i!\u003d-1)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                String cinFirstWord \u003d cinLine.substring(0, i);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                String cinLineLessFirstWord \u003d cinLine.substring(i + 1);//less SPACE"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                if (cinFirstWord.equals(\"todo\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                    Task task \u003d new Todo(cinLineLessFirstWord);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                    previousList.add(task);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                } else if (cinFirstWord.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                    int j \u003d cinLineLessFirstWord.indexOf(\"/by\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                    try{"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                        String cinDeadline \u003d cinLineLessFirstWord.substring(j+4);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                        String cinDeadlineLessDate \u003d cinLineLessFirstWord.substring(0,j-1);//less space"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                        String sDate1\u003dcinDeadline;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                        DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy hhmm\", Locale.ENGLISH);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                        LocalDateTime date1 \u003d LocalDateTime.parse(sDate1, inputFormatter);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                        Task task \u003d new Deadline(cinDeadlineLessDate,date1);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                        previousList.add(task);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                    catch(StringIndexOutOfBoundsException ex){"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                        System.out.println(\"error\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                } else if (cinFirstWord.equals(\"event\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                    int j \u003d cinLineLessFirstWord.indexOf(\"/at\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                    String cinEvent \u003d cinLineLessFirstWord.substring(j + 4);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                    String cinEventLessDate \u003d cinLineLessFirstWord.substring(0, j - 1);//less space"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                    String sDate1\u003dcinEvent;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                    DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy HHmm\", Locale.ENGLISH);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                    LocalDateTime date1 \u003d LocalDateTime.parse(sDate1, inputFormatter);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                    Task task \u003d new Event(cinEventLessDate, date1);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                    previousList.add(task);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "            return previousList;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    }"
      }
    ],
    "authorContributionMap": {
      "jasonchanwq": 74
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy HHmm\", Locale.ENGLISH);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    //constructor method"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    Task(String name){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "     * Return the name of the task when called."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "     * @return The name of the task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "     * Used to set the name of the task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "     * @param name The name of the task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    public void setName(String name) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "     * Used to set the isDone to true."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    public void setDone(){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "     * Returns the status of the task, ✓ if the task is done, ✗ if the task is not done"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "     * @return The showDoneStatus of the task"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    public String showDoneStatus(){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        return isDone?\"✓\":\"✗\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "jasonchanwq": 47
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "public class TaskList{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    public ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    public int getTaskListSize() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    public String getTaskName(int j){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        return tasks.get(j).getName();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    public String getTask(int j){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        return tasks.get(j).toString();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    public void doneTask(int index){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        int number \u003d index;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        tasks.get(index-1).setDone();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    public void deleteTask(int index){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        int number \u003d index;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        tasks.remove(index-1);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    public void addTask(Task t){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jasonchanwq": 33
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": " * Todo represents a todo-type Task"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": " * Todo is a child of Task"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    Todo(String name){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        super(name);//super calls the parent class constructor"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "     * Returns a string that represents the object"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "     * @return This returns the task type, showDoneStatus and the name of object"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        return \"[T][\"+showDoneStatus()+\"]\"+ getName();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jasonchanwq": 20
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    public Ui(){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "     * Prints the welcome message"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    public void showWelcome(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        System.out.println(\"    Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        System.out.println(\"    What can I do for you?\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    public void showListSize(int size){ System.out.println(\"Now you have \" + size + \" task(s) in the list\");}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "     * Prints error message for unknown command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    public void showUnknownCommand(){ System.out.println( \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\"); }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "     * Prints error message for when deadline not detected."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    public void showNoDeadlineDetected(){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        System.out.println(\"Sorry no /by detected for deadline!\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "     * Prints error message for when event not detected"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    public void showNoEventDetected(){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        System.out.println(\"Sorry no /at detected for event!\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    public void empty(String message){System.out.println(\"☹ OOPS!!! The description of a \"+message+\" cannot be empty.\");}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    public void showBye(){ System.out.println(\"Thank you for using duke!\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jasonchanwq": 48
    }
  },
  {
    "path": "src/test/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "class DeadlineTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    String sDate1\u003d \"2/12/2019 1800\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy HHmm\", Locale.ENGLISH);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    LocalDateTime date1 \u003d LocalDateTime.parse(sDate1, inputFormatter);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    private Deadline deadline \u003d new Deadline(\"first deadline\",date1);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    void testGetName() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        assertEquals(\"first deadline\", deadline.getName());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        assertEquals(\"[D][✗]first deadline (by: 2/12/2019 1800)\",\"[D][\"+ deadline.showDoneStatus()+\"]\"+ deadline.getName()+\" (by: \"+ deadline.showDateBy()+\")\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jasonchanwq": 23
    }
  },
  {
    "path": "src/test/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "class EventTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    String sDate1\u003d\"2/12/2019 1800\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy HHmm\", Locale.ENGLISH);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    LocalDateTime date1 \u003d LocalDateTime.parse(sDate1, inputFormatter);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    private Event event \u003d new Event(\"first event\", date1);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    void testGetName() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        assertEquals(\"first event\", event.getName());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        assertEquals(\"[E][✗]first event (at: 2/12/2019 1800)\", \"[E][\"+ event.showDoneStatus()+\"]\"+ event.getName()+\" (at: \"+event.showEventAt()+\")\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jasonchanwq": 22
    }
  },
  {
    "path": "src/test/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "class TodoTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    private Todo todo \u003d new Todo(\"first todo\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    void testGetName() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        assertEquals(\"first todo\", todo.getName());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "        assertEquals(\"[T][✗]first todo\", \"[T][\"+ todo.showDoneStatus()+\"]\"+ todo.getName());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jasonchanwq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jasonchanwq": 16
    }
  }
]

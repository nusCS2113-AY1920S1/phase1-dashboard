[
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": " * Represents a command class to add a task. The \u003ccode\u003eAddCommand\u003c/code\u003e class"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": " * extends from the \u003ccode\u003eCommand\u003c/code\u003e class to represent user instruction"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": " * to add a new \u003ccode\u003eToDo\u003c/code\u003e, \u003ccode\u003eDeadline\u003c/code\u003e or \u003ccode\u003eEvent\u003c/code\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": " * task to the \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * A new task to be added"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    private Task t;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * Constructs a \u003ccode\u003eAddCommand\u003c/code\u003e object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @param tt Specifies the task to be added."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    public AddCommand(Task tt) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        this.t \u003d tt;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * Indicates whether Duke should exist"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @return A boolean. True if the command tells Duke to exit, false"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     *          otherwise."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * run the command with the respect TaskList, UI, and storage."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @param tasks The task list where tasks are saved."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @param ui The user interface."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @param storage object that handles local text file update"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    public void run(TaskList tasks, Ui ui, Storage storage) throws DukeExceptionThrow {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        tasks.addTask(t);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        ui.taskAdded(t, tasks.getSize());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        storage.save(tasks.fullTaskList());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WEIFENG-NUSCEG": 41
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": " * Represents a command class received from user. It is an abstract"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": " * class that can not be instantiated, its child class represents different kind"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": " * of user command"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * run the command with the respect TaskList, UI, and storage."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @param tasks The task list where tasks are saved."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @param ui The user interface."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @param storage object that handles local text file update"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @throws DukeExceptionThrow throw exception during execution of the"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     *      command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    abstract void run(TaskList tasks, Ui ui, Storage storage) throws DukeExceptionThrow;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * Decide whether duke should exist."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @return A boolean. True if the command tells Duke to exit, false"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     *          otherwise."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    abstract boolean isExit();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WEIFENG-NUSCEG": 24
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": " * Represents a task with a deadline. It is"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": " * extended from the \u003ccode\u003eTask\u003c/code\u003e class."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * A string that represents the deadline of the task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * Constructs a \u003ccode\u003eDeadline\u003c/code\u003e object. Date and time are parsed and"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * stored in \u003ccode\u003edateTime\u003c/code\u003e field if input is of \"dd/MM/yyyy HHmm\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * format."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @param description A string that describes the specific"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     *          description of task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @param by A string that specifies the deadline of the"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     *          task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    public Deadline(String description, String by)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * Returns a string pattern to the user output"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @return A string which displays the type,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     *          description and deadline of the task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "            return \"[D]\" + super.printStatus() + \" (by: \" + super.timeFormatter(by) + \")\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * Returns a string with the following format to be read from a local file."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @return A string in a specific format to be read from a local file."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    public String txtFormat() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        return \"D | \" + (this.isDone ? \"1\" : \"0\") + \" | \" + this.description + \" | \" + super.timeFormatter(by);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * Returns a string with the following format to be stored in a local file"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @return A string in a specific format to be stored in a local file."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    public String writeTxt(){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        return \"D | \" + (this.isDone ? \"1\" : \"0\") + \" | \" + this.description + \" | \" + this.by;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WEIFENG-NUSCEG": 54
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": " * Represents a command to delete a task. The \u003ccode\u003eDeleteCommand\u003c/code\u003e class"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": " * extends from the \u003ccode\u003eCommand\u003c/code\u003e class to represent user instruction"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": " * to delete an task from task list."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * The index of the task to be deleted."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    private int Id;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * Constructs a \u003ccode\u003eDeleteCommand\u003c/code\u003e object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @param taskId Specifies the index of the task to be deleted."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    public DeleteCommand(int taskId) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        this.Id \u003d taskId;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * Indicates whether Duke should exist"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @return A boolean. True if the command tells Duke to exit, false"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     *          otherwise."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * run the command with the respect TaskList, UI, and storage."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @param tasks The task list where tasks are saved."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @param ui The user interface."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @param storage object that handles local text file update"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    public void run(TaskList tasks, Ui ui, Storage storage) throws DukeExceptionThrow {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "            Task t \u003d tasks.getTask(Id);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "            tasks.deleteTask(Id);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "            ui.taskRemoved(t, tasks.getSize());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "            storage.save(tasks.fullTaskList());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        catch (IndexOutOfBoundsException e)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WEIFENG-NUSCEG": 47
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": " * Represents a command to mark a task as done. The \u003ccode\u003eDoneCommand\u003c/code\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": " * class extends from the \u003ccode\u003eCommand\u003c/code\u003e class to represent user"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": " * instruction to mark an existing task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * The index of the task to be marked as done."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    private int Id;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * Constructs a \u003ccode\u003eDoneCommand\u003c/code\u003e object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @param taskId Specifies the index of the task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    public DoneCommand(int taskId) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        this.Id \u003d taskId;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * Indicates whether Duke should exist"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @return A boolean. True if the command tells Duke to exit, false"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     *          otherwise."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * run the command with the respect TaskList, UI, and storage."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @param tasks The task list where tasks are saved."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @param ui The user interface."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @param storage object that handles local text file update"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    public void run(TaskList tasks, Ui ui, Storage storage) throws DukeExceptionThrow {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        try"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "            Task t \u003d tasks.getTask(Id);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "            t.markAsDone();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "            storage.save(tasks.fullTaskList());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "            ui.markedAsDone(t);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        catch (IndexOutOfBoundsException e)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WEIFENG-NUSCEG": 48
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "import java.net.URL;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": " * Represents \u003ccode\u003eDuke\u003c/code\u003e, a Personal Assistant to help"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": " * users tracking their progress."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * A \u003ccode\u003eStorage\u003c/code\u003e object that handles reading tasks from a local"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * file and saving them to the same file."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * A \u003ccode\u003eTaskList\u003c/code\u003e object that deals with add, delete, mark as done,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * find functions of a list of tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * A \u003ccode\u003eUi\u003c/code\u003e object that deals with interactions with the user."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    private  Ui ui;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * Constructs a \u003ccode\u003eDuke\u003c/code\u003e object with a relative file path."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * Initialize the user interface and reads tasks from the specific text file."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @param filePath A string that represents the path of the local file"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     *          used for storing tasks."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        } catch (DukeExceptionThrow e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * Runs the \u003ccode\u003eDuke\u003c/code\u003e program."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * Reads user input until a \"bye\" message is received."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                Command c \u003d Parser.Parse(fullCommand);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                c.run(tasks, ui, storage);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "            } catch (DukeExceptionThrow e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * Starts the \u003ccode\u003eDuke\u003c/code\u003e program by passing in a specific file"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * path."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @param args The command line arguments."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        new Duke(\"./data/duke.txt\").run();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WEIFENG-NUSCEG": 71,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeExceptionThrow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "class DukeExceptionThrow extends Exception"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "{"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    public DukeExceptionThrow(String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WEIFENG-NUSCEG": 6
    }
  },
  {
    "path": "src/main/java/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": " * Represents a task with a event. It is"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": " * extended from the \u003ccode\u003eTask\u003c/code\u003e class."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "public class Events extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * A string that represents the time of the event."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * Constructs a \u003ccode\u003eEvent\u003c/code\u003e object. Date and time are parsed and"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * stored in \u003ccode\u003edateTime\u003c/code\u003e field if input is of \"dd/MM/yyyy HHmm\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * format."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @param description A string that saves the description of the task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @param at A string that specifies the time of the event."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    public Events(String description, String at) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * Returns a string pattern to the user output"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @return A string which displays the type,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     *          description and deadline of the task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        return \"[E]\" + super.printStatus() + \" (at: \" + super.timeFormatter(at) + \")\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * Returns a string with the following format to be read from a local file."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @return A string in a specific format to be read from a local file."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    public String txtFormat() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        return \"E | \" + (this.isDone ? \"1\" : \"0\") + \" | \" + this.description + \" | \" + super.timeFormatter(at);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * Returns a string with the following format to be stored in a local file"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @return A string in a specific format to be stored in a local file."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    public String writeTxt(){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        return \"E | \" + (this.isDone ? \"1\" : \"0\") + \" | \" + this.description + \" | \" + this.at;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WEIFENG-NUSCEG": 49
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": " * Represents a command to exit Duke. The \u003ccode\u003eExitCommand\u003c/code\u003e class"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": " * extends from the \u003ccode\u003eCommand\u003c/code\u003e class for the user to quit the"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": " * program"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * Constructs a \u003ccode\u003eExitCommand\u003c/code\u003e object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * Indicates whether Duke should exist"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @return A boolean. True if the command tells Duke to exit, false"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     *          otherwise."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * run the command with the respect TaskList, UI, and storage."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @param tasks The task list where tasks are saved."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @param ui The user interface."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @param storage object that handles local text file update"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    public void run(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        ui.exitInformation();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WEIFENG-NUSCEG": 32
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": " * Represents a command to find a certain task from Duke\u0027s task list."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": " * The \u003ccode\u003eExitCommand\u003c/code\u003e class extends from the \u003ccode\u003eCommand\u003c/code\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": " * class for the user to find a specific task object from the storage."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * Name of the task to be found."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    private String taskName;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * Constructs a \u003ccode\u003eFindCommand\u003c/code\u003e object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @param name Specifies the name of the task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    public FindCommand(String name) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        this.taskName \u003d name;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * Indicates whether Duke should exist"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @return A boolean. True if the command tells Duke to exit, false"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     *          otherwise."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * run the command with the respect TaskList, UI, and storage."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @param tasks The task list where tasks are saved."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @param ui The user interface."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @param storage object that handles local text file update"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    public void run(TaskList tasks, Ui ui, Storage storage) throws DukeExceptionThrow {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        ui.taskFound(tasks.fullTaskList(), taskName);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WEIFENG-NUSCEG": 38
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": " * Represents a command to list all existing tasks in the task list. The"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": " * \u003ccode\u003eListCommand\u003c/code\u003e class extends from the \u003ccode\u003eCommand\u003c/code\u003e class"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": " * for the user to view the entire task list from Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "class ListCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * Constructs a \u003ccode\u003eListCommand\u003c/code\u003e object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * Indicates whether Duke should exist"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @return A boolean. True if the command tells Duke to exit, false"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     *          otherwise."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * run the command with the respect TaskList, UI, and storage."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @param tasks The task list where tasks are saved."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @param ui The user interface."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @param storage object that handles local text file update"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    public void run(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        ui.listTasks(tasks);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WEIFENG-NUSCEG": 32
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": " * Represents a \u003ccode\u003eParser\u003c/code\u003e that parses user input into a specific"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": " * type of \u003ccode\u003eCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    private static String[] substring;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * Parses a \u003ccode\u003eTask\u003c/code\u003e from a string array."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @param ss The string array to be parsed."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @return The \u003ccode\u003eCommand\u003c/code\u003e received from user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    public static Command Parse(String ss) throws DukeExceptionThrow"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        String[] command \u003d ss.split(\" \", 2);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        switch (command[0]) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                try{"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                int i \u003d Integer.parseInt(command[1]);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                return new DoneCommand(i);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                }catch(Exception e){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                    throw new DukeExceptionThrow(e.getMessage());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                try{"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                int x \u003d Integer.parseInt(command[1]);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                return new DeleteCommand(x);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                }catch(Exception e){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                    throw new DukeExceptionThrow(e.getMessage());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                try{"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                ToDos t \u003d new ToDos(command[1]);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                return new AddCommand(t);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                }catch(Exception e){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                    throw new DukeExceptionThrow(e.getMessage());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                try{"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                    String[] temp \u003d command[1].split(\" /by \");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                    Deadline d \u003d new Deadline(temp[0], temp[1]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                    return new AddCommand(d);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                }catch(Exception e){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                    throw new DukeExceptionThrow(e.getMessage());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                try{"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                String[] temp1 \u003d command[1].split(\" /at \");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                Events z \u003d new Events(temp1[0], temp1[1]);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                return new AddCommand(z);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                }catch(Exception e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                    throw new DukeExceptionThrow(e.getMessage());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                try{"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                return new FindCommand(command[1]);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                }catch(Exception e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                    throw new DukeExceptionThrow(e.getMessage());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                return new ExitCommand();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                throw new DukeExceptionThrow(\"Unrecognized user input!\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WEIFENG-NUSCEG": 70
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": " * Represents a \u003ccode\u003eStorage\u003c/code\u003e class that deals with reading tasks from"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": " * a file and saving tasks in the file."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * A string that represents a relative file path from the project folder."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * Constructs a \u003ccode\u003eStorage\u003c/code\u003e object with a specific file path."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @param path A string that represents the path of the file to read or"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * write."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    public Storage(String path) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        this.filePath \u003d path;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * Read tasks from the file and store into a \u003ccode\u003eArrayList\u003c/code\u003e of"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * \u003ccode\u003eTask\u003c/code\u003e."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @return A \u003ccode\u003eArrayList\u003c/code\u003e of tasks from the file."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @throws DukeExceptionThrow If file is not found."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeExceptionThrow"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        File newDuke \u003d new File(filePath);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "            Scanner ss \u003d new Scanner(newDuke);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "            while (ss.hasNext()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                String[] newTask \u003d ss.nextLine().split(\" \\\\| \");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                if (newTask[0].equals(\"T\"))"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                    Task x \u003d new ToDos(newTask[2]);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                    if (newTask[1].equals(\"1\"))"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                        x.markAsDone();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                    tasks.add(x);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                if (newTask[0].equals(\"D\"))"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                    Task t \u003d new Deadline(newTask[2], newTask[3]);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                    if (newTask[1].equals(\"1\"))"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                        t.markAsDone();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                    tasks.add(t);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                if (newTask[0].equals(\"E\"))"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                    Task t \u003d new Events(newTask[2], newTask[3]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                    if (newTask[1].equals(\"1\"))"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                        t.markAsDone();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                    tasks.add(t);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        catch (FileNotFoundException e)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "            throw new DukeExceptionThrow(\"File is not found!\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * Saves tasks to the local file."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @param task The \u003ccode\u003eTaskList\u003c/code\u003e storing tasks."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @throws DukeExceptionThrow If writing to the local file failed."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    public void save(ArrayList\u003cTask\u003e task) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "            FileWriter ww \u003d new FileWriter(\"./data/duke.txt\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "            for (Task t : task)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "            {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                ww.write(t.writeTxt() + System.lineSeparator());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "            ww.close();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        } catch (IOException e)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "            System.out.println(\"File writing process encounters an error \" + e.getMessage());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WEIFENG-NUSCEG": 95
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": " * Represents a task.  \u003ccode\u003eTask\u003c/code\u003e is an abstract class that can not be"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": " * instantiated"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * A String that represents the description of the task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * A boolean that represents the status of the task( 1 means done, 0 means not yet)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * a localDateTime constructor to save the date and time"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    protected LocalDateTime ld;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * Initialises the minimum fields required to setup a \u003ccode\u003eTask\u003c/code\u003e."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @param description A string that represents the description of certain task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * Returns an icon that represents the status of the task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @return Tick if completed, cross if uncompleted."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * Returns a string with the following format to be read from a local file."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @return A string in a specific format to be read from a local file."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    abstract String txtFormat();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * Returns a string with the following format to be stored in a local file"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @return A string in a specific format to be stored in a local file."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    abstract String writeTxt();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    public void markAsDone()"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * Returns a string with the status icon and the description of the task."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @return A string in a specific format with the status and description of the task."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    public String printStatus()"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * Returns the description of the task."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @return A string that represents the specific activity associated with"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     *          the task."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    public String getDescription(){"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    public String timeFormatter(String timeBeforeFormat)  {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        DateTimeFormatter parser \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        DateTimeFormatter stFormatter \u003d DateTimeFormatter.ofPattern(\"d\u0027st of\u0027 MMMM yyyy , ha\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        DateTimeFormatter ndFormatter \u003d DateTimeFormatter.ofPattern(\"d\u0027nd of\u0027 MMMM yyyy , ha\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        DateTimeFormatter rdFormatter \u003d DateTimeFormatter.ofPattern(\"d\u0027rd of\u0027 MMMM yyyy , ha\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        DateTimeFormatter thFormatter \u003d DateTimeFormatter.ofPattern(\"d\u0027th of\u0027 MMMM yyyy , ha\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        ld \u003d LocalDateTime.parse(timeBeforeFormat,parser);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        String output;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        if ((ld.getDayOfMonth()%10) \u003d\u003d 1){"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "            output \u003d ld.format(stFormatter);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        }else if ((ld.getDayOfMonth()%10) \u003d\u003d 2) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "            output \u003d ld.format(ndFormatter);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        }else if ((ld.getDayOfMonth()%10) \u003d\u003d 3) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "            output \u003d ld.format(rdFormatter);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "            output \u003d ld.format(thFormatter);;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WEIFENG-NUSCEG": 104
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": " * Represents a list of \u003ccode\u003eTask\u003c/code\u003e that can perform operations such as"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": " * add and delete on the tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "public class TaskList  {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * An \u003ccode\u003eArrayList\u003c/code\u003e structure."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    protected ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * instantiate a new \u003ccode\u003eTaskList\u003c/code\u003e with a empty list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e task) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        this.taskList \u003d task;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * Retrieve the entire task list stored inside the \u003ccode\u003eArrayList\u003c/code\u003e."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    public ArrayList\u003cTask\u003e fullTaskList(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * Adds a \u003ccode\u003eTask\u003c/code\u003e to the list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @param t The \u003ccode\u003eTask\u003c/code\u003e to be added to the list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    public void addTask(Task t) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        taskList.add(t);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * Removes the \u003ccode\u003eTask\u003c/code\u003e with the given index from the list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @param i The index of the \u003ccode\u003eTask\u003c/code\u003e to be deleted."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    public void deleteTask(Integer i) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "            taskList.remove(i - 1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * Returns the \u003ccode\u003eTask\u003c/code\u003e in the list with the given index."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @param i The index of the \u003ccode\u003eTask\u003c/code\u003e."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @return The \u003ccode\u003eTask\u003c/code\u003e in the list with the specific index."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    public Task getTask(int i) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        return taskList.get(i - 1);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * Returns the size of task list."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @return An integer representing the number of tasks in the list."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    public TaskList(){"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WEIFENG-NUSCEG": 58
    }
  },
  {
    "path": "src/main/java/ToDos.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": " * Represents a task without a specific time. This class"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": " * extends from the Task class."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "public class ToDos extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    protected boolean isToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     *  Constructs a \u003ccode\u003eToDo\u003c/code\u003e object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @param description A string of the task description."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    public ToDos(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        this.isToDo \u003d true;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * Returns a string pattern to the user output"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @return A string which displays the type,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     *          description and deadline of the task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        return \"[T]\" + super.printStatus();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * Returns a string with the following format to be read from a local file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @return A string in a specific format to be read from a local file."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    public String txtFormat() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        return \"T | \" + (this.isDone ? \"1\" : \"0\") + \" | \" + this.description;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * Returns a string with the following format to be stored in a local file"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @return A string in a specific format to be stored in a local file."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    public String writeTxt(){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        return \"T | \" + (this.isDone ? \"1\" : \"0\") + \" | \" + this.description;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WEIFENG-NUSCEG": 42
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": " * Represents the necessary ui elements for user interaction"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * A \u003ccode\u003eScanner\u003c/code\u003e to read user input."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * Constructs a \u003ccode\u003eUi\u003c/code\u003e object and initializes the"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * \u003ccode\u003eScanner\u003c/code\u003e to read user input from the system."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * Reads user instruction."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @return A string that represents the user instruction."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    public void showError(String e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        System.out.println( \"☹  OOPS!!!\" + e);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * Shows that a \u003ccode\u003eTask\u003c/code\u003e has been added, and displays the number"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * of current tasks in the list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @param t The \u003ccode\u003eTask\u003c/code\u003e that is added to the list."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @param size The number of tasks stored in the \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    public void taskAdded(Task t, int size) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \\n  \" + t.toString() + \"\\nNow you have \""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                + size + \" tasks in the list.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * Shows that a \u003ccode\u003eTask\u003c/code\u003e has been marked as done."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @param t The \u003ccode\u003eTask\u003c/code\u003e that is marked as done."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    public void markedAsDone(Task t) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done: \\n  \" + t.printStatus());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * Shows that a \u003ccode\u003eTask\u003c/code\u003e has been removed, and displays the number"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * of current tasks in the list."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @param t The \u003ccode\u003eTask\u003c/code\u003e that is deleted from the list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    public void taskRemoved(Task t, int size) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task: \\n  \" + t.toString() + \"\\nNow you have \""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                + size + \" tasks in the list.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * Find and display a specific task stored in the list."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @param  a \u003ccode\u003eTaskList\u003c/code\u003e used to store tasks."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @param name name of the task to be found"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    public void taskFound(ArrayList\u003cTask\u003e a, String name){"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        for (Task x : a) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "            if (x.getDescription().contains(name)) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                System.out.println(count + \".\" + x.toString());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * Shows a divider line."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * Displays all tasks currently stored in the list."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * @param tasks The \u003ccode\u003eTaskList\u003c/code\u003e used to store tasks."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    public void listTasks(TaskList tasks) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d tasks.getSize() ; i++)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "            System.out.println( i + \".\" + tasks.getTask(i).toString());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * Shows bye message to user."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    public void exitInformation(){"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * Shows Duke logo and welcome message, and user input instructions."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     * Shows an error in loading the file where past tasks are stored."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        System.out.println(\"Failed to Load from local text file!\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WEIFENG-NUSCEG": 112
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        Deadline newDeadline \u003d new Deadline(\"I need to test the code\", \"20/11/2019 1800\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        assertEquals(\"[D]\" + \"[\\u2718]\" + \" \" + \"I need to test the code (by: 2019-11-20T18:00)\", newDeadline.toString());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WEIFENG-NUSCEG": 12
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WEIFENG-NUSCEG"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WEIFENG-NUSCEG": 10
    }
  }
]

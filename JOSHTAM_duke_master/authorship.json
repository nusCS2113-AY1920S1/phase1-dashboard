[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "  toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "  testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "  }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "test {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "  useJUnitPlatform()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "  }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "  archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "  archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "  archiveClassifier \u003d null"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "  archiveAppendix \u003d null"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 22,
      "-": 19
    }
  },
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": " * Represents a command that adds an item to the task list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private String taskType;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private Date datetime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * Creates a new object with the input type (todo) and the description"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "      * @param taskType gets the task type"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param description gets the description"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public AddCommand(String taskType, String description) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * Creates a new object with the input type (deadlines/events) and their descriptions"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param taskType"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param datetime"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public AddCommand(String taskType, String description, Date datetime) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        this.datetime \u003d datetime;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * Executes the Command and adds the type of task to the list to be stored"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param tasks The task list that is being passed in to be executed"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param ui The User interface functions that can be used"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param storage The storage class used to store the file after changes have been made"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @return the description after the command has been executed"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        if (taskType.equals(\"todo\")) tasks.add(new Todo(description));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        else if (taskType.equals(\"deadline\")) tasks.add(new Deadlines(description, datetime));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        else if (taskType.equals(\"event\")) tasks.add(new Events(description, datetime));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        else throw new DukeException(\"add error\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        tasks.saveFile(tasks.get_file_path());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        return ui.showTaskAdded(tasks.get(tasks.size()-1).toString(), tasks.size());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * Boolean to be set as false as it is not an exit Command"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 61
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": " * This is an abstract class that states the general characteristics of Commands such as the method"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": " * execute and the boolean isExit"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * Executes the command"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param tasks The task list that is being passed in to be executed"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param ui The User interface functions that can be used"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param storage The storage class used to store the file after changes have been made"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @return the output of the string after the commands have been executed"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @throws DukeException if there are any errors"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 19
    }
  },
  {
    "path": "src/main/java/Controllers.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "public class Controllers {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 2
    }
  },
  {
    "path": "src/main/java/Deadlines.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "public class Deadlines extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    protected Date by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public Deadlines(String description, Date by) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        this.taskType \u003d \"D\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        super.date \u003d by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        return \"[D]\"+ \"[\" +super.getStatusIcon()+ \"] \" + super.description + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 19
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": " * Represents a command that deletes an item from the task list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * Creates a new command object based on the input index"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param index"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public DeleteCommand (int index) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    int index \u003d Integer.parseInt(inputString.substring(7));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            list.get(index - 1).changeStatus(false);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            System.out.println(\"Noted. I\u0027ve removed this task: \\n\" +"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    list.get(index - 1).toString() +"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            \"\\n\" + \"Now you have \" + (list.size()-1) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            list.remove(index -1);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    update(list);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "*/"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * Executes the command and deletes the item at that index of the list and stores the new list"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param tasks The task list that is being passed in to be executed"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param ui The User interface functions that can be used"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param storage The storage class used to store the file after changes have been made"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @return the description after the command has been executed"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        //if(this.index \u003e\u003d tasks.size()) throw new DukeException(\"index error\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        tasks.alt.get(index - 1).changeStatus(false);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        String output \u003d \"Noted. I\u0027ve removed this task: \\n\" +"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                tasks.alt.get(index - 1).toString() +"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                \"\\n\" + \"Now you have \" + (tasks.alt.size()-1) + \" tasks in the list.\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task: \\n\" +"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                tasks.alt.get(index - 1).toString() +"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                \"\\n\" + \"Now you have \" + (tasks.alt.size()-1) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        tasks.alt.remove(index - 1);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        //tasks.saveFile(Task t, String taskType, String date);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * Boolean to be set as false as it is not an exit Command"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 56
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "/*"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public DialogBox(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        text \u003d l;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        displayPicture \u003d iv;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        displayPicture.setFitWidth(100.0);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        displayPicture.setFitHeight(100.0);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        this.getChildren().addAll(text, displayPicture);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "/*"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public static DialogBox getUserDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        return new DialogBox(l, iv);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public static DialogBox getDukeDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        var db \u003d new DialogBox(l, iv);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "*/"
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 53
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": " * Represents a command that marks the task as done in the task list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * Creates a new object with the input index"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param index"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    //int index \u003d Integer.parseInt(inputString.substring(5));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    //                tasks.get(index - 1).changeStatus(true);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    //                System.out.println(\"Nice! I\u0027ve marked this task as done: \\n\" +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    //                        \"[\" + tasks.get(index - 1).getStatusIcon() + \"] \" + tasks.get(index - 1).getDesc());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    //update(tasks);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * Executes the command and marks the task at the given index done and stores the new list"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param tasks The task list that is being passed in to be executed"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param ui The User interface functions that can be used"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param storage The storage class used to store the file after changes have been made"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @return returns the description after the command has been executed"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        //if (this.index \u003e\u003d tasks.alt.size()) throw new DukeException(\"index error\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        tasks.alt.get(index - 1).changeStatus(true);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        String output \u003d \"Nice! I\u0027ve marked this task as done: \\n\" +"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                \"[\" + tasks.alt.get(index - 1).getStatusIcon() + \"] \" + tasks.alt.get(index - 1).getDesc();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done: \\n\" +"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                \"[\" + tasks.alt.get(index - 1).getStatusIcon() + \"] \" + tasks.alt.get(index - 1).getDesc());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * Boolean to be set as false as it is not an exit Command"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        public boolean isExit() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 50
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import java.lang.String;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "/*"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "*/"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "//public class Duke extends Application {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": " * The Duke program implements an application that currently takes in commands of a task manager (todo,list,deadline,event,done,delete,find,bye)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": " * followed by inputs that follows the command such as (int, days, dates) that are stored as data in a text file, and displays information"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": " * based on the commands to the standard output."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": " *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": " * @author joshtamers"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": " * @version 1.0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": " * @since 2019-08-12"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": " */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * Creates new Ui,Storage and taskList, to read in commands and execute them to a saved file"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param args argument to be passed into main"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        String absolutePath \u003d  \"//Users//joshtamers//Desktop//GitHub//duke//src//main//java//Save\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            Storage file \u003d new Storage();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            TaskList tl \u003d new TaskList();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            boolean isExit \u003d false;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            ui.showWelcome();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            tl.alt \u003d tl.LoadFile();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            while(!isExit) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                ui.readCommand();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                System.out.println(\"\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                String command \u003d ui.FullCommand;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                Command c \u003d Parser.parse(command);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                c.execute(tl, ui, file);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        } catch (DukeException | ParseException | IOException | NullPointerException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            if(e instanceof ParseException) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                ui.showLoadingError();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                ui.showLoadingError();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            ui.showLine();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.jpg\"));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.jpg\"));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        //Label helloWorld \u003d new Label(\"Hello World!\"); // Creating a new Label control"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        //helloWorld.setFont(new Font(\"Arial\", 50));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        //helloWorld.setTextFill(Color.web(\"0076a3\"));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        //Scene scene \u003d new Scene(helloWorld); // Setting the scene to be our Label"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            //dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            //userInput.clear();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        });"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            //dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            //userInput.clear();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        });"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        stage.setScene(scene); // Setting the stage to show our screen"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        stage.show(); // Render the stage."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     */"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                new DialogBox(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                new DialogBox(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        );"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     */"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private String getResponse(String input) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        return \"Duke heard: \" + input;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    */"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 195,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import  java.lang.Exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import java.lang.StringIndexOutOfBoundsException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": " * Represents an exception thrown by Duke"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public DukeException (String message) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 12
    }
  },
  {
    "path": "src/main/java/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "public class Events extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    //protected String at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    protected Date at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public Events(String description, Date at) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        //super.taskType \u003d \"E\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        this.taskType \u003d \"E\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        super.date \u003d at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        return \"[E]\"+ \"[\" +super.getStatusIcon()+ \"] \" + super.description + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "} "
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 20
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": " * Represents a command that exits the program"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * Executes the command to terminate the program and outputs the description"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param tasks The task list that is being passed in to be executed"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param ui The User interface functions that can be used"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param storage The storage class used to store the file after changes have been made"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @return the description that terminates the program"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        return ui.bye();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * Boolean to be set as false as it is not an exit Command"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 25
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    //public static void find (ArrayList\u003cTask\u003e tasks, String keyword) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        //ArrayList\u003cTask\u003e tempArray \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        //for (Task task : tasks) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        //    if (task.toString().contains(keyword)) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        //        tempArray.add(task);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        //    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        // }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        ////System.out.println(tempArray.size());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        //for (int i \u003d 0; i \u003c tempArray.size(); i++) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        //    System.out.println((i+1) + \".\" + tempArray.get(i).toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        //}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        //tempArray.clear();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    //}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        //System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list: \");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        ArrayList\u003cTask\u003e tempArray \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        for (Task task : tasks.alt) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "           // if (!task.getDesc().contains(keyword)) throw new DukeException(\"Could not be found.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            if (task.toString().contains(keyword)) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                tempArray.add(task);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        //System.out.println(tempArray.size());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        for (int i \u003d 0; i \u003c tempArray.size(); i++) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            System.out.println((i+1) + \".\" + tempArray.get(i).toString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            //output +\u003d (i+1) + \".\" +tempArray.get(i).toString() + \"\\n\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        tempArray.clear();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        //String output \u003d"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 53
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "/*"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "/*"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        Application.launch(Duke.class, args);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        //Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "*/"
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 18
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "public class ListCommand extends Command{"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        //if (tasks.alt.isEmpty()) throw new DukeException(\"List is empty\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        System.out.println(\"Here are the tasks in your list: \");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d tasks.alt.size(); i++) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            System.out.println( i + \".\" + tasks.alt.get(i - 1).toString());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            //output +\u003d i + \".\" + tasks.alt.get(i-1).toString() + \"\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 21
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": " * Represents a parser to make sense of the user input and translates it into commands for Duke"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * Takes in the user input and makes sense of it"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param inputString takes in the input String"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @return Duke commands based on the user input"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @throws DukeException if there is any error"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public static Command parse(String inputString) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        if (inputString.isBlank()) throw new DukeException(\"Input is blank\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            //while (true) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                if (inputString.equals(\"bye\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                   return new ExitCommand();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                } else if (inputString.equals(\"list\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    //for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    //    System.out.println(i + \".\" + tasks.get(i - 1).toString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    // }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    return new ListCommand();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                } else if (inputString.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    if (inputString.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        int index \u003d inputString.indexOf(\"/by\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        String description \u003d inputString.substring(9, index);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        //String date \u003d inputString.split(\"/\")[1].substring(3);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        //Deadlines deadlines \u003d new Deadlines(info, inputString.split(\"/\")[1].substring(3));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"yyyy.MM.dd.HH:mm:ss\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        //Deadlines deadlines \u003d new Deadlines(description, dateFormat.parse(inputString.split(\"/\")[1].substring(3)));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        //tasks.add(deadlines);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        //System.out.println(\"Got it. I\u0027ve added this task: \\n\" +"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        //        deadlines.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        //        \"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        //saveFile(deadlines, \"D\", inputString.split(\"/\")[1].substring(3));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        return new AddCommand(\"deadline\", description, dateFormat.parse(inputString.split(\"/\")[1].substring(3)));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                } else if (inputString.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    if (inputString.equals(\"event\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        throw new DukeException(\"OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        int index \u003d inputString.indexOf(\"/at\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        String description \u003d inputString.substring(6, index);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        //String date \u003d inputString.split(\"/\")[1].substring(3);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        //Events events \u003d new Events(info, inputString.split(\"/\")[1].substring(3));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"yyyy.MM.dd.HH:mm:ss\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        //Events events \u003d new Events(description, dateFormat.parse(inputString.split(\"/\")[1].substring(3)));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        //tasks.add(events);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        //System.out.println(\"Got it. I\u0027ve added this task: \\n\" +"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        //        events.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        //        \"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        //saveFile(events, \"E\", inputString.split(\"/\")[1].substring(3));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        return new AddCommand(\"event\", description, dateFormat.parse(inputString.split(\"/\")[1].substring(3)));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                } else if (inputString.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    if (inputString.equals(\"todo\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        String description \u003d inputString.substring(5);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        //Todo todo \u003d new Todo(inputString.substring(5));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        //tasks.add(todo);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        //System.out.println(\"Got it. I\u0027ve added this task: \\n\" +"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        //        todo.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        //       \"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        //saveFile(todo, \"T\", \"\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        return new AddCommand(\"todo\", description);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                } else if (inputString.substring(0, 4).equals(\"done\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    int index \u003d Integer.parseInt(inputString.substring(5));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    //tasks.get(index - 1).changeStatus(true);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    //System.out.println(\"Nice! I\u0027ve marked this task as done: \\n\" +"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    //        \"[\" + tasks.get(index - 1).getStatusIcon() + \"] \" + tasks.get(index - 1).getDesc());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    //update(tasks);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    return new DoneCommand(index);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                } else if (inputString.substring(0, 6).equals(\"delete\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    int index \u003d Integer.parseInt(inputString.substring(7));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    //tasks.get(index - 1).changeStatus(false);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    //System.out.println(\"Noted. I\u0027ve removed this task: \\n\" +"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    //        list.get(index - 1).toString() +"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    //        \"\\n\" + \"Now you have \" + (list.size()-1) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    //list.remove(index -1);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    //update(list);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    return new DeleteCommand(index);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                } else if (inputString.substring(0, 4).equals(\"find\")) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    String keyword \u003d inputString.substring(5);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    //System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    //find(tasks, keyword);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    return new FindCommand(keyword);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        catch (ParseException e) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            System.err.println(e.getMessage());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        throw new DukeException(\"unknown\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        //} catch (DukeException | ParseException e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            //System.err.println(e.getMessage());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 107
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    String absolutePath \u003d \"//Users//joshtamers//Desktop//GitHub//duke//src//main//java//Save\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 4
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    protected boolean isDone;           //creates a boolean called \"isDone\" to track whether the task is done or not"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    protected String taskType;          //creates a String called taskType to track whether the task is a todo/deadline or a event"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    //protected String date;              //creates a String called date - Level 8"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    protected Date date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        this.isDone \u003d false;            //by default sets the boolean \"isDone\" to a false"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public Boolean changeStatus(Boolean stat) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        this.isDone \u003d stat;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        return this.isDone;             //returns the boolean \"isDone\" based on the status of the tick"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public String getDesc() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    //..."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 28
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": " * Represents the task list that duke is handling"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "public class TaskList extends ArrayList\u003cTask\u003e {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    String absolutePath \u003d \"//Users//joshtamers//Desktop//GitHub//duke//src//main//java//Save\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * Saves the current file after the changes have been made"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param absolutePath stores the storage path of the file"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public void saveFile(String absolutePath) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        //String path \u003d \"//Users//joshtamers//Desktop//GitHub//duke//src//main//java//Save\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        File file \u003d new File(absolutePath);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            fileWriter.write(\"\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            for (int i \u003d 0; i \u003c this.size(); i++) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                fileWriter \u003d new FileWriter(file, true);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                fileWriter.write(this.get(i).taskType + \"-\" + this.get(i).getStatusIcon() + \"-\" + this.get(i).getDesc() + \"-\" + this.get(i).date + \"\\n\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                fileWriter.close();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            System.err.println(\"File not found\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public ArrayList\u003cTask\u003e alt \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * Loads the file from the storage path of the file"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @return the list of items from the stored file"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @throws ParseException"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    protected ArrayList\u003cTask\u003e LoadFile() throws IOException, ParseException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        //ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        SimpleDateFormat fmt \u003d new SimpleDateFormat(\"MMM dd HH:mm:ss z yyyy\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        if (new File(absolutePath).exists()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            File file \u003d new File(absolutePath);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                String[] contents \u003d sc.nextLine().split(\"-\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                if (contents[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    Todo t \u003d new Todo(contents[2].trim());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    if (contents[1].equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        t.isDone \u003d true;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        t.isDone \u003d false;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    alt.add(t);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                } else if (contents[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    Deadlines d \u003d new Deadlines(contents[2].trim(), fmt.parse(contents[3].substring(3).trim()));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    if (contents[1].equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        d.isDone \u003d true;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        d.isDone \u003d false;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    alt.add(d);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    Events e \u003d new Events(contents[2].trim(), fmt.parse(contents[3].substring(3).trim()));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    if (contents[1].equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        e.isDone \u003d true;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        e.isDone \u003d false;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    alt.add(e);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        return alt;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * Returns the file path where it is stored"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @return the path location"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public String get_file_path() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        return absolutePath;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "}"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 94
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public Todo (String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        this.taskType \u003d \"T\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        return \"[T]\" + \"[\" +super.getStatusIcon()+ \"] \"+ super.description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 14
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    protected String FullCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private String line \u003d \" _________________________________________________________________________________ \";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        //return \"Hello from\\n\" + logo + \"\\n\" + \"Hello! I\u0027m Duke\\n\" + \"What can I do for you\\n?\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public void readCommand() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        Scanner inputString \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        //scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        FullCommand \u003d inputString.nextLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public String bye() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "         System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "         return \"\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public String showLine() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public String showTaskAdded(String task, int size) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        String output \u003d \"Got it. I\u0027ve added this task: \\n\" + task + \"\\n\" + \"Now you have \" + Integer.toString(size) + \" tasks in the list.\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        System.out.println(output);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public String showLoadingError() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        //String output \u003d \"Oops! Your file cannot be found\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        System.out.println(\"Oops! Your file cannot be found\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public String showError(String errorMessage) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        if (errorMessage.equals(\"index error\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            output \u003d \"Oops! Please enter a valid task index number\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        } else if (errorMessage.equals(\"unknown\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            output \u003d \"Oops! Please enter a valid task index number\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 59
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "//import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        assertEquals(2,2);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 11
    }
  }
]

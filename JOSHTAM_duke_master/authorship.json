[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "  toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 7,
      "-": 19
    }
  },
  {
    "path": "src/main/java/Deadlines.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "public class Deadlines extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    //protected String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    protected Date by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public Deadlines(String description, Date by) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        this.taskType \u003d \"D\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        super.date \u003d by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        return \"[D]\"+ \"[\" +super.getStatusIcon()+ \"] \" + super.description + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 19
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import jdk.dynalink.linker.support.SimpleLinkRequest;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import java.lang.ArrayIndexOutOfBoundsException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import java.lang.String;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public static ArrayList\u003cTask\u003e loadFile () {         //creates a function to load the text file"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        String path \u003d \"//Users//joshtamers//Desktop//GitHub//duke//src//main//java//Save\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        Scanner fileInput;          //???"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();           //???"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        File file \u003d new File(path);         //file and path"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            fileInput \u003d new Scanner(file);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            while (fileInput.hasNextLine()) { //do something"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                Boolean stat;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                String line \u003d fileInput.nextLine();         //creates a string to store the next line"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                String[] input \u003d line.split(\"-\");       //splits the line into parts and stores them into a string array"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                String taskType \u003d input[0];             //creates a string to store input[0] which is called taskType"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                stat \u003d (input[1].equals(\"1\"));          //changes the boolean stat value to TRUE if input 1 value is equals to 1/ false otherwise"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                if (taskType.equals(\"D\")) {             //if input is a D, create a new entry for Deadline, and stores it into the list which is of type \"Task\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    //Deadlines deadline \u003d new Deadlines(input[2], input[3]);         //"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"yyyy.MM.dd.HH:mm:ss\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    Deadlines deadline \u003d new Deadlines(input[2], dateFormat.parse(input[3]));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    deadline.isDone \u003d (stat.equals(\"\\\\u2713\")) ? true : false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    list.add(deadline);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                } else if (taskType.equals(\"E\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    //Events event \u003d new Events(input[2], input[3]);          //"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"yyyy.MM.dd.HH:mm:ss\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    Events event \u003d new Events(input[2], dateFormat.parse(input[3]));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    event.isDone \u003d (stat.equals(\"\\\\u2713\")) ? true : false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    list.add(event);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                } else if (taskType.equals(\"T\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    Todo todo \u003d new Todo(input[2]);         //dosen\u0027t require SimpleDateFormatter"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    todo.isDone \u003d (stat.equals(\"\\\\u2713\")) ? true : false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    list.add(todo);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            fileInput.close();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            return list;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            //} catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        } catch (FileNotFoundException| ParseException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            System.err.println(\"File cannot be found\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public static void saveFile (Task t, String taskType, String date) {            //creates a function to save the text file"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        String path \u003d \"//Users//joshtamers//Desktop//GitHub//duke//src//main//java//Save\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        File file \u003d new File(path);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            if (taskType.equals(\"T\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                FileWriter fileWriter \u003d new FileWriter(file, true);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                fileWriter.write(taskType + \"-\" + t.getStatusIcon()+ \"-\" + t.getDesc() + \"\\n\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                fileWriter.close();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            else  {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                FileWriter fileWriter \u003d new FileWriter(file, true);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                fileWriter.write(taskType + \"-\" + t.getStatusIcon()+ \"-\" + t.getDesc() + \"-\" + date + \"\\n\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                fileWriter.close();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        catch (IOException io) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            System.out.println(\"File not found:\" + io.getMessage());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public static void update (ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        String path \u003d \"//Users//joshtamers//Desktop//GitHub//duke//src//main//java//Save\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        File file \u003d new File(path);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            fileWriter.write(\"\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                fileWriter \u003d new FileWriter(file, true);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                fileWriter.write(list.get(i).taskType + \"-\" + list.get(i).getStatusIcon()+ \"-\" + list.get(i).getDesc() + \"-\"  + list.get(i).date + \"\\n\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                fileWriter.close();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        catch (IOException e) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            System.err.println(\"File not found\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public static void find (ArrayList\u003cTask\u003e list, String keyword) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        ArrayList\u003cTask\u003e tempArray \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        for (Task task : list) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            if (task.toString().contains(keyword)) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                tempArray.add(task);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            //System.out.println(tempArray.size());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            for (int i \u003d 0; i \u003c tempArray.size(); i++) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                System.out.println((i+1) + \".\" + tempArray.get(i).toString());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            tempArray.clear();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        //Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        String path \u003d \"//Users//joshtamers//Desktop//GitHub//duke//src//main//java//Save\";"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        File file \u003d new File(path);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            Scanner scanner \u003d new Scanner(file);            //new line"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            if (scanner.hasNext()) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                list.addAll(Objects.requireNonNull(loadFile()));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            while (true) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                //Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                //String inputString \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                String inputString \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                if (inputString.equals(\"bye\")) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                } else if (inputString.equals(\"list\")) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    for (int i \u003d 1; i \u003c\u003d list.size(); i++) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        System.out.println(i + \".\" + list.get(i - 1).toString());"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                } else if (inputString.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    if (inputString.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        int index \u003d inputString.indexOf(\"/by\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        String info \u003d inputString.substring(9, index);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        //Deadlines deadlines \u003d new Deadlines(info, inputString.split(\"/\")[1].substring(3));"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"yyyy.MM.dd.HH:mm:ss\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        Deadlines deadlines \u003d new Deadlines(info, dateFormat.parse(inputString.split(\"/\")[1].substring(3)));"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        list.add(deadlines);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        System.out.println(\"Got it. I\u0027ve added this task: \\n\" +"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                                deadlines.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                                \"Now you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        saveFile(deadlines, \"D\", inputString.split(\"/\")[1].substring(3));"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                } else if (inputString.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    if (inputString.equals(\"event\")) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        throw new DukeException(\"OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        int index \u003d inputString.indexOf(\"/at\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        String info \u003d inputString.substring(6, index);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        //Events events \u003d new Events(info, inputString.split(\"/\")[1].substring(3));"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"yyyy.MM.dd.HH:mm:ss\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        Events events \u003d new Events(info, dateFormat.parse(inputString.split(\"/\")[1].substring(3)));"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        list.add(events);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        System.out.println(\"Got it. I\u0027ve added this task: \\n\" +"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                                events.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                                \"Now you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        saveFile(events, \"E\", inputString.split(\"/\")[1].substring(3));"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                } else if (inputString.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    if (inputString.equals(\"todo\")) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        Todo todo \u003d new Todo(inputString.substring(5));"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        list.add(todo);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        System.out.println(\"Got it. I\u0027ve added this task: \\n\" +"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                                todo.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                                \"Now you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        saveFile(todo, \"T\", \"\");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                } else if (inputString.substring(0, 4).equals(\"done\")) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    int index \u003d Integer.parseInt(inputString.substring(5));"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    list.get(index - 1).changeStatus(true);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    System.out.println(\"Nice! I\u0027ve marked this task as done: \\n\" +"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            \"[\" + list.get(index - 1).getStatusIcon() + \"] \" + list.get(index - 1).getDesc());"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    update(list);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                } else if (inputString.substring(0, 6).equals(\"delete\")) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    int index \u003d Integer.parseInt(inputString.substring(7));"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    list.get(index - 1).changeStatus(false);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    System.out.println(\"Noted. I\u0027ve removed this task: \\n\" +"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            list.get(index - 1).toString() +"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            \"\\n\" + \"Now you have \" + (list.size()-1) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    list.remove(index -1);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    update(list);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                } else if (inputString.substring(0, 4).equals(\"find\")) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    String keyword \u003d inputString.substring(5);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    find(list, keyword);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        } catch (DukeException | ParseException | FileNotFoundException e){"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                System.err.println(e.getMessage());"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 216,
      "-": 10
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import  java.lang.Exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import java.lang.StringIndexOutOfBoundsException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public DukeException (String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 8
    }
  },
  {
    "path": "src/main/java/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "public class Events extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    //protected String at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    protected Date at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public Events(String description, Date at) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        //super.taskType \u003d \"E\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        this.taskType \u003d \"E\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        super.date \u003d at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        return \"[E]\"+ \"[\" +super.getStatusIcon()+ \"] \" + super.description + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "} "
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 20
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    protected boolean isDone;           //creates a boolean called \"isDone\" to track whether the task is done or not"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    protected String taskType;          //creates a String called taskType to track whether the task is a todo/deadline or a event"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    //protected String date;              //creates a String called date - Level 8"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    protected Date date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        this.isDone \u003d false;            //by default sets the boolean \"isDone\" to a false"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public Boolean changeStatus(Boolean stat) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        this.isDone \u003d stat;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        return this.isDone;             //returns the boolean \"isDone\" based on the status of the tick"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public String getDesc() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    //..."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 28
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public Todo (String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        this.taskType \u003d \"T\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        return \"[T]\" + \"[\" +super.getStatusIcon()+ \"] \"+ super.description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 14
    }
  }
]

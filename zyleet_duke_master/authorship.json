[
  {
    "path": "src/main/java/Deadline.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    //deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    //[D][âœ—] do homework (by: no idea :-p)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    //Deadline reads in an input, separate via a /by"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        return \"[D]\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"[D]\" + \"[\" + (isDone ? \"\\u2713\" : \"\\u2718\") + \"] \" + this.description + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 16,
      "zyleet": 8
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        separator();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\"); //introduction"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        separator();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        ArrayList\u003cTask\u003e myList \u003d new ArrayList\u003c\u003e(); //Instantiate an array list of a dynamic size and class Task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        readSave(myList);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        separator();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        String myString \u003d inputCommand(); //get raw input from user"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        // as long as input is not bye, keep running"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        while (!myString.equals(\"bye\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            separator();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            if (myString.equals(\"list\")) { //request for list, output the storage"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "                getList(myList);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            //if not requesting for list, check for done, event, todos, deadline"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                //splits the input according to white spaces, limit 2 means it only splits 1 space"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                String[] bufferArray \u003d myString.split(\" \", 2);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                //check if first word is \"done\", second word should be an integer if true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                if (bufferArray[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        int taskNumber \u003d Integer.parseInt(bufferArray[1]); //get the task number as an integer"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        myList.get(taskNumber - 1).markAsDone(); //marks that task number as done"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "                        System.out.println((taskNumber) + \".\" + myList.get(taskNumber - 1).getStatusIcon());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        updateSave(taskNumber); //Updates task status in save file"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    } catch (ArrayIndexOutOfBoundsException | IOException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "                        System.out.println(\"Error! \u0027Done\u0027 must be followed by a number. Please type \u0027list\u0027 to display \" +"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                                \"the list of tasks and their numbers.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    } /*catch (IndexOutOfBoundsException d) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                        System.out.println(\"Error! Task list does not contain that task number.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    }*/"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                //First word is not \u0027done\u0027, hence the user is adding a task"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                //check if its a todos, adds a standard task description with no timing"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                //After adding a new task to list, save this data to a save file"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    if (bufferArray[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                            Task newTask \u003d new Todo(bufferArray[1]); //Create a new todos with description from user input"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                            addToList(newTask, myList);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                            saveData(newTask);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                            System.out.println(\"Error! Description of a Todo task must not be empty.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                    //check if its a deadline, there will be a \"/by \""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "                    else if (bufferArray[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                            //Split the input into 2, before and after /by"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                            String[] bufferDeadline \u003d myString.split(\"/by \", 2);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                            //Now, split the first part to exclude the word \"deadline\""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                            String[] bufferDescription \u003d bufferDeadline[0].split(\" \", 2);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                            //Remove the space after task description and /by for easier formatting"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                            bufferDescription[1] \u003d bufferDescription[1].substring(0, bufferDescription[1].length() - 1);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "                            //Create a new deadline with description from user input"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "                            Task newTask \u003d new Deadline(bufferDescription[1], bufferDeadline[1]);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "                            addToList(newTask, myList);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                            saveData(newTask);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "                            //Error to be displayed when /by is not in deadline input"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "                            System.out.println(\"Error! Deadline tasks must contain \u0027/by\u0027 followed by the deadline.\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "                    //check if its an event, there should be a \"/at \""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "                    else if (bufferArray[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "                            //Split the input into 2, before and after /at"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "                            String[] bufferEvent \u003d myString.split(\"/at \", 2);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "                            //Now, split the first part to exclude the word \"event\""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "                            String[] bufferDescription \u003d bufferEvent[0].split(\" \", 2);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                            //Remove the space after task description and /by for easier formatting"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                            bufferDescription[1] \u003d bufferDescription[1].substring(0, bufferDescription[1].length() - 1);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "                            //Create a new deadline with description from user input"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "                            Task newTask \u003d new Event(bufferDescription[1], bufferEvent[1]);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "                            addToList(newTask, myList);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                            saveData(newTask);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "                        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "                            System.out.println(\"Error! Event tasks must contain \u0027/at\u0027 followed by the time of event.\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "                    //Error when first word is not any of the above keywords"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "                    else {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "                        System.out.println(\"Error! I do not understand what that mean.\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "            separator();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            myString \u003d inputCommand(); //after processing command, wait for new input form user"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        //indicates end of duke"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        separator();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        separator();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    private static String inputCommand() { //read input and returns that input to be processed in main"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        return input.nextLine();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void separator() {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "    //Method to add a task to a list and output the size of list"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void addToList(Task taskData, ArrayList\u003cTask\u003e myTasks) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        myTasks.add(taskData);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(taskData.getStatusIcon());"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Now you have \" + myTasks.size() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    //Adds to list from save data without spamming \"got it...\""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    private static void addToListQuietly(Task taskData, ArrayList\u003cTask\u003e myTasks) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        myTasks.add(taskData);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "    //Method to get the tasks in a list"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void getList(ArrayList\u003cTask\u003e myTasks) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        for (int i \u003d 0; i \u003c myTasks.size(); i++) { //Standard for-each loop: for (String element: myList)"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println((i + 1) + \".\" + myTasks.get(i).getStatusIcon());"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    //Method to save new tasks to a persistent storage"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    private static void saveData(Task newTask) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        String fileName \u003d \"save.txt\"; //name to save file"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            File file \u003d new File(\"save.txt\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            FileWriter fw \u003d new FileWriter(file, true); //appends incoming task to file"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            BufferedWriter bw \u003d new BufferedWriter(fw);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            // Note that write() does not automatically"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            // append a newline character."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            bw.write(newTask.getType());"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            bw.write(\"/\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            bw.write(newTask.getStatusInt());"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            bw.write(\"/\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            bw.write(newTask.getDescription());"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            bw.write(\"/\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //if incoming data is deadline or event, additional segment for deadline"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            if (newTask.getType().equals(\"[D]\") || newTask.getType().equals(\"[E]\")) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                bw.write(newTask.getBy());"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            bw.newLine(); //new line for next input"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            // Always close files."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            bw.close();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        catch(IOException ex) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            System.out.println(\"Error writing to file \u0027\"+ fileName + \"\u0027\");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    //method to read data from a persistent storage and output them to a list"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    //Should be done in the beginning"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    private static void readSave(ArrayList\u003cTask\u003e myTasks) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        try (BufferedReader br \u003d Files.newBufferedReader(Paths.get(\"save.txt\"))) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            boolean saveExistence \u003d false;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            // read line by line"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //[D]|[tick]|description|date"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            String myString;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            while ((myString \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                saveExistence \u003d true;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                String[] bufferLine \u003d myString.split(\"/\");"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                //bufferLine[2] and [3] are the task description and date respectively"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                //bufferLine[1] is the statusDone icon, and its [1] character should be a tick or cross"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                //Check task type to see if any dates are needed"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                if (bufferLine[0].equals(\"[D]\")) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    Task newTask \u003d new Deadline(bufferLine[2], bufferLine[3]);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    //Check if the task has already been done"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    if (bufferLine[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        newTask.markAsDone();"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    addToListQuietly(newTask, myTasks);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                else if (bufferLine[0].equals(\"[E]\")) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    Task newTask \u003d new Event(bufferLine[2], bufferLine[3]);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    if (bufferLine[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        newTask.markAsDone();"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    addToListQuietly(newTask, myTasks);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                //Task type is a todos, no dates"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    Task newTask \u003d new Todo(bufferLine[2]);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    if (bufferLine[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        newTask.markAsDone();"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    addToListQuietly(newTask, myTasks);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            br.close();"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //once all data has been added to list, display the list"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            if (saveExistence) {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                System.out.println(\"Save detected. Here are your tasks from the previous session: \");"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                for (int i \u003d 0; i \u003c myTasks.size(); i++) { //Standard for-each loop: for (String element: myList)"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    System.out.println((i + 1) + \".\" + myTasks.get(i).getStatusIcon());"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //If there is no save data, print this message"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                System.out.println(\"No save data detected on save file.\");"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            System.out.println(\"No save file exists. Creating new one.\");"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    //method to update the task completed status within a text file"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    private static void updateSave(int taskNumber) throws IOException {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        ArrayList\u003cString\u003e myList \u003d new ArrayList\u003c\u003e(); //list to store save data temporarily"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        try (BufferedReader br \u003d Files.newBufferedReader(Paths.get(\"save.txt\"))) {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            // read line by line"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //[D]/1/description/date"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            String myString;"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            while ((myString \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                myList.add(myString);"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            br.close();"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //At this point, myList should contain all lines of save data"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //bufferUpdate contains the task that needs to be updated"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            String bufferUpdate \u003d myList.get(taskNumber - 1);"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            String bufferNew \u003d \"\";"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //Replace one character in the string"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            bufferNew +\u003d bufferUpdate.substring(0, 4) + \"1\" + bufferUpdate.substring(5);"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            myList.set(taskNumber - 1, bufferNew);"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            File file \u003d new File(\"save.txt\");"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            FileWriter clear \u003d new FileWriter(file); //intial write to clear file"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            clear.close();"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //Now append to empty file"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            FileWriter fw \u003d new FileWriter(file, true);"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            BufferedWriter bw \u003d new BufferedWriter(fw);"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //Now, myList contains the updated save data, output everything into save.txt"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            for (int n \u003d 0; n \u003c myList.size(); n++) {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                bw.write(myList.get(n));"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                bw.newLine();"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            }"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //order of closing is important"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            bw.close();"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            System.out.println(\"No save file exists. Creating new one.\");"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "zyleet": 208,
      "-": 98
    }
  },
  {
    "path": "src/main/java/Event.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        return \"[E]\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        return this.at;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"[E]\" + \"[\" + (isDone ? \"\\u2713\" : \"\\u2718\") + \"] \" + this.description + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 13,
      "zyleet": 8
    }
  },
  {
    "path": "src/main/java/Task.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zyleet"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public Task(String description) { //initialization"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"[\" + (isDone ? \"\\u2713\" : \"\\u2718\") + \"]\"; //return tick or X symbols in a bracket"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    //Return status icon as int, for easier reading when saving"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public String getStatusInt() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        return isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public void markAsDone() { //marks a task as done"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public String getType() { //returns type of task, to be overwritten"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        return \"Task\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public String getBy() { //returns deadline or event date, to be overwritten"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        return \"Date\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        return \"Full_description\"; //returns the full task data, to be overwritten"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zyleet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zyleet": 40,
      "-": 2
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        return \"[T]\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    //Override by using the same name of function from parent"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"[T]\" + \"[\" + (isDone ? \"\\u2713\" : \"\\u2718\") + \"] \" + this.description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "-": 15,
      "zyleet": 4
    }
  }
]

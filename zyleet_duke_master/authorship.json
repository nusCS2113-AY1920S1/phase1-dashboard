[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import java.util.GregorianCalendar;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zyleet"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    //deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    //[D][âœ—] do homework (by: no idea :-p)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    //Deadline reads in an input, separate via a /by"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    //Format of deadline dd-MM-yyyy HHmm"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    //Method to display deadline nicely when list is called"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    //The deadline in save.txt remains in the format above"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public String getDeadline() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        String[] month \u003d { \"January\", \"February\", \"March\", \"April\","
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                \"May\", \"June\", \"July\", \"August\","
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                \"September\", \"October\", \"November\", \"December\" };"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        String[] amPm \u003d { \"AM\", \"PM\" };"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        String niceDate \u003d \"\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        int hour;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //This provides the pattern of the date input"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            SimpleDateFormat dateFormatter \u003d new SimpleDateFormat(\"dd-MM-yyyy HHmm\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //This reads the date input in the format given"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            Date newDate \u003d dateFormatter.parse(this.by);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //Creates a gregorian calender"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            GregorianCalendar gcal \u003d new GregorianCalendar();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //Converts the date to a gregorian calender for easy usage"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            gcal.setTime(newDate);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //Calender HOUR method will return 0 if its 12, have to manually change"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            if (gcal.get(Calendar.HOUR) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                hour \u003d 12;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                hour \u003d gcal.get(Calendar.HOUR);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            niceDate \u003d String.format(\"%d %s %d, %02d:%02d %s\","
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    gcal.get(Calendar.DATE),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    month[gcal.get(Calendar.MONTH)],"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    gcal.get(Calendar.YEAR),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    hour,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    gcal.get(Calendar.MINUTE),"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    amPm[gcal.get(Calendar.AM_PM)]);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        catch (ParseException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            System.out.println(\"Error. Please enter date in the format DD-MM-YYYY 2359.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        return niceDate;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        return \"[D]\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        return \"[D]\" + \"[\" + (isDone ? \"\\u2713\" : \"\\u2718\") + \"] \" + this.description + \" (by: \" + this.getDeadline() + \")\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zyleet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zyleet": 74
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        separator();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\"); //introduction"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        separator();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        ArrayList\u003cTask\u003e myList \u003d new ArrayList\u003c\u003e(); //Instantiate an array list of a dynamic size and class Task"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        Storage save \u003d new Storage(\"save.txt\"); //initialize the storage class"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        save.readSave(myList);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        separator();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        String myString \u003d inputCommand(); //get raw input from user"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        Parser parse \u003d new Parser(myString);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    private static String inputCommand() { //read input and returns that input to be processed in main"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        return input.nextLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public static void separator() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "zyleet": 36,
      "-": 11
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import java.util.GregorianCalendar;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zyleet"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    //Format of deadline dd-MM-yyyy HHmm"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    //Method to display deadline nicely when list is called"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    //The deadline in save.txt remains in the format above"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public String getDeadline() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        String[] month \u003d { \"January\", \"February\", \"March\", \"April\","
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                \"May\", \"June\", \"July\", \"August\","
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                \"September\", \"October\", \"November\", \"December\" };"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        String[] amPm \u003d { \"AM\", \"PM\" };"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        String niceDate \u003d \"\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        int hour;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //This provides the pattern of the date input"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            SimpleDateFormat dateFormatter \u003d new SimpleDateFormat(\"dd-MM-yyyy HHmm\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //This reads the date input in the format given"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            Date newDate \u003d dateFormatter.parse(this.at);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //Creates a gregorian calender"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            GregorianCalendar gcal \u003d new GregorianCalendar();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //Converts the date to a gregorian calender for easy usage"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            gcal.setTime(newDate);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //Calender HOUR method will return 0 if its 12, have to manually change"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            if (gcal.get(Calendar.HOUR) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                hour \u003d 12;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                hour \u003d gcal.get(Calendar.HOUR);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            niceDate \u003d String.format(\"%d %s %d, %02d:%02d %s\","
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    gcal.get(Calendar.DATE),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    month[gcal.get(Calendar.MONTH)],"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    gcal.get(Calendar.YEAR),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    hour,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    gcal.get(Calendar.MINUTE),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    amPm[gcal.get(Calendar.AM_PM)]);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        catch (ParseException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            System.out.println(\"Error. Please enter date in the format DD-MM-YYYY 2359.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        return niceDate;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        return \"[E]\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        return this.at;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        return \"[E]\" + \"[\" + (isDone ? \"\\u2713\" : \"\\u2718\") + \"] \" + this.description + \" (at: \" + this.getDeadline() + \")\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zyleet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zyleet": 72
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zyleet"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    protected String userInput;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    protected Storage save \u003d new Storage(\"save.txt\"); //initialize the storage class"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    protected ArrayList\u003cTask\u003e myList \u003d new ArrayList\u003c\u003e(); //Instantiate an array list of a dynamic size and class Task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    protected TaskList myList \u003d new TaskList(myList);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public static void separator() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    //The entire point of this class is to understand and perform what the user does"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    //Currently, Parser will take in the entire raw input"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public Parser (String userInput) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        this.userInput \u003d userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        // as long as input is not bye, keep running"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        while (!userInput.equals(\"bye\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            separator();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            if (userInput.equals(\"list\")) { //request for list, output the storage"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                getList(myList);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //if not requesting for list, check for done, event, todos, deadline"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                //splits the input according to white spaces, limit 2 means it only splits 1 space"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                String[] bufferArray \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                //check if first word is \"done\", second word should be an integer if true"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                if (bufferArray[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        int taskNumber \u003d Integer.parseInt(bufferArray[1]); //get the task number as an integer"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        myList.get(taskNumber - 1).markAsDone(); //marks that task number as done"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        System.out.println((taskNumber) + \".\" + myList.get(taskNumber - 1).getStatusIcon());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        save.updateSave(taskNumber); //Updates task status in save file"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    } catch (ArrayIndexOutOfBoundsException | IOException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        System.out.println(\"Error! \u0027Done\u0027 must be followed by a number. Please type \u0027list\u0027 to display \" +"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                                \"the list of tasks and their numbers.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    } catch (IndexOutOfBoundsException d) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        System.out.println(\"Error! Task list does not contain that task number.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                //check if first word is \"delete\", second word should be an integer if true"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                else if (bufferArray[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        int taskNumber \u003d Integer.parseInt(bufferArray[1]); //get the task number as an integer"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        //Buffer string to bait errors before doing any deletion"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        Task buffer \u003d myList.get(taskNumber - 1);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        System.out.println(myList.get(taskNumber - 1).getStatusIcon());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        myList.remove(taskNumber - 1); //remove the element from the list"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        System.out.println(\"Now you have \" + myList.size() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        save.deleteSave(taskNumber); //Updates task status in save file"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    } catch (ArrayIndexOutOfBoundsException | IOException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        System.out.println(\"Error! \u0027Delete\u0027 must be followed by a number. Please type \u0027list\u0027 to display \" +"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                                \"the list of tasks and their numbers.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    } catch (IndexOutOfBoundsException d) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        System.out.println(\"Error! Task list does not contain that task number.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                //check if first word is \"find\", bufferArray[1] should contain 1 word if true"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                else if (bufferArray[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        int count \u003d 1; //counter to count number of matching tasks"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        boolean foundFlag \u003d false;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        for (int i \u003d 0; i \u003c myList.size(); i++) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                            //Checks if a word exists in task description"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                            if (myList.get(i).getDescription().toLowerCase().contains(bufferArray[1])) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                                //This ensures that matching tasks is only run once and only when task is matched"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                                if (!foundFlag) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                                    System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                                    foundFlag \u003d true;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                                System.out.println((count) + \".\" + myList.get(i).getStatusIcon());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                                count++; //increment counter by 1 everytime a task matches"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        //If there are no tasks that matches the keyword"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        if (!foundFlag) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                            System.out.println((\"Sorry! Unable to find any tasks matching that keyword\"));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        System.out.println(\"Error! \u0027find\u0027 must be followed by a word.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    } catch (IndexOutOfBoundsException d) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        System.out.println(\"Error! Task list does not contain that task number.\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                //First word is not \u0027done\u0027, hence the user is adding a task"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                //check if its a todos, adds a standard task description with no timing"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                //After adding a new task to list, save this data to a save file"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    if (bufferArray[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                            Task newTask \u003d new Todo(bufferArray[1]); //Create a new todos with description from user input"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                            addToList(newTask, myList);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                            save.saveData(newTask);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                            System.out.println(\"Error! Description of a Todo task must not be empty.\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    //check if its a deadline, there will be a \"/by \""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    else if (bufferArray[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                            //Split the input into 2, before and after /by"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                            String[] bufferDeadline \u003d myString.split(\"/by \", 2);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                            //Now, split the first part to exclude the word \"deadline\""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                            String[] bufferDescription \u003d bufferDeadline[0].split(\" \", 2);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                            //Remove the space after task description and /by for easier formatting"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                            bufferDescription[1] \u003d bufferDescription[1].substring(0, bufferDescription[1].length() - 1);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                            //Have to check whether date format is correct"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                            //This provides the pattern of the date input"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                            SimpleDateFormat dateFormatter \u003d new SimpleDateFormat(\"dd-MM-yyyy HHmm\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                            //This reads the date input in the format given"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                            Date newDate \u003d dateFormatter.parse(bufferDeadline[1]);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                            //Create a new deadline with description from user input"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                            Task newTask \u003d new Deadline(bufferDescription[1], bufferDeadline[1]);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                            addToList(newTask, myList);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                            save.saveData(newTask);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                            //Error to be displayed when /by is not in deadline input"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                            System.out.println(\"Error! Deadline tasks must contain \u0027/by\u0027 followed by the deadline.\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        } catch (ParseException c) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                            System.out.println(\"Error! Please enter date in the format DD-MM-YYYY 2359.\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    //check if its an event, there should be a \"/at \""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    else if (bufferArray[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                            //Split the input into 2, before and after /at"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                            String[] bufferEvent \u003d myString.split(\"/at \", 2);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                            //Now, split the first part to exclude the word \"event\""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                            String[] bufferDescription \u003d bufferEvent[0].split(\" \", 2);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                            //Remove the space after task description and /by for easier formatting"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                            bufferDescription[1] \u003d bufferDescription[1].substring(0, bufferDescription[1].length() - 1);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                            //Have to check whether date format is correct"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                            //This provides the pattern of the date input"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                            SimpleDateFormat dateFormatter \u003d new SimpleDateFormat(\"dd-MM-yyyy HHmm\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                            //This reads the date input in the format given"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                            Date newDate \u003d dateFormatter.parse(bufferEvent[1]);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                            //Create a new deadline with description from user input"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                            Task newTask \u003d new Event(bufferDescription[1], bufferEvent[1]);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                            addToList(newTask, myList);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                            save.saveData(newTask);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                            System.out.println(\"Error! Event tasks must contain \u0027/at\u0027 followed by the time of event.\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        } catch (ParseException c) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                            System.out.println(\"Error! Please enter date in the format DD-MM-YYYY 2359.\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    //Error when first word is not any of the above keywords"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    else {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        System.out.println(\"Error! I do not understand what that mean.\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            separator();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            myString \u003d inputCommand(); //after processing command, wait for new input form user"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        //indicates end of duke"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        separator();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        separator();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "zyleet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zyleet": 187
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zyleet"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    protected String destination; //string containing location of save file"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public Storage (String destination) { //initialization with destination, this will be used throughout the program"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        this.destination \u003d destination;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    //Adds to list from save data without spamming \"got it...\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    private static void addToListQuietly(Task taskData, ArrayList\u003cTask\u003e myTasks) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        myTasks.add(taskData);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    //method to read data from a persistent storage and output them to a list provided as argument"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    //Should be done in the beginning"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public static void readSave(ArrayList\u003cTask\u003e myTasks) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        try (BufferedReader br \u003d Files.newBufferedReader(Paths.get(\"save.txt\"))) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            boolean saveExistence \u003d false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            // read line by line"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //[D]|[tick]|description|date"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            String myString;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            while ((myString \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                saveExistence \u003d true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                String[] bufferLine \u003d myString.split(\"/\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                //bufferLine[2] and [3] are the task description and date respectively"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                //bufferLine[1] is the statusDone icon, and its [1] character should be a tick or cross"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                //Check task type to see if any dates are needed"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                if (bufferLine[0].equals(\"[D]\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    Task newTask \u003d new Deadline(bufferLine[2], bufferLine[3]);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    //Check if the task has already been done"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    if (bufferLine[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        newTask.markAsDone();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    addToListQuietly(newTask, myTasks);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                else if (bufferLine[0].equals(\"[E]\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    Task newTask \u003d new Event(bufferLine[2], bufferLine[3]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    if (bufferLine[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        newTask.markAsDone();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    addToListQuietly(newTask, myTasks);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                //Task type is a todos, no dates"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    Task newTask \u003d new Todo(bufferLine[2]);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    if (bufferLine[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        newTask.markAsDone();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    addToListQuietly(newTask, myTasks);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            br.close();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //once all data has been added to list, display the list"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            if (saveExistence) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                System.out.println(\"Save detected. Here are your tasks from the previous session: \");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                for (int i \u003d 0; i \u003c myTasks.size(); i++) { //Standard for-each loop: for (String element: myList)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    System.out.println((i + 1) + \".\" + myTasks.get(i).getStatusIcon());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //If there is no save data, print this message"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                System.out.println(\"No save data detected on save file.\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            System.out.println(\"No save file exists. Creating new one.\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    //Method to save new tasks to a persistent storage"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public static void saveData(Task newTask) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        String fileName \u003d \"save.txt\"; //name to save file"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            File file \u003d new File(\"save.txt\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            FileWriter fw \u003d new FileWriter(file, true); //appends incoming task to file"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            BufferedWriter bw \u003d new BufferedWriter(fw);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            // Note that write() does not automatically"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            // append a newline character."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            bw.write(newTask.getType());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            bw.write(\"/\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            bw.write(newTask.getStatusInt());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            bw.write(\"/\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            bw.write(newTask.getDescription());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            bw.write(\"/\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //if incoming data is deadline or event, additional segment for deadline"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            if (newTask.getType().equals(\"[D]\") || newTask.getType().equals(\"[E]\")) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                bw.write(newTask.getBy());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            bw.newLine(); //new line for next input"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            // Always close files."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            bw.close();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            System.out.println(\"Error writing to file \u0027\" + fileName + \"\u0027\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    //method to update the task completed status within a text file"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public static void updateSave(int taskNumber) throws IOException {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        ArrayList\u003cString\u003e myList \u003d new ArrayList\u003c\u003e(); //list to store save data temporarily"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        try (BufferedReader br \u003d Files.newBufferedReader(Paths.get(\"save.txt\"))) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            // read line by line"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //[D]/1/description/date"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            String myString;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            while ((myString \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                myList.add(myString);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            br.close();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //At this point, myList should contain all lines of save data"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //bufferUpdate contains the task that needs to be updated"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            String bufferUpdate \u003d myList.get(taskNumber - 1);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            String bufferNew \u003d \"\";"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //Replace one character in the string"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            bufferNew +\u003d bufferUpdate.substring(0, 4) + \"1\" + bufferUpdate.substring(5);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            myList.set(taskNumber - 1, bufferNew);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            File file \u003d new File(\"save.txt\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            FileWriter clear \u003d new FileWriter(file); //intial write to clear file"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            clear.close();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //Now append to empty file"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            FileWriter fw \u003d new FileWriter(file, true);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            BufferedWriter bw \u003d new BufferedWriter(fw);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //Now, myList contains the updated save data, output everything into save.txt"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            for (int n \u003d 0; n \u003c myList.size(); n++) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                bw.write(myList.get(n));"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                bw.newLine();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //order of closing is important"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            bw.close();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            System.out.println(\"No save file exists. Creating new one.\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    //method to delete the task completed status within a text file"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public static void deleteSave(int taskNumber) throws IOException {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        ArrayList\u003cString\u003e myList \u003d new ArrayList\u003c\u003e(); //list to store save data temporarily"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        try (BufferedReader br \u003d Files.newBufferedReader(Paths.get(\"save.txt\"))) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            // read line by line"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //[D]/1/description/date"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            String myString;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            while ((myString \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                myList.add(myString);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            br.close();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //At this point, myList should contain all lines of save"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //Remove the task at the index position indicated by the user"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            myList.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            File file \u003d new File(\"save.txt\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            FileWriter clear \u003d new FileWriter(file); //intial write to clear file"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            clear.close();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //Now append to empty file"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            FileWriter fw \u003d new FileWriter(file, true);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            BufferedWriter bw \u003d new BufferedWriter(fw);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //Now, myList contains the updated save data, output everything into save.txt"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            for (int n \u003d 0; n \u003c myList.size(); n++) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                bw.write(myList.get(n));"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                bw.newLine();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //order of closing is important"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            bw.close();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            System.out.println(\"No save file exists. Creating new one.\");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "zyleet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zyleet": 203
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zyleet"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public Task(String description) { //initialization"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        return \"[\" + (isDone ? \"\\u2713\" : \"\\u2718\") + \"]\"; //return tick or X symbols in a bracket"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    //Return status icon as int, for easier reading when saving"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public String getStatusInt() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        return isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public void markAsDone() { //marks a task as done"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public String getType() { //returns type of task, to be overwritten"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        return \"Task\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public String getBy() { //returns deadline or event date, to be overwritten"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        return \"Date\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        return \"Full_description\"; //returns the full task data, to be overwritten"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zyleet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zyleet": 42
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zyleet"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    protected ArrayList\u003cTask\u003e myList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public TaskList (ArrayList\u003cTask\u003e myList) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        this.myList \u003d myList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    //Method to get the tasks in a list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public void getList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        for (int i \u003d 0; i \u003c myList.size(); i++) { //Standard for-each loop: for (String element: myList)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            System.out.println((i + 1) + \".\" + myList.get(i).getStatusIcon());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    //Method to add a task to a list and output the size of list"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public void addToList(Task taskData) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        myList.add(taskData);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        System.out.println(taskData.getStatusIcon());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        System.out.println(\"Now you have \" + myList.size() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public void removeFromList(int taskNumber) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        myList.remove(taskNumber);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zyleet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zyleet": 30
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zyleet"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        return \"[T]\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    //Override by using the same name of function from parent"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        return \"[T]\" + \"[\" + (isDone ? \"\\u2713\" : \"\\u2718\") + \"] \" + this.description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zyleet"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "zyleet": 19
    }
  }
]

[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zyleet"
        },
        "content": "\tid \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zyleet"
        },
        "content": "\tid \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zyleet"
        },
        "content": "\tid \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zyleet"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zyleet"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zyleet"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zyleet"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zyleet"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zyleet"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zyleet"
        },
        "content": "test {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zyleet"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zyleet"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zyleet"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zyleet"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zyleet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "zyleet": 32
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zyleet"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zyleet"
        },
        "content": " *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * @author Lee Zhen Yu"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * @version %I%"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * @since 1.0"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zyleet"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zyleet"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * Constructor that creates a dialog box containing text and an image of the poster"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * The dimensions and settings of this dialog box is imported from an fxml file."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * @param text The text to be shown in the dialog box"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * @param img The image of the poster of the text in the same dialog box"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * Method to get and display a text and an image in a dialog box."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * This is used to get the input of the user."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * @param text The user input to be shown."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * @param img The image of the user."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * @return A dialog box containing the text and image to be displayed in the GUI"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * Method to get and display text and image in a dialog box."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * This is used for responses from Duke."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * It will be flipped to differentiate itself from a user dialog box."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * @param text Duke\u0027s response to user input."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * @param img An image of Duke."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * @return A flipped dialog box containing Duke\u0027s response and his image"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zyleet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zyleet": 88
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import myTasks.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zyleet"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * The Duke class inherits methods from Applications and allows it to be called by another class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * It is no longer the main class, but rather it will initialize the parameters, save files and all other classes"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * not related to the GUI."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * It also acts as a liaison between the GUI and the terminal, as it will echo whatever is in the terminal to"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * the GUI."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zyleet"
        },
        "content": " *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * @author Lee Zhen Yu"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * @version %I%"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * @since 1.0"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zyleet"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zyleet"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    private TaskList myList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    private Storage save;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    private UI ui;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    private Parser parse;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * The constructor that is called when the GUI is starting up."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * It will initialise all the classes related to the management of user input and save data."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * Its output will go to the terminal, which will then be echoed to the UI as daduke."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * Its initialization requires the file path of the save file in order to save the task data."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * @param filePath The file path of the save file."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    //Method to initialize all important classes and data on startup"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        ui \u003d new UI(); //initialize ui class that handles input from user"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        ArrayList\u003cTask\u003e myTasks \u003d new ArrayList\u003c\u003e(); //Instantiate an array list of a dynamic size and class Task"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        myList \u003d new TaskList(myTasks); //Initialise tasklist"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        save \u003d new Storage(filePath); //initialize the storage class"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        parse \u003d new Parser();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        parse.setSave(save); //set location of save file"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        parse.setTaskList(myList); //set the list that will be updated"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        ui.welcomeMessage(); //Output welcome message"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        save.readSaveQuietly(myList); //Save file detection"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        String myString \u003d ui.inputCommand(); //get raw input from user"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        while (!myString.equals(\"bye\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            parse.parseInput(myString);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            myString \u003d ui.inputCommand();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        ui.byeMessage();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * Method to run the Duke program."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    //method output initial reading of save file"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * This method is run when the GUI is started up."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * It reads in data from a list, that is taken from the save file, and outputs it to the terminal."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * It will then be returned to MainWindow.java to be output to the GUI"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * @param myList The array list to be read from, it should contain the save data."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * @return The save data as a string to be output to the GUI."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    String getSave(TaskList myList) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        // Create a stream to hold the output"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        ByteArrayOutputStream output \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        PrintStream ps \u003d new PrintStream(output);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        // IMPORTANT: Save the old System.out!"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        PrintStream old \u003d System.out;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        // Tell Java to use your special stream"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        System.setOut(ps);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        //Java will read whatever is output to the console, and relay it to the chatbox"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        save.readSave(myList); //initial reading of save file during startup"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        // Put things back"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        System.out.flush();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        System.setOut(old);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        // Show what happened"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        System.out.println(output.toString());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * Method to run the duke program with the file path of the save file."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * To be overwritten."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     *"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * @param args A duke program."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    private static void main(String[] args) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        new Duke(\"save.txt\").run();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * Method to be overwritten in the Main class."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     *"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * @param stage The stage object to be initialized, done in the Main class."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    // This entire start method is to be overwritten by the start method in Main"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * A function to generate a response to user input."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * This method acts as a liaison between the GUI and the terminal."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * It receives a string from the GUI, which is the user input, and will parse that input."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * Whatever is output in the terminal is recorded as printstream"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * This is then returned to the GUI to be printed there"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     *"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * @param myString The string to be parsed."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * @return The string to be written by Duke in the GUI."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     *"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    String getResponse(String myString) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        // Create a stream to hold the output"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        ByteArrayOutputStream output \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        PrintStream ps \u003d new PrintStream(output);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        // IMPORTANT: Save the old System.out!"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        PrintStream old \u003d System.out;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        // Tell Java to use your special stream"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        System.setOut(ps);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        //Java will read whatever is output to the console, and relay it to the chatbox"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        parse.parseInput(myString);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        // Put things back"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        System.out.flush();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        System.setOut(old);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        // Show what happened"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        System.out.println(output.toString());"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "zyleet": 165,
      "-": 2
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zyleet"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zyleet"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * @author Lee Zhen Yu"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * @version %I%"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * @since 1.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zyleet"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zyleet"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zyleet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zyleet": 14
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zyleet"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zyleet"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * @author Lee Zhen Yu"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * @version %I%"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * @since 1.0"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zyleet"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zyleet"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    private Duke duke \u003d new Duke(\"save.txt\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * Constructor to initialize the main window of the GUI."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * The settings are loaded from an fxml file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * @param stage The stage class"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zyleet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zyleet": 39
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import myTasks.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zyleet"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zyleet"
        },
        "content": " *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * @author Lee Zhen Yu"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * @version %I%"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * @since 1.0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zyleet"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zyleet"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    //Images are in jpg, not png, but this can be changed..."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.jpg\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.jpg\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * Method that runs when duke GUI is started up."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * It does not take any input from the terminal yet, and does not output to the terminal either."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * @param d The duke helper that is going to be initialized"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    //This method initializes duke"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        ArrayList\u003cTask\u003e myTasks \u003d new ArrayList\u003c\u003e(); //Instantiate an array list of a dynamic size and class Task"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        TaskList myList \u003d new TaskList(myTasks); //Initialise tasklist"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        String welcome \u003d \"Hello from\\n\" +"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                logo + \"\\n\" +"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                \"Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                \"What can I do for you?\\n\\n\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                DialogBox.getDukeDialog(welcome, dukeImage)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        );"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        String saveBuffer \u003d duke.getSave(myList);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                DialogBox.getDukeDialog(saveBuffer, dukeImage)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        );"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        );"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zyleet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zyleet": 92
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import myTasks.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zyleet"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * Class to process user input and perform according to user input."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * Has the ability to catch errors and return an error message."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * Most of the input processing is done here, however date parsing is done within the task object."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zyleet"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * @author Lee Zhen Yu"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * @version %I%"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * @since 1.0"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zyleet"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zyleet"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    protected Storage save; //initialize the storage class"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    protected TaskList myList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * Constructor for parsers"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * Sets the save file to be used for saving data"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * @param save The save file object to be updated everytime the task list changes"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    //Set the save used by the parse"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public void setSave(Storage save) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        this.save \u003d save;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * Takes in the taskList to be used for recording tasks."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * Every time this taskList is updated, it is saved to the save file."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * @param myList The task list to be used for duke."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    //Currently, Parser will take in the entire raw input and taskList"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public void setTaskList(TaskList myList) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        this.myList \u003d myList;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * The main method to parse the user input."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * It takes in the user input and creates, updates or deletes a task in the taskList."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * Every time the taskList is changed it will also update the save file to reflect the changes."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * It will break up the user input into multiple parts to be processed."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * Most notably, the first word is the command itself, and is to be checked first."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * Depending on the command given, the rest of the user input will be further broken down."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * @param userInput The user input to be processed."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    //The entire point of this class is to understand and perform what the user does"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public void parseInput(String userInput) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        // as long as input is not bye, keep running"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        if (userInput.equals(\"list\")) { //request for list, output the storage"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            myList.getList();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        //if not requesting for list, check for done, event, todos, deadline"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //splits the input according to white spaces, limit 2 means it only splits 1 space"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            String[] bufferArray \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //check if first word is \"done\", second word should be an integer if true"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            if (bufferArray[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    int taskNumber \u003d Integer.parseInt(bufferArray[1]); //get the task number as an integer"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    myList.updateTask(taskNumber - 1); //marks that task number as done"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    System.out.println((taskNumber) + \".\" + myList.getTask(taskNumber - 1).getStatusIcon());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    save.updateSave(taskNumber); //Updates task status in save file"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException | IOException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    System.out.println(\"Error! \u0027Done\u0027 must be followed by a number. Please type \u0027list\u0027 to display \" +"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                            \"the list of tasks and their numbers.\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                } catch (IndexOutOfBoundsException d) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    System.out.println(\"Error! Task list does not contain that task number.\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //check if first word is \"delete\", second word should be an integer if true"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            else if (bufferArray[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    int taskNumber \u003d Integer.parseInt(bufferArray[1]); //get the task number as an integer"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    //Buffer string to bait errors before doing any deletion"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    Task buffer \u003d myList.getTask(taskNumber - 1);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    System.out.println(myList.getTask(taskNumber - 1).getStatusIcon());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    myList.removeFromList(taskNumber - 1); //remove the element from the list"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    System.out.println(\"Now you have \" + myList.getSize() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    save.deleteSave(taskNumber); //Updates task status in save file"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException | IOException e) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    System.out.println(\"Error! \u0027Delete\u0027 must be followed by a number. Please type \u0027list\u0027 to display \" +"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                            \"the list of tasks and their numbers.\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                } catch (IndexOutOfBoundsException d) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    System.out.println(\"Error! Task list does not contain that task number.\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //check if first word is \"find\", bufferArray[1] should contain 1 word if true"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            else if (bufferArray[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    int count \u003d 1; //counter to count number of matching tasks"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    boolean foundFlag \u003d false;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    for (int i \u003d 0; i \u003c myList.getSize(); i++) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        //Checks if a word exists in task description"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        if (myList.getTask(i).getDescription().toLowerCase().contains(bufferArray[1])) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                            //This ensures that matching tasks is only run once and only when task is matched"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                            if (!foundFlag) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                                System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                                foundFlag \u003d true;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                            System.out.println((count) + \".\" + myList.getTask(i).getStatusIcon());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                            count++; //increment counter by 1 everytime a task matches"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    //If there are no tasks that matches the keyword"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    if (!foundFlag) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        System.out.println((\"Sorry! Unable to find any tasks matching that keyword\"));"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    System.out.println(\"Error! \u0027find\u0027 must be followed by a word.\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                } catch (IndexOutOfBoundsException d) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    System.out.println(\"Error! Task list does not contain that task number.\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //First word is not \u0027done\u0027, hence the user is adding a task"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //check if its a todos, adds a standard task description with no timing"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //After adding a new task to list, save this data to a save file"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                if (bufferArray[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        Task newTask \u003d new Todo(bufferArray[1]); //Create a new todos with description from user input"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        myList.addToList(newTask);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        save.saveData(newTask);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        System.out.println(\"Error! Description of a myTasks.Todo task must not be empty.\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                //check if its a deadline, there will be a \"/by \""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                else if (bufferArray[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        //Split the input into 2, before and after /by"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        String[] bufferDeadline \u003d userInput.split(\"/by \", 2);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        //Now, split the first part to exclude the word \"deadline\""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        String[] bufferDescription \u003d bufferDeadline[0].split(\" \", 2);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        //Remove the space after task description and /by for easier formatting"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        bufferDescription[1] \u003d bufferDescription[1].substring(0, bufferDescription[1].length() - 1);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        //Have to check whether date format is correct"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        //This provides the pattern of the date input"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        SimpleDateFormat dateFormatter \u003d new SimpleDateFormat(\"dd-MM-yyyy HHmm\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        //This reads the date input in the format given"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        Date newDate \u003d dateFormatter.parse(bufferDeadline[1]);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        //Create a new deadline with description from user input"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        Task newTask \u003d new Deadline(bufferDescription[1], bufferDeadline[1]);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        myList.addToList(newTask);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        save.saveData(newTask);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        //Error to be displayed when /by is not in deadline input"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        System.out.println(\"Error! myTasks.Deadline tasks must contain \u0027/by\u0027 followed by the deadline.\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    } catch (ParseException c) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        System.out.println(\"Error! Please enter date in the format DD-MM-YYYY 2359.\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                //check if its an event, there should be a \"/at \""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                else if (bufferArray[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        //Split the input into 2, before and after /at"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        String[] bufferEvent \u003d userInput.split(\"/at \", 2);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        //Now, split the first part to exclude the word \"event\""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        String[] bufferDescription \u003d bufferEvent[0].split(\" \", 2);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        //Remove the space after task description and /by for easier formatting"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        bufferDescription[1] \u003d bufferDescription[1].substring(0, bufferDescription[1].length() - 1);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        //Have to check whether date format is correct"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        //This provides the pattern of the date input"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        SimpleDateFormat dateFormatter \u003d new SimpleDateFormat(\"dd-MM-yyyy HHmm\");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        //This reads the date input in the format given"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        Date newDate \u003d dateFormatter.parse(bufferEvent[1]);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        //Create a new deadline with description from user input"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        Task newTask \u003d new Event(bufferDescription[1], bufferEvent[1]);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        myList.addToList(newTask);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        save.saveData(newTask);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        System.out.println(\"Error! myTasks.Event tasks must contain \u0027/at\u0027 followed by the time of event.\");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    } catch (ParseException c) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        System.out.println(\"Error! Please enter date in the format DD-MM-YYYY 2359.\");"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                //Error when first word is not any of the above keywords"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    System.out.println(\"Error! I do not understand what that mean.\");"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "zyleet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zyleet": 219
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import myTasks.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zyleet"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * The class that handles save data."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * It creates a save object that contains the file path to the save file, and methods to edit the save file."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zyleet"
        },
        "content": " *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * @author Lee Zhen Yu"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * @version %I%"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * @since 1.0"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zyleet"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zyleet"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    protected String destination; //string containing location of save file"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * Constructer of a save object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * This save object has a specific save file, which is taken in as argument during construction."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * @param destination The file path of the save file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public Storage (String destination) { //initialization with destination, this will be used throughout the program"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        this.destination \u003d destination;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * Method to read data from a persistent storage and output them to the taskList specified in the argument."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * The save file has already been declared during construction of this object, hence only the taskList is needed."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * It will also output the content of the save data in a format friendly to the reader."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * @param myTasks The taskList that will contain the save data from the save file."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    //method to read data from a persistent storage and output them to a list provided as argument"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    //Should be done in the beginning"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public void readSave(TaskList myTasks) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        try (BufferedReader br \u003d Files.newBufferedReader(Paths.get(this.destination))) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            boolean saveExistence \u003d false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            // read line by line"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //[D]|[tick]|description|date"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            String myString;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            while ((myString \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                saveExistence \u003d true;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                String[] bufferLine \u003d myString.split(\"/\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                //bufferLine[2] and [3] are the task description and date respectively"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                //bufferLine[1] is the statusDone icon, and its [1] character should be a tick or cross"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                //Check task type to see if any dates are needed"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                if (bufferLine[0].equals(\"[D]\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    Task newTask \u003d new Deadline(bufferLine[2], bufferLine[3]);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    //Check if the task has already been done"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    if (bufferLine[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        newTask.markAsDone();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    myTasks.addToListQuietly(newTask);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                else if (bufferLine[0].equals(\"[E]\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    Task newTask \u003d new Event(bufferLine[2], bufferLine[3]);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    if (bufferLine[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        newTask.markAsDone();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    myTasks.addToListQuietly(newTask);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                //Task type is a todos, no dates"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    Task newTask \u003d new Todo(bufferLine[2]);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    if (bufferLine[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        newTask.markAsDone();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    myTasks.addToListQuietly(newTask);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            br.close();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //once all data has been added to list, display the list"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            if (saveExistence) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                System.out.println(\"Save detected. Here are your tasks from the previous session: \");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                for (int i \u003d 0; i \u003c myTasks.getSize(); i++) { //Standard for-each loop: for (String element: myList)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    System.out.println((i + 1) + \".\" + myTasks.getTask(i).getStatusIcon());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //If there is no save data, print this message"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                System.out.println(\"No save data detected on save file.\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            System.out.println(\"No save file exists. Creating new one.\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * Method to read the save file and output them into the taskList specified as an argument."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * This will not output any text regarding the existence of the save file."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * It will also not output any tasks from the save data."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * This is more a method to be used in the background without spamming the user."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * @param myTasks The taskList to be written to."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    //method to read data from a persistent storage and output them to a list provided as argument"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    //This reads in quietly without outputting anything"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public void readSaveQuietly(TaskList myTasks) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        try (BufferedReader br \u003d Files.newBufferedReader(Paths.get(this.destination))) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            boolean saveExistence \u003d false;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            // read line by line"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //[D]|[tick]|description|date"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            String myString;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            while ((myString \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                saveExistence \u003d true;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                String[] bufferLine \u003d myString.split(\"/\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                //bufferLine[2] and [3] are the task description and date respectively"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                //bufferLine[1] is the statusDone icon, and its [1] character should be a tick or cross"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                //Check task type to see if any dates are needed"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                if (bufferLine[0].equals(\"[D]\")) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    Task newTask \u003d new Deadline(bufferLine[2], bufferLine[3]);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    //Check if the task has already been done"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    if (bufferLine[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        newTask.markAsDone();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    myTasks.addToListQuietly(newTask);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                else if (bufferLine[0].equals(\"[E]\")) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    Task newTask \u003d new Event(bufferLine[2], bufferLine[3]);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    if (bufferLine[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        newTask.markAsDone();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    myTasks.addToListQuietly(newTask);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                //Task type is a todos, no dates"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    Task newTask \u003d new Todo(bufferLine[2]);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    if (bufferLine[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                        newTask.markAsDone();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    myTasks.addToListQuietly(newTask);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            br.close();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //If there is no save data, print this message"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            if (!saveExistence){"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                System.out.println(\"No save data detected on save file.\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            System.out.println(\"No save file exists. Creating new one.\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * This method takes in a new task and saves them to the save file."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * It will append this new task in a new line of the save file."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     *"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * @param newTask The new task to be saved in the save file."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    //Method to save new tasks to a persistent storage"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public void saveData(Task newTask) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            File file \u003d new File(this.destination);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            FileWriter fw \u003d new FileWriter(file, true); //appends incoming task to file"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            BufferedWriter bw \u003d new BufferedWriter(fw);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            // Note that write() does not automatically"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            // append a newline character."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            bw.write(newTask.getType());"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            bw.write(\"/\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            bw.write(newTask.getStatusInt());"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            bw.write(\"/\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            bw.write(newTask.getDescription());"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            bw.write(\"/\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //if incoming data is deadline or event, additional segment for deadline"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            if (newTask.getType().equals(\"[D]\") || newTask.getType().equals(\"[E]\")) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                bw.write(newTask.getBy());"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            bw.newLine(); //new line for next input"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            // Always close files."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            bw.close();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            System.out.println(\"Error writing to file \u0027\" + this.destination + \"\u0027\");"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * This method will update the status of a particular task in the save file."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * From not done to done."
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * It will place the entire save file into a temporary array list so that the save file can be written to."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * The array list will then have the specified task updated to reflect its new status."
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * Finally the array list will then be written to the save file."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * This will overwrite the contents of the save file instead of updating only one line, however I do not know an"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * alternative."
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     *"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * @param taskNumber The number of the task to be updated."
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * @throws IOException When there is no save file, this error message will be thrown."
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    //method to update the task completed status within a text file"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public void updateSave(int taskNumber) throws IOException {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        ArrayList\u003cString\u003e myList \u003d new ArrayList\u003c\u003e(); //list to store save data temporarily"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        try (BufferedReader br \u003d Files.newBufferedReader(Paths.get(this.destination))) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            // read line by line"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //[D]/1/description/date"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            String myString;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            while ((myString \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                myList.add(myString);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            br.close();"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //At this point, myList should contain all lines of save data"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //bufferUpdate contains the task that needs to be updated"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            String bufferUpdate \u003d myList.get(taskNumber - 1);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            String bufferNew \u003d \"\";"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //Replace one character in the string"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            bufferNew +\u003d bufferUpdate.substring(0, 4) + \"1\" + bufferUpdate.substring(5);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            myList.set(taskNumber - 1, bufferNew);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            File file \u003d new File(this.destination);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            FileWriter clear \u003d new FileWriter(file); //initial write to clear file"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            clear.close();"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //Now append to empty file"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            FileWriter fw \u003d new FileWriter(file, true);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            BufferedWriter bw \u003d new BufferedWriter(fw);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //Now, myList contains the updated save data, output everything into save.txt"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            for (int n \u003d 0; n \u003c myList.size(); n++) {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                bw.write(myList.get(n));"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                bw.newLine();"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //order of closing is important"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            bw.close();"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            System.out.println(\"No save file exists. Creating new one.\");"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * Method to delete a particular task in a save file."
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * The entire save file is saved into a temporary array list."
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * One of the elements of the array list corresponding to the task number is then deleted."
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * Then the whole array list is written to the save file, overwriting its current contents."
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     *"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * @param taskNumber The number of the task to be deleted."
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * @throws IOException Error thrown when there is no save file detected."
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    //method to delete the task completed status within a text file"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public void deleteSave(int taskNumber) throws IOException {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        ArrayList\u003cString\u003e myList \u003d new ArrayList\u003c\u003e(); //list to store save data temporarily"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        try (BufferedReader br \u003d Files.newBufferedReader(Paths.get(this.destination))) {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            // read line by line"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //[D]/1/description/date"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            String myString;"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            while ((myString \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                myList.add(myString);"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            }"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            br.close();"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //At this point, myList should contain all lines of save"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //Remove the task at the index position indicated by the user"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            myList.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            File file \u003d new File(this.destination);"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            FileWriter clear \u003d new FileWriter(file); //intial write to clear file"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            clear.close();"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //Now append to empty file"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            FileWriter fw \u003d new FileWriter(file, true);"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            BufferedWriter bw \u003d new BufferedWriter(fw);"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //Now, myList contains the updated save data, output everything into save.txt"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            for (int n \u003d 0; n \u003c myList.size(); n++) {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                bw.write(myList.get(n));"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                bw.newLine();"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            }"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //order of closing is important"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            bw.close();"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            System.out.println(\"No save file exists. Creating new one.\");"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "zyleet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zyleet": 309
    }
  },
  {
    "path": "src/main/java/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zyleet"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * Method to handle the UI."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * Unlike the mainwindow and dialogbox classes, this one handles UI elements of the terminal."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * Mostly obsolete in favor of the abovementioned two classes."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zyleet"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * @author Lee Zhen Yu"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * @version %I%"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * @since 1.0"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zyleet"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zyleet"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * Constructor to for an UI object of duke."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public UI() { //initialization"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * Method to read in user input in the terminal and return the input to be parsed."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * Does not take in inputs from the GUI."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * @return The user input as a string."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public static String inputCommand() { //read input and returns that input to be processed in main"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        return input.nextLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * Method to return a bye message when the word bye is entered."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * This signifies the end of the duke program."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public static void byeMessage() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * Method to display a welcome message on startup of duke."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * This signifies the start of the duke program."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * Still has uses for the GUI and terminal."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public void welcomeMessage() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\"); //introduction"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zyleet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zyleet": 60
    }
  },
  {
    "path": "src/main/java/myTasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zyleet"
        },
        "content": "package myTasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import myTasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import java.util.GregorianCalendar;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zyleet"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * This is a class that inherits from the Task class."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * In addition to its parent\u0027s methods, it also has the ability to parse the input date."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * Very similar to the myTasks.Event class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zyleet"
        },
        "content": " *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * @author Lee Zhen Yu"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * @version %I%"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * @since 1.0"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zyleet"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zyleet"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    //deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    //[D][✗] do homework (by: no idea :-p)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    //myTasks.Deadline reads in an input, separate via a /by"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * Constructor of the deadline class requires a description and a date for a task to be done by"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * These are specific to every deadline object"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * @param by When the task is to be done by. This is in the format \"dd-MM-yyyy HHmm\"."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * A method to return the date and time of a deadline of a task."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * It reads in the date as dd-MM-yyyy HHmm and is converted into a gregorian calender object."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * From this gregorian calender object we can easily extract the exact date and time of the deadline."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * This raw date and time requires minor adjustments to be readable to the average user"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * @return The date and time of the deadline in a format familiar to the user"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    //Format of deadline dd-MM-yyyy HHmm"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    //Method to display deadline nicely when list is called"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    //The deadline in save.txt remains in the format above"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public String getDeadline() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        String[] month \u003d { \"January\", \"February\", \"March\", \"April\","
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                \"May\", \"June\", \"July\", \"August\","
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                \"September\", \"October\", \"November\", \"December\" };"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        String[] amPm \u003d { \"AM\", \"PM\" };"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        String niceDate \u003d \"\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        int hour;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //This provides the pattern of the date input"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            SimpleDateFormat dateFormatter \u003d new SimpleDateFormat(\"dd-MM-yyyy HHmm\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //This reads the date input in the format given"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            Date newDate \u003d dateFormatter.parse(this.by);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //Creates a gregorian calender"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            GregorianCalendar gcal \u003d new GregorianCalendar();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //Converts the date to a gregorian calender for easy usage"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            gcal.setTime(newDate);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //Calender HOUR method will return 0 if its 12, have to manually change"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            if (gcal.get(Calendar.HOUR) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                hour \u003d 12;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                hour \u003d gcal.get(Calendar.HOUR);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            niceDate \u003d String.format(\"%d %s %d, %02d:%02d %s\","
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    gcal.get(Calendar.DATE),"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    month[gcal.get(Calendar.MONTH)],"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    gcal.get(Calendar.YEAR),"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    hour,"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    gcal.get(Calendar.MINUTE),"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    amPm[gcal.get(Calendar.AM_PM)]);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        catch (ParseException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            System.out.println(\"Error. Please enter date in the format DD-MM-YYYY 2359.\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        return niceDate;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * A method to return the type of task of this object."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * @return This will return [D] to show that this task is a deadline task."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        return \"[D]\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * A method to return the deadline of the task as given in the user input."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     *"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * @return A string containing the user input of the deadline."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * A method to return the entire task status, including its status, task type, deadline and description"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     *"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * @return It returns everything about a task in a formatted string that is easily understood by the user"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        return \"[D]\" + \"[\" + (isDone ? \"Y\" : \"N\") + \"] \" + this.description + \" (by: \" + this.getDeadline() + \")\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zyleet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zyleet": 118
    }
  },
  {
    "path": "src/main/java/myTasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zyleet"
        },
        "content": "package myTasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import myTasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import java.util.GregorianCalendar;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zyleet"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * This is a class that inherits from the Task class."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * In addition to its parent\u0027s methods, it also has the ability to parse the input date."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * Very similar to the myTasks.Deadline class."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zyleet"
        },
        "content": " *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * @author Lee Zhen Yu"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * @version %I%"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * @since 1.0"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zyleet"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zyleet"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * Constructor of the event class requires a description and a date for when the evebt is happening"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * These are specific to every event object"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * @param at When the event is happening. This is in the format \"dd-MM-yyyy HHmm\"."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * A method to return the date and time of an event task."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * It reads in the date as dd-MM-yyyy HHmm and is converted into a gregorian calender object."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * From this gregorian calender object we can easily extract the exact date and time of the deadline."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * This raw date and time requires minor adjustments to be readable to the average user"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * @return The date and time of an event in a format familiar to the user"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    //Format of deadline dd-MM-yyyy HHmm"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    //Method to display deadline nicely when list is called"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    //The deadline in save.txt remains in the format above"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public String getDeadline() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        String[] month \u003d { \"January\", \"February\", \"March\", \"April\","
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                \"May\", \"June\", \"July\", \"August\","
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                \"September\", \"October\", \"November\", \"December\" };"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        String[] amPm \u003d { \"AM\", \"PM\" };"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        String niceDate \u003d \"\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        int hour;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //This provides the pattern of the date input"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            SimpleDateFormat dateFormatter \u003d new SimpleDateFormat(\"dd-MM-yyyy HHmm\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //This reads the date input in the format given"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            Date newDate \u003d dateFormatter.parse(this.at);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //Creates a gregorian calender"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            GregorianCalendar gcal \u003d new GregorianCalendar();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //Converts the date to a gregorian calender for easy usage"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            gcal.setTime(newDate);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            //Calender HOUR method will return 0 if its 12, have to manually change"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            if (gcal.get(Calendar.HOUR) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                hour \u003d 12;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                hour \u003d gcal.get(Calendar.HOUR);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            niceDate \u003d String.format(\"%d %s %d, %02d:%02d %s\","
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    gcal.get(Calendar.DATE),"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    month[gcal.get(Calendar.MONTH)],"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    gcal.get(Calendar.YEAR),"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    hour,"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    gcal.get(Calendar.MINUTE),"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zyleet"
        },
        "content": "                    amPm[gcal.get(Calendar.AM_PM)]);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        catch (ParseException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            System.out.println(\"Error. Please enter date in the format DD-MM-YYYY 2359.\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        return niceDate;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * A method to return the type of task of this object."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     *"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * @return This will return [E] to show that this task is an event task."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        return \"[E]\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * A method to return the date of an event as given in the user input."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     *"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * @return A string containing the user input of the date of event."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        return this.at;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * A method to return the entire task status, including its status, task type, event date and description"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     *"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * @return It returns everything about a task in a formatted string that is easily understood by the user"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        return \"[E]\" + \"[\" + (isDone ? \"Y\" : \"N\") + \"] \" + this.description + \" (at: \" + this.getDeadline() + \")\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zyleet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zyleet": 116
    }
  },
  {
    "path": "src/main/java/myTasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zyleet"
        },
        "content": "package myTasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zyleet"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * The task superclass."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * It contains the description and task status."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * The task number is specific handled by the task list."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * It does not contain any dates or times; These are specific only to deadline and event tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zyleet"
        },
        "content": " *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * @author Lee Zhen Yu"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * @version %I%"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * @since 1.0"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zyleet"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zyleet"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * Constructor of the task object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * It only takes in the description of the task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * The status of the task defaults to not completed."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public Task(String description) { //initialization"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * Method to get the status of the object."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * Overwritten be the same method in the deadline and even tasks."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * @return Y if the task is done. N if the task is not done."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        return \"[\" + (isDone ? \"Y\" : \"N\") + \"]\"; //return tick or X symbols in a bracket"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * Method to get the status of the task as a single digit and string."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * Primarily used for easier storage of the task in the save file."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * @return 1 if the task is done. 0 if the task is not done."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    //Return status icon as int, for easier reading when saving"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public String getStatusInt() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        return isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * Method to update the status of the task from not done to done."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public void markAsDone() { //marks a task as done"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * Method to return the type of task."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * Overwritten by its children classes deadline, event and todoo."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * @return The type of task, in this case it defaults to Task."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public String getType() { //returns type of task, to be overwritten"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        return \"Task\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * Method to return the date of the task."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * Overwritten by its children classes deadline and event."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * @return The word date a string by default. It is overwritten."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public String getBy() { //returns deadline or event date, to be overwritten"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        return \"Date\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * Method to return the full task data, including its status and date."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * This is overwritten in its children classes."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * @return The word Full_description as a string."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        return \"Full_description\"; //returns the full task data, to be overwritten"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * Method to return the task description."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     *"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * @return The task\u0027s description as a string."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zyleet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zyleet": 100
    }
  },
  {
    "path": "src/main/java/myTasks/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zyleet"
        },
        "content": "package myTasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import myTasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zyleet"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * Method to store and manage multiple tasks at once."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zyleet"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * @author Lee Zhen Yu"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * @version %I%"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * @since 1.0"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zyleet"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zyleet"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    protected ArrayList\u003cTask\u003e myList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * Constructor that converts a given arrayList into a taskList."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * @param myList The array list to be converted into a taskList."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public TaskList (ArrayList\u003cTask\u003e myList) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        this.myList \u003d myList;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * Method to display the tasks in the taskList in a format friendly to the user."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    //Method to get the tasks in a list"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public void getList() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        for (int i \u003d 0; i \u003c myList.size(); i++) { //Standard for-each loop: for (String element: myList)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            System.out.println((i + 1) + \".\" + myList.get(i).getStatusIcon());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * Method to add a new task to the taskList."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * It will output a message acknowledging that a task has been added successfully."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * @param taskData The task to be added to the taskList."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    //Method to add a task to a list and output the size of list"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public void addToList(Task taskData) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        myList.add(taskData);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        System.out.println(taskData.getStatusIcon());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        System.out.println(\"Now you have \" + myList.size() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * Method to add a new task to the taskList."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * This method will not output any messages regarding the addition of the task."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * Its more for background additions without spamming the user with texts."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * @param taskData The task to be added to the taskList."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    //Adds to list from save data without spamming \"got it...\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public void addToListQuietly(Task taskData) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        myList.add(taskData);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * Method to remove a task corresponding to the task number from the taskList."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * The parser class has accounted for and updated this taskNumber to fit computing standards."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * @param taskNumber The number of the task to be removed from the taskList."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    //method to remove task from list"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public void removeFromList(int taskNumber) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        myList.remove(taskNumber);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * Method to update the status of a task in the taskList."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * The parser class has accounted for and updated this taskNumber to fit computing standards."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * @param taskNumber The number of the task to be updated."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    //method to update the status of a task"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public void updateTask(int taskNumber) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        myList.get(taskNumber).markAsDone();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * Method to return and display the data of a task corresponding to the task number."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * @param taskNumber The number of the task to be displayed"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * @return The entire data of the task as a task type."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    //Method to display task description and stats as a task"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public Task getTask(int taskNumber) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        return myList.get(taskNumber);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * Method to return the number of tasks in the taskList as an integer."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * For tracking the number of tasks in the taskList."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     *"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * @return The size of the taskList."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    //method to return size of list"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        return myList.size();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zyleet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zyleet": 107
    }
  },
  {
    "path": "src/main/java/myTasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zyleet"
        },
        "content": "package myTasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import myTasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zyleet"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * Class that inherits many of its methods from its superclass Task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * Unlike the deadline and event task classes, this class does not parse date inputs."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zyleet"
        },
        "content": " *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * @author Lee Zhen Yu"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * @version %I%"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zyleet"
        },
        "content": " * @since 1.0"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zyleet"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zyleet"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * Constructor that takes in the task description."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * @param description The description of this toodo class."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * Method to return the type of task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * @return Since this is a todoo class, return [T}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        return \"[T]\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * Method that overrides the same method in the parent class."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * It returns the full data of this toddo task in a format readable to the user."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     * @return The full data of the task class as a string."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zyleet"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    //Override by using the same name of function from parent"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zyleet"
        },
        "content": "        return \"[T]\" + \"[\" + (isDone ? \"Y\" : \"N\") + \"] \" + this.description;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zyleet"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "zyleet": 47
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zyleet"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zyleet"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zyleet"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zyleet"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zyleet"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zyleet"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" fillHeight\u003d\"false\" prefWidth\u003d\"634.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zyleet"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zyleet"
        },
        "content": "      \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zyleet"
        },
        "content": "      \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zyleet"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zyleet"
        },
        "content": "   \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zyleet"
        },
        "content": "      \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zyleet"
        },
        "content": "   \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zyleet"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "zyleet": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zyleet"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zyleet"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zyleet"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zyleet"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zyleet"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zyleet"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zyleet"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"720.0\" prefWidth\u003d\"650.0\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zyleet"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zyleet"
        },
        "content": "      \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"574.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zyleet"
        },
        "content": "      \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"574.0\" layoutY\u003d\"678.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zyleet"
        },
        "content": "      \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" layoutY\u003d\"-2.0\" prefHeight\u003d\"680.0\" prefWidth\u003d\"650.0\" vbarPolicy\u003d\"ALWAYS\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"42.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"-2.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zyleet"
        },
        "content": "         \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zyleet"
        },
        "content": "            \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"679.0\" prefWidth\u003d\"634.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zyleet"
        },
        "content": "         \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zyleet"
        },
        "content": "      \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zyleet"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zyleet"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "zyleet": 19
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zyleet"
        },
        "content": "class DeadlineTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    void getDeadline() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    void getType() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    void getBy() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    void getStatusIcon() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zyleet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zyleet": 22
    }
  },
  {
    "path": "src/test/java/DialogBoxTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zyleet"
        },
        "content": "class DialogBoxTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    void getUserDialog() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    void getDukeDialog() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zyleet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zyleet": 14
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zyleet"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    void getSave() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    void start() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    void getResponse() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zyleet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zyleet": 18
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zyleet"
        },
        "content": "class EventTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    void getDeadline() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    void getType() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    void getBy() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    void getStatusIcon() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zyleet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zyleet": 22
    }
  },
  {
    "path": "src/test/java/LauncherTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zyleet"
        },
        "content": "class LauncherTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    void main() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zyleet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zyleet": 10
    }
  },
  {
    "path": "src/test/java/MainTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zyleet"
        },
        "content": "class MainTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    void start() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zyleet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zyleet": 10
    }
  },
  {
    "path": "src/test/java/MainWindowTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zyleet"
        },
        "content": "class MainWindowTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    void initialize() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    void setDuke() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zyleet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zyleet": 14
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zyleet"
        },
        "content": "class ParserTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    void setSave() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    void setTaskList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    void parseInput() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zyleet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zyleet": 18
    }
  },
  {
    "path": "src/test/java/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zyleet"
        },
        "content": "class StorageTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    void readSave() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    void readSaveQuietly() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    void saveData() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    void updateSave() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    void deleteSave() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zyleet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zyleet": 26
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zyleet"
        },
        "content": "class TaskListTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    void getList() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    void addToList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    void addToListQuietly() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    void removeFromList() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    void updateTask() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    void getTask() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    void getSize() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zyleet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zyleet": 34
    }
  },
  {
    "path": "src/test/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zyleet"
        },
        "content": "class TaskTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    void getStatus() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    void getStatusInt() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    void markAsDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    void getType() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    void getBy() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    void getStatusIcon() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    void getDescription() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zyleet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zyleet": 34
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zyleet"
        },
        "content": "class TodoTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    void getType() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    void getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zyleet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zyleet": 14
    }
  },
  {
    "path": "src/test/java/UITest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zyleet"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zyleet"
        },
        "content": "class UITest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    void inputCommand() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    void byeMessage() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zyleet"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    void welcomeMessage() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zyleet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zyleet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zyleet": 18
    }
  }
]

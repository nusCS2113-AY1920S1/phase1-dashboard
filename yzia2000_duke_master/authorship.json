[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    // executableDir \u003d \"src.main.java\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "run {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  standardInput \u003d System.in"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "test {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  useJUnitPlatform()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yzia2000": 14,
      "-": 15
    }
  },
  {
    "path": "src/main/java/seedu/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yzia2000"
        },
        "content": " * This task type inherits from Task. It specifies a day before which a task should be completed."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yzia2000"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  protected String by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  protected String date_by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  private Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    this.by \u003d by;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    this.translate_date();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * Makes use of the DateTimeFormatter and LocalDateTime class to parse the user input date time and initializes the date_by member variable."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  public void translate_date() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    // splitting date into individual components"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/uuuu HHmm\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    LocalDateTime parsedDate;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      parsedDate \u003d LocalDateTime.parse(this.by, formatter);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      ui.date_time_error(); "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      this.date_by \u003d this.by;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    String suffix;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    switch (parsedDate.getDayOfMonth() % 10)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      case 1:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "        suffix \u003d \"st\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "        break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      case 2:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "        suffix \u003d \"nd\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "        break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      case 3:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "        suffix \u003d \"rd\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "        break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      default:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "        suffix \u003d \"th\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "        break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    if (parsedDate.getDayOfMonth() \u003e 3 \u0026\u0026 parsedDate.getDayOfMonth() \u003c 21) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      suffix \u003d \"th\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    DateTimeFormatter print_format \u003d DateTimeFormatter.ofPattern(\"d\u0027\" + suffix + \"\u0027 \u0027of\u0027 MMMM uuuu\u0027,\u0027 h:mma\", Locale.ENGLISH);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    this.date_by \u003d parsedDate.format(print_format);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * Overrides the toString method in Task to display task type and date time."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * @return a string with the target info."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    return \"[D]\" + super.toString() + \" (by: \" + this.date_by + \")\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * Overrides the toSaveFormat function to include task type and date time."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * @return a string with pipe separated info."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  public String toSaveFormat() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    return \"D|\" + super.toSaveFormat() + \"|\" + this.by;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * Checks equality with another Deadline instance."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * @param temp the instance to compare against."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * @return true or false to the comparison."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  public boolean equals(Deadline temp) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    if (this.description \u003d\u003d temp.description \u0026\u0026 this.by \u003d\u003d temp.by \u0026\u0026 this.date_by \u003d\u003d temp.date_by) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      return true; "
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    return false;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yzia2000": 94
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yzia2000"
        },
        "content": " * A personal assitant that takes in user input and gives and performs an operation that can help the user"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yzia2000"
        },
        "content": " * in his day to day needs. Has a tasklist with multiple features. "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yzia2000"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  // Creating ArrayList of Task objects"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  protected static TaskList list;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  protected static Storage storage \u003d new Storage(\"data/duke.txt\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  protected static Ui ui \u003d new Ui(new Scanner(System.in));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  protected static Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * Runs Duke which commences the user to machine feedback loop until the user enters \"bye\"."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * Loads existing tasklist and performs operations like list, find, delete and add on the tasklist."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * Saves the list to disk for next duke session inside data/duke.txt."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * @see Storage, TaskList, Parser, Ui"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  public static void run() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    ui.show_opening_string();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    list \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    System.out.println();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    // Taking the first word as input for task type"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    String raw_input \u003d ui.take_input();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    // Taking input and printing till user input is bye"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    while (!raw_input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      list \u003d parser.parse(raw_input, list);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "        storage.save(list.return_list());  "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      } catch(IOException e){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "        ui.show_save_error();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      raw_input \u003d ui.take_input();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      System.out.println();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    ui.show_bye_message();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  public static void main(String[] args) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    Duke.run();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yzia2000": 51,
      "-": 2
    }
  },
  {
    "path": "src/main/java/seedu/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yzia2000"
        },
        "content": " * This task type inherits from Task. It specifies an event at a particular time."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yzia2000"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  protected String at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  // translated date version"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  protected String date_at;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  private Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  public Event(String description, String at) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    this.at \u003d at;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    this.to_date();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * Makes use of the DateTimeFormatter and LocalDateTime class to parse the user input date time and initializes the date_at member variable."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  public void to_date() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    // splitting date"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/uuuu HHmm\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    LocalDateTime parsedDate;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      parsedDate \u003d LocalDateTime.parse(this.at, formatter);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      ui.date_time_error(); "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      this.date_at \u003d this.at;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    String suffix;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    switch (parsedDate.getDayOfMonth() % 10)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      case 1:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "        suffix \u003d \"st\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "        break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      case 2:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "        suffix \u003d \"nd\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "        break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      case 3:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "        suffix \u003d \"rd\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "        break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      default:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "        suffix \u003d \"th\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "        break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    if (parsedDate.getDayOfMonth() \u003e 3 \u0026\u0026 parsedDate.getDayOfMonth() \u003c 21) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      suffix \u003d \"th\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    DateTimeFormatter print_format \u003d DateTimeFormatter.ofPattern(\"d\u0027\" + suffix + \"\u0027 \u0027of\u0027 MMMM uuuu\u0027,\u0027 h:mma\", Locale.ENGLISH);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    this.date_at \u003d parsedDate.format(print_format);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * Overrides the toString method in Task to display task type and date time."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * @return a string with the target info."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    return \"[E]\" + super.toString() + \" (at: \" + this.date_at + \")\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * Overrides the toSaveFormat function to include task type and date time."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * @return a string with pipe separated info."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  public String toSaveFormat() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    return \"E|\" + super.toSaveFormat() + \"|\" + this.at;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * Checks equality with another Event instance."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * @param temp the instance to compare against."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * @return true or false to the comparison."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  public boolean equals(Event temp) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    if (this.description \u003d\u003d temp.description \u0026\u0026 this.at \u003d\u003d temp.at \u0026\u0026 this.date_at \u003d\u003d temp.date_at) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      return true; "
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    return false;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yzia2000": 97
    }
  },
  {
    "path": "src/main/java/seedu/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yzia2000"
        },
        "content": " * Takes raw user input as string, makes sense out of the input using regex and then performs operations based on the input."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yzia2000"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * Takes raw input and splits it into task type (eg. todo) and task description (eg. finish work). In cases like task type: list, bye,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * the output array only contains task type."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * @param raw_input users single line string input"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * @return an array of Strings of length 2 or 1, either task type and task description or just task type based on raw input."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  public String[] split (String raw_input) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    String[] user_input \u003d raw_input.split(\" \", 2);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    return user_input;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * Takes raw user input and the current list of tasks and based on the user input performs operations like find, delete, done, list, add and bye."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * Outputs a task list back after performing the operation."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * @param raw_input users single line string input"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * @param list existing list of tasks to perform operations upon"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * @return list after an operation has been performed"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * @see TaskList"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  public TaskList parse (String raw_input, TaskList list) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    String[] user_input \u003d this.split(raw_input); "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    /* return output; */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    // If user inputs list"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    if (user_input[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      if (user_input.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "        ui.empty_description_error();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "        list.findTask(user_input[1]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    else if (user_input[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      if (user_input.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "        ui.empty_description_error();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "        int task_id \u003d Integer.parseInt(user_input[1]) - 1;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "        list.removeTask(task_id);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    // list tasks"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    else if (user_input[0].equals(\"list\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      list.displayList();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    // Do task."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    else if (user_input[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      // Extracting which task to do from the rest of the line after inputting only task type in line 20"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      if (user_input.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "        ui.empty_description_error(); "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "        int task_id \u003d Integer.parseInt(user_input[1]) - 1;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "        list.doTask(task_id);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      // add task to list"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      if (user_input[0].equals(\"todo\") || user_input[0].equals(\"deadline\") || user_input[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "        if (user_input.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "          ui.empty_description_error();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "          list.add(user_input[0], user_input[1]);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      else if (!user_input[0].equals(\"bye\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "        ui.correct_command_error();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    return list;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yzia2000": 87
    }
  },
  {
    "path": "src/main/java/seedu/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yzia2000"
        },
        "content": " * A class that stores current task list and loads it on request from disc."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yzia2000"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  private String filePath;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  public Storage(String filePath) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * Loads list of tasks from disc from a csv style file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * @return an array list loaded from the disc."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  public ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    ArrayList\u003cTask\u003e list \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      Scanner duke_txt \u003d new Scanner(new File(this.filePath));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      while (duke_txt.hasNextLine()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "        // splits line input based on |"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "        String task_string[] \u003d duke_txt.nextLine().split(\"\\\\|\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "        // instantiate classes"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "        if (task_string[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "          list.add(new ToDo(task_string[2]));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "        else if (task_string[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "          list.add(new Deadline(task_string[2], task_string[3]));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "          list.add(new Event(task_string[2], task_string[3]));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "        if (task_string[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "          list.get(list.size() - 1).markAsDone();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      duke_txt.close();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      System.out.println(\"\\t_____________________________________\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      System.out.println(\"\\tNo list saved in database. Please create a list now.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      System.out.println(\"\\t_____________________________________\\n\\n\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    return list;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * Saves the input task list to disc."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * @param input_list the list of tasks to save to disc."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * @throws IOException if file could not be saved"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  public void save(ArrayList\u003cTask\u003e input_list) throws IOException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    // if list has nothing just quit"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    if (input_list.isEmpty()) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      (new File(this.filePath)).delete();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    //if data folder doesnt exist create it"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    File directory \u003d new File(this.filePath.split(\"/\")[0]);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    if (! directory.exists()){"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      directory.mkdir();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    // save inputs"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    String saved_line \u003d input_list.get(0).toSaveFormat();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    for (int i \u003d 1; i \u003c input_list.size(); i++) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      saved_line \u003d saved_line + \"\\n\" + input_list.get(i).toSaveFormat();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    BufferedWriter writer \u003d new BufferedWriter(new FileWriter(new File(this.filePath)));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    writer.write(saved_line);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    writer.close();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yzia2000": 87
    }
  },
  {
    "path": "src/main/java/seedu/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yzia2000"
        },
        "content": " * An abstract class that acts as a template for ToDo, Deadline and Event."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yzia2000"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "     * Returns the status of the task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "     * @return a symbol specifying whether a task has been completed or not."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "     * Marks a class as complete."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      this.isDone \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "     * Returns the description of the task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "     * @return string description."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      return this.description;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "     * Returns a string that displays all information about the task in a user readable format."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "     * @return the status and description of the task."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "     * Returns a disc savable csv format of the task info."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "     * @return a pipe separated string of the status and description."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    public String toSaveFormat() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      int isDone \u003d this.isDone ? 1 : 0;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      return isDone + \"|\" + this.description;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "     * Checks whether an input task is equal to current object."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "     * @param temp input task"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "     * @return true or false to comparison."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    public boolean equals(Task temp) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      if (this.description \u003d\u003d temp.description) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "        return true; "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      return false;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yzia2000": 71
    }
  },
  {
    "path": "src/main/java/seedu/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yzia2000"
        },
        "content": " * A list of tasks that has a java ArrayList at its core. Contains methods that add, remove and perform operations on elements"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yzia2000"
        },
        "content": " * of the list like mark as done."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yzia2000"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  protected ArrayList\u003cTask\u003e list \u003d new  ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  protected Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  public TaskList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    this.list \u003d list;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * Returns a task at a particular index."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * @param index index of the task you want"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * @return task at that index which is an object of a descendent of class Task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  public Task get(int index) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    return list.get(index);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * Returns size of task list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * @return length of tasklist."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  public int size() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    return list.size();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * Checks whether list is empty or not."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * @return true or false to whether the internal ArrayList is empty or not."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  public boolean isEmpty() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    return list.isEmpty();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * Adds a task to the ArrayList based on the task type and task description. Parses the description in case of event or deadline."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * Handles exceptions."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * @param task_type the type of task eg. todo, event, deadline"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * @param task_description_full the description that follows the task type."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  public void add (String task_type, String task_description_full) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    // if tasktype is not ToDo"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    if (task_type.equals(\"todo\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      list.add(new ToDo(task_description_full));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    } "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      // Extract task time and task description and initialize as deadline"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      if (task_type.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "          String task_description \u003d task_description_full.split(\"/\", 2)[0];"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "          String task_time \u003d task_description_full.split(\"/\", 2)[1].substring(3);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "          list.add(new Deadline(task_description, task_time));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "        // if /by is not included in deadline command"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "        catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "          ui.wrong_description_error();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "          return;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      // Extract task time and task description and initialize as event"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      else if (task_type.equals(\"event\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "          String task_description \u003d task_description_full.split(\"/\", 2)[0];"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "          String task_time \u003d task_description_full.split(\"/\", 2)[1].substring(3);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "          list.add(new Event(task_description, task_time));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "        // if /at is not included in event command"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "        catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "          ui.wrong_description_error();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "          return;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "        ui.correct_command_error();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    String output \u003d \"\\t  \" + list.get(list.size() - 1).toString();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    System.out.println(\"\\t_____________________________________\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    System.out.println(\"\\tGot it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    System.out.println(output);  "
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    // Printing number of items in list"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    System.out.println(\"\\tNow you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    System.out.println(\"\\t_____________________________________\\n\\n\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * Returns the core ArrayList inside the TaskList object."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   *"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * @return ArrayList of Tasks."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  public ArrayList\u003cTask\u003e return_list() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    return list;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  "
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * Marks a task at index as done."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   *"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * @param i index of the task to mark as done."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * @throws IndexOutOfBoundsException if an out of bounds index is requested."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  public void doTask(int i) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      list.get(i).markAsDone();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      System.out.println(\"\\t_____________________________________\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      System.out.println(\"\\tNice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      System.out.println(\"\\t  \" + (i + 1) + \".\" + list.get(i).toString());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      System.out.println(\"\\t_____________________________________\\n\\n\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    // Catch exception if wrong task id is done"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      ui.task_doesnt_exist_error();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * Removes task at index."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * "
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * @param i index at which task is removed."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * @throws IndexOutOfBoundsException if an out of bounds index is requested."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  public void removeTask(int i) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      Task last_task \u003d list.get(i);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      list.remove(i);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      System.out.println(\"\\t_____________________________________\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      System.out.println(\"\\tNoted. I have removed this task:\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      System.out.println(\"\\t  \" + (i + 1) + \".\" + last_task.toString());"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      System.out.println(\"\\tNow there are \" + list.size() + \" tasks left.\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      System.out.println(\"\\t_____________________________________\\n\\n\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      ui.task_doesnt_exist_error();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * Displays the list of tasks contained in the object."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   */"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  public void displayList() {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    // If user inputs list without appending list even once."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    if (list.isEmpty()) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      ui.show_empty_list_error();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    System.out.println(\"\\t_____________________________________\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    System.out.println(\"\\tHere are the tasks in your list:\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      System.out.println(\"\\t\" + (i + 1) + \".\" + list.get(i).toString());"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    } "
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    System.out.println(\"\\t_____________________________________\\n\\n\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * Finds task which contains a character sequence supplied."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   *"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * @param task_description a character sequence from which tasks will be found."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   */"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  public void findTask(String task_description) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    ArrayList\u003cInteger\u003e matching_tasks \u003d new ArrayList\u003cInteger\u003e();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      if (list.get(i).getDescription().contains(task_description)) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "        matching_tasks.add(Integer.valueOf(i));"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    if (matching_tasks.isEmpty()) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      ui.task_doesnt_exist_error();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    System.out.println(\"\\t_____________________________________\");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    System.out.println(\"\\tFound \" + matching_tasks.size() + \". Here you go.\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    for (Integer id : matching_tasks) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      System.out.println(\"\\t  \" + (id + 1) + \".\" + list.get(id).toString());"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    System.out.println(\"\\t_____________________________________\\n\\n\");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  "
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * Checks whether two instaces of TaskList are equal."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   *"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * @param temp TaskList instance to compare against."
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * @return true or false to the comparison."
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   */"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  public boolean equals(TaskList temp) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    if (this.size() !\u003d temp.size()) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      System.out.println(\"Length not equal\");"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      return false;  "
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    for (int i \u003d 0; i \u003c this.size(); i++) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      if (!this.get(i).equals(temp.get(i))) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "        System.out.println(this.get(i).description + temp.get(i).description + \"?\");"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    return true;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yzia2000": 212
    }
  },
  {
    "path": "src/main/java/seedu/duke/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yzia2000"
        },
        "content": " * A class that inherits from the abstract class Task. This task type is a simple todo that can be marked as done when done."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yzia2000"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  public ToDo(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * Overrides the method to display the task type along with inherited task string."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * @return details of the task in a user readable format."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * Overrides the method to display the task type along with inherited task string save format."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * @return inherited string plus task format."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  public String toSaveFormat() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    return \"T|\" + super.toSaveFormat(); "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yzia2000": 29
    }
  },
  {
    "path": "src/main/java/seedu/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yzia2000"
        },
        "content": " * A class dedicated to performing interactions with the user. Takes inputs and contains methods that output error messages."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yzia2000"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  protected Scanner input;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  public Ui (Scanner input) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    this.input \u003d input;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  public Ui () {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * Takes a string single line input."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * @return user string input"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  public String take_input() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    String user_input \u003d input.nextLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    return user_input;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * Prints an output message if list history was not saved."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  public void show_save_error() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    System.out.println(\"\\t_____________________________________\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    System.out.println(\"\\tCouldn\u0027t save file.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    System.out.println(\"\\t_____________________________________\\n\\n\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * Prints a bye message if user enters bye."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  public void show_bye_message() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    System.out.println(\"\\t_____________________________________\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    System.out.println(\"\\tBye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    System.out.println(\"\\t_____________________________________\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * Prints an error message if user does not enter a valid command."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  public void correct_command_error() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    System.out.println(\"\\t_____________________________________\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    System.out.println(\"\\tPlease enter a valid command: todo, deadline, event, list, bye, find, delete.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    System.out.println(\"\\t_____________________________________\\n\\n\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * Prints an error message if the format of event or deadline commands is not correct."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  public void wrong_description_error() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    System.out.println(\"\\t_____________________________________\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    System.out.println(\"\\tDescription needs a \u0027/\u0027 before by/at\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    System.out.println(\"\\t_____________________________________\\n\\n\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * Prints an error message if user performs an operation on a nonexistant task."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  public void task_doesnt_exist_error() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    System.out.println(\"\\t_____________________________________\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    System.out.println(\"\\tTask doesn\u0027t exist. Please choose another.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    System.out.println(\"\\t_____________________________________\\n\\n\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * Prints error message if an empty list is asked to be displayed."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  public void show_empty_list_error() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    System.out.println(\"\\t_____________________________________\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    System.out.println(\"\\tList is empty. Please type another command apart from list.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    System.out.println(\"\\t_____________________________________\\n\\n\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * Prints an error message if a commad like find, delete, todo, deadline, event or others is entered without a following description."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  public void empty_description_error() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    System.out.println(\"\\t_____________________________________\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    System.out.println(\"\\tPlease enter a description after the command.\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    System.out.println(\"\\t_____________________________________\\n\\n\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * Prints an error message when the format of the date/time entered for event or deadline is not correct."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  public void date_time_error() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    System.out.println(\"\\t_____________________________________\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    System.out.println(\"\\tFormat of time is incorrect either in command or save file. Saving event/deadline as mentioned without date time parsing.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    System.out.println(\"\\t_____________________________________\\n\\n\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   * A hello message when duke is ran."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "   */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  public void show_opening_string () {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yzia2000": 110
    }
  },
  {
    "path": "src/test/java/seedu/duke/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  public void dummyTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    Deadline task1 \u003d new Deadline(\"meet Kartike.\", \"5/5/2019 1800\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    assertEquals(task1.description, \"meet Kartike.\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    assertEquals(task1.date_by, \"5th of May 2019, 6:00PM\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    assertEquals(task1.by, \"5/5/2019 1800\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    Deadline task2 \u003d new Deadline(\"meet Kartike.\", \"next week\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    assertEquals(task2.description, \"meet Kartike.\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    assertEquals(task2.date_by, \"next week\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    assertEquals(task2.by, \"next week\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yzia2000": 21
    }
  },
  {
    "path": "src/test/java/seedu/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  public void dummyTest() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yzia2000": 11
    }
  },
  {
    "path": "src/test/java/seedu/duke/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yzia2000"
        },
        "content": " "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  public void dummyTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    Event task1 \u003d new Event(\"meet Kartike.\", \"5/5/2019 1800\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    assertEquals(task1.description, \"meet Kartike.\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    assertEquals(task1.date_at, \"5th of May 2019, 6:00PM\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    assertEquals(task1.at, \"5/5/2019 1800\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    Event task2 \u003d new Event(\"meet Kartike.\", \"next week\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    assertEquals(task2.description, \"meet Kartike.\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    assertEquals(task2.date_at, \"next week\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    assertEquals(task2.at, \"next week\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yzia2000": 23
    }
  },
  {
    "path": "src/test/java/seedu/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  public void dummyTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yzia2000": 12
    }
  },
  {
    "path": "src/test/java/seedu/duke/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertArrayEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  public void dummyTest() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    File history \u003d new File(\"data/test.txt\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    history.delete();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    Storage storage \u003d new Storage(\"data/test.txt\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    TaskList list \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    assertArrayEquals(list.return_list().toArray(), (new ArrayList\u003cTask\u003e()).toArray());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    list.add(\"todo\", \"Work on CS2113T feature list\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    list.add(\"deadline\", \"Finish Feature list /by tommorrow\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    list.add(\"event\", \"Student life fair /at 1/1/2019 2400\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      storage.save(list.return_list());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    catch (IOException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "      fail(\"Couldn\u0027t be saved.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    history.delete();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yzia2000": 36
    }
  },
  {
    "path": "src/test/java/seedu/duke/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  public void dummyTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yzia2000": 12
    }
  },
  {
    "path": "src/test/java/seedu/duke/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  public void dummyTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yzia2000": 12
    }
  },
  {
    "path": "src/test/java/seedu/duke/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "public class ToDoTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  public void dummyTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    ToDo task \u003d new ToDo(\"Finish work\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "    assertEquals(task.description, \"Finish work\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "yzia2000": 14
    }
  },
  {
    "path": "src/test/java/seedu/duke/UiTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "public class UiTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yzia2000"
        },
        "content": " "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  public void dummyTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yzia2000"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "  }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yzia2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yzia2000": 12
    }
  }
]

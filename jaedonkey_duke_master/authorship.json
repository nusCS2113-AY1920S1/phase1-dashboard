[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    public Deadline(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        super.symbol\u003d\"D\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jaedonkey": 9
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "import javafx.event.EventHandler;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "import javafx.scene.input.MouseEvent;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "import java.io.FileInputStream;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "import static java.lang.System.exit;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    private static final String saveFilePath\u003d\"./duke.txt\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    //JavaFX testing"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    private Image trump;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "            trump \u003d new Image(new FileInputStream(\"/root/IdeaProjects/duke/src/main/trump.jpeg\"));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    private Image kim;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "            kim \u003d new Image(new FileInputStream(\"/root/IdeaProjects/duke/src/main/Kim_Jong-un_IKS_2018.jpg\"));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    //objects supporting Duke"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    Ui ui;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    Storage storage;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    TaskList tasklist;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    Parser parser;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * @ClassConstructor"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * No Params, No Return Values"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * Initializes the supporting objects"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * Starts off the parser CLI parsing loop"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    public Duke(){"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        //Instantiate objects"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        tasklist \u003d new TaskList(this);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        ui \u003d new Ui(tasklist.arrlist);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        storage \u003d new Storage(saveFilePath);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        storage.loadDuke(tasklist.arrlist); //load from the file into the arraylist, if any thing to load at all"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        //start parsing commands"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        parser \u003d new Parser(this);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * @Function"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * @param stage"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * @throws Exception"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * This function is for setting up the JavaFX(GUI) stage, overridden from javafx.application.Application"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * @UsedIn: Launcher.java (indirect call)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    public void start(Stage stage) throws Exception {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        //make GUI components"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane,userInput,sendButton);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        Scene scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        System.out.println(\"Displaying GUI!\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        //Setting dimensions of components/stage"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        stage.setResizable(true);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        stage.setMinHeight(400);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        stage.setMinWidth(400);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        mainLayout.setPrefSize(400,400);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        scrollPane.setPrefSize(385,385);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        userInput.setPrefWidth(325);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        sendButton.setPrefWidth(55);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        //set the constraints of the 3 UI elements to the parent (AnchorPane)"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane,userInput.getHeight()+30.0);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        AnchorPane.setTopAnchor(userInput,1.0);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        AnchorPane.setTopAnchor(sendButton,1.0);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        AnchorPane.setRightAnchor(userInput,20.0);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        //on clicking the send button"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        sendButton.setOnMouseClicked(new EventHandler\u003cMouseEvent\u003e() {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "            public void handle(MouseEvent mouseEvent) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                handleUserInput();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "            }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        });"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        //on user pressing enter while focus is on textfield"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        userInput.setOnAction(actionEvent -\u003e handleUserInput());"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        dialogContainer.heightProperty().addListener(observable -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * @Function"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * This function creates 2 dialog boxes, 1 echoing user input and the other containing a processed reply"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * from Duke. Clears userinput box after processing"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * @UsedIn: sendButton.setOnMouseClicked"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    private void handleUserInput(){"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        String cmd \u003d userInput.getText();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        //send to parser to parse"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        parser.processCommands(cmd);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        //show the command in the dialog container. todo: Just temporary. Remove as needed."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        dialogContainer.getChildren().addAll(getDialogLabel(cmd));"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * @Function"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * @param userSaid"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * This function is Duke\u0027s response to what the user typed."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    private String getResponse(String userSaid){"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        return \"Kim agrees when you say \"+ userSaid;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * @Function"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * @param text"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * This function returns a label (node) with the text as text"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * @UsedIn: Application.start()"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    private Label getDialogLabel(String text){"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        Label label \u003d new Label(text);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        label.setWrapText(true);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        return label;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * @Function"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * No Params, No Return Value"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * This function handles the exiting/shutdown of the program Duke"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * @UsedIn: parser.processCommands"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * TODO: Save data on exit"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    public void exitDuke(){"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        exit(0);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * @Function"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * This function returns the number cardinal when passed an integer"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * @param n, No Return Value"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * @UsedIn:"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    private static String getDayOfMonthSuffix(final int n) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        if (n \u003e\u003d 11 \u0026\u0026 n \u003c\u003d 13) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "            return \"th\";"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        switch (n % 10) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "            case 1:  return \"st\";"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "            case 2:  return \"nd\";"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "            case 3:  return \"rd\";"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "            default: return \"th\";"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * @Function"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * @param when"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * @return dateString"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * @UsedIn: ui.getDescription"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * This function parses the date in the format dd/MM/yyyy HHmm and returns a date in the format"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * dd MMMM yyyy hh:mma"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    protected static String dateParse(String when){"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        //parse date"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        SimpleDateFormat format \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        Date date \u003d null;"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "            date \u003d format.parse(when);"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "            return \"false\";"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        format \u003d new SimpleDateFormat(\"dd MMMM yyyy hh:mma\");"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        when \u003d format.format(date);"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        return when;"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    //Test Client"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        //start the program flow"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        new Duke();"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * @InnerClass"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * Extends Exception"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     *"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * This static inner class is the custom exception class extending Exception"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * that overwrites toString() for returning custom exception messages"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     *"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * It is thrown when command is unknown or when there are invalid arguments"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    static class DukeException extends Exception{"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        public DukeException(String description){"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "            this.description\u003ddescription;"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "            return description;"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "}"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "/**"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": " * @Class"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": " * This class is a dialog box used for implementing custom control"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": " */"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "class DialogBox extends HBox {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    public DialogBox(Label l, ImageView iv){"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        text \u003d l;"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        displayPicture \u003d iv;"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        displayPicture.setFitWidth(100);"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        displayPicture.setFitHeight(100);"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        this.getChildren().addAll(text,displayPicture);"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    private void flip(){"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    public static DialogBox getUserDialog(Label l, ImageView iv){"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        return new DialogBox(l,iv);"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    public static DialogBox getDukeDialog(Label l, ImageView iv){"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        var db \u003d new DialogBox(l,iv);"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "jaedonkey": 342,
      "-": 3
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    public Event(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        super.symbol\u003d\"E\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jaedonkey": 10
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": " * @Class"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": " * This class merely holds the launch code to start the GUI (calls start()) and passes CLI args."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    public static void main(String[] args){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        Application.launch(Duke.class,args);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jaedonkey": 15
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    Duke d;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    Scanner sc;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    public Parser(Duke d){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        this.d\u003dd;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * @Function"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * @param cmd"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * No return value"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * This function handles the main CLI parsing. Just pass in the cmd string and it will work its magic."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * It uses regex to understand the command entered."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * @UsedIn: Duke.handleUserInput()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * todo:Replace all console output with GUI output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    public void processCommands(String cmd){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "            if(cmd.equals(\"bye\")){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                d.exitDuke();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "            else if(cmd.equals(\"list\")){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                d.ui.listTasks();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "            else if(cmd.matches(\"done ([0-9]+)\")){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                d.tasklist.taskDone(cmd);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "            else if(cmd.matches(\"delete ([0-9]+)\")){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                d.tasklist.deleteTask(cmd);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "            else if (cmd.matches(\"(todo|event|deadline) .+\")){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                d.tasklist.addTask(cmd);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "            else if (cmd.matches(\"find (.*)\")){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                d.tasklist.findTask(cmd);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "            else if (cmd.matches(\"(todo|event|deadline)\")){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                    throw new Duke.DukeException(\"☹ OOPS!!! The description of a \"+cmd+\" cannot be empty.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                } catch (Duke.DukeException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                    System.out.println(e);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "            else{"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                    throw new Duke.DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                } catch (Duke.DukeException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                    System.out.println(e);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jaedonkey": 62
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    private String saveFilePath;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    public Storage(String filePath){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        saveFilePath\u003dfilePath;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * @Function"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * This function saves the arraylist of tasks to a file called duke.txt in the current directory."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * It writes all the properties of Task t (which are strings) to the file using PrintWriter"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * @UsedIn: tasklist.addTask, tasklist.taskDone"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    protected void saveDuke(ArrayList\u003cTask\u003e tasks){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        File f \u003d new File(saveFilePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "            PrintWriter pw \u003d new PrintWriter(f);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "            for(Task t:tasks){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                pw.printf(\"%s %s %s\\n\",t.symbol,t.isDone,t.description);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "            pw.close();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * @Function"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * This function loads from the textfile the list of tasks into the arraylist on startup."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * It creates new Task objects based on the symbol read i.e if E, then Task t \u003d new Event(description);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * and then we add the task to the arraylist"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * @UsedIn: Duke Constructor"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    protected void loadDuke(ArrayList\u003cTask\u003e tasks){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        File f \u003d new File(saveFilePath);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "            FileReader fr \u003d new FileReader(f);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "            //read into a char array"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "            StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "            int c;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "            while((c\u003dfr.read())!\u003d-1){"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                sb.append((char)c);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "            //Set up a scanner to read and parse the strings"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "            String cmds\u003dsb.toString();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "            Scanner strScanner \u003d new Scanner(cmds);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "            while(strScanner.hasNext()){"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                switch(strScanner.next()){"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                    case \"E\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                        String done \u003d strScanner.next().trim();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                        Task t \u003d new Event(strScanner.nextLine().strip());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                        if(done.equals(\"true\")){"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                            t.isDone\u003dtrue;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                        tasks.add(t);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                        String done1 \u003d strScanner.next().trim();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                        Task t1 \u003d new Deadline(strScanner.nextLine().strip());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                        if(done1.equals(\"true\")){"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                            t1.isDone\u003dtrue;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                        tasks.add(t1);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                        String done2 \u003d strScanner.next().trim();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                        Task t2 \u003d new Todo(strScanner.nextLine().strip());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                        if(done2.equals(\"true\")){"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                            t2.isDone\u003dtrue;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                        tasks.add(t2);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jaedonkey": 100
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    protected String symbol;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    public Task(String description){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        this.description\u003ddescription;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        this.isDone\u003dfalse;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    public String getStatusIcon(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        return (isDone?\"\\u2713\":\"\\u2718\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    public void markAsDone(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        isDone\u003dtrue;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    String getSymbol() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        return symbol;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jaedonkey": 24
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    protected ArrayList\u003cTask\u003e arrlist;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    protected Duke d;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    public TaskList(Duke d){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        this.d\u003dd;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        arrlist\u003dnew ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * @Function"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * @param cmd, No Return Value"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * @calls dateParse(String when)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * This function handles the adding of the tasks (Events, Deadlines, Todos)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * It tests for the event type, then parses it according to the correct syntax"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * @UsedIn: parser.processCommands"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    public void addTask(String cmd){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        Scanner sc1\u003d new Scanner(cmd);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        String s\u003dsc1.next(); //get the command string"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        String cs\u003dsc1.nextLine(); //get the description string"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        String token;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        switch(s){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                arrlist.add(new Todo(cs.trim()));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                System.out.println(\"[T][\\u2718] \"+cs);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                token\u003d\"/at\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                description\u003d getDescription(cs,token);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                arrlist.add(new Event(description));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                System.out.println(\"[E][\\u2718] \"+description);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                token\u003d\"/by\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                description\u003dgetDescription(cs,token);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                arrlist.add(new Deadline(description));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                System.out.println(\"[D][\\u2718] \"+description);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        //at this point, an update is made to the task list, so save to file"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        d.storage.saveDuke(arrlist);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        d.ui.showSize();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * @Function"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * @param cmd, No Return Value"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * This function handles the deletion of tasks"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * @UsedIn: parser.processCommands"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    public void deleteTask(String cmd){"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        Scanner sc1\u003d new Scanner(cmd);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        sc1.next(); //skip over the \u0027delete\u0027"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        Task t \u003d arrlist.remove(sc1.nextInt()-1);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        t.markAsDone();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        d.ui.showTask(t);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        d.storage.saveDuke(arrlist);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        d.ui.showSize();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * @Function"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * @param cmd, No Return Value"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * This function handles the completion of tasks by marking them as done"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * @UsedIn: parser.processCommands"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    public void taskDone(String cmd){"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        Scanner sc1\u003d new Scanner(cmd);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        sc1.next(); //skip over the \u0027done\u0027"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        Task t \u003d arrlist.get(sc1.nextInt()-1);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        t.markAsDone();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        d.ui.showTask(t);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        d.storage.saveDuke(arrlist);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * @Function"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * @param cmd, No Return Value"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * This function handles the deletion of tasks"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * @UsedIn: parser.processCommands"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    public void findTask(String cmd){"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        Scanner sc1\u003d new Scanner(cmd);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        sc1.next(); //skip over the \u0027find\u0027"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        String pattern \u003d sc1.next();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        int count\u003d1;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        for(Task t:arrlist){"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "            if(t.description.contains(pattern)){"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                System.out.print(count+++\".\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                d.ui.showTask(t);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * @Function"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * @param cs"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * @param token"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * @return description"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * @UsedIn: : addTask"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * This function builds a description from the description string according to the token (/at or /by etc)"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    public String getDescription(String cs, String token){"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        int splitPoint\u003dcs.indexOf(token);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        String when\u003dcs.substring(splitPoint+token.length()+1);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        //call the date parser to parse and return a date string"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        String check\u003dDuke.dateParse(when);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        if(!check.equals(\"false\")){"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "            when\u003dcheck;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        token\u003dtoken.replace(\"/\",\"\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        String what \u003d cs.substring(0,splitPoint).trim();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        return what+\" (\"+token+\": \"+when+\")\";"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jaedonkey": 149
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        super.symbol\u003d\"T\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jaedonkey": 10
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    private ArrayList\u003cTask\u003e arrlist;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    public Ui(ArrayList\u003cTask\u003e arrayList){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        arrlist\u003darrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * @Function"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * Simply prints the welcome message for Duke"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    public void showWelcome(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        System.out.println(\"Hello there!\\n\" + logo);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "                \"     What can I do for you?\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * @Function"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * No Params, No Return Value"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * This function simply shows the number of tasks in the arraylist"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * @UsedIn: tasklist.addTask"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    public void showSize(){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        System.out.println(\"Now you have \"+arrlist.size()+\" tasks in the list\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * @Function"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * No Params, No Return Value"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * This function simply displays the task passed into it"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * @UsedIn: tasklist.taskDone,tasklist.deleteTask"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    public void showTask(Task t){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        System.out.println(\"[\" + t.getSymbol() + \"]\" + \"[\" + t.getStatusIcon() + \"] \" + t.description);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * @Function"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * No Params, No Return Value"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * This function handles the list command which lists the tasks currently in Duke\u0027s tracking"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * It will display the task symbol (T,E,D), the status (done or not done) and the description string"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     * @UsedIn: parser.processCommands"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    public void listTasks(){"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        int count\u003d1;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        for (Task t : arrlist) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "            System.out.print(count+++\".\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "            showTask(t);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jaedonkey": 64
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jaedonkey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jaedonkey": 10
    }
  }
]

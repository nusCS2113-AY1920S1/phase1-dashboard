[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "//@@author LL-Pengfei"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "/* Author: Zhao Pengfei (Email: zhao.pengfei@comp.nus.edu.sg)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * Copyright © Zhao Pengfei (Email: zhao.pengfei@comp.nus.edu.sg)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * AY19/20 CS2113T Module Project, Individual Component"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * School of Computing (SoC), National University of Singapore (NUS)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * please do not copy the codes/any of the code segments for any purposes."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * Plagiarism is strictly prohibited under NUS rules and regulations."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "//Deadline.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "//support Deadline of Task, subclass of Task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * The Class Deadline, sub-class of Class Task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * It provides and enables the functionalities related to the Deadline type of Task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    protected String by_day;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    protected String by_month;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    protected String by_year;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    protected String by_time;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * The constructor for the Class Deadline, initialize the parameters of Deadline for description and time of the deadline"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * @param description The deadline name"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * @param by_day The day of the month of the year of the deadline"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * @param by_month The month of the year of the deadline"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * @param by_year The year of the deadline"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * @param by_time The specific timing of the deadline"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    public Deadline(String description, String by_day, String by_month, String by_year, String by_time) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        this.by_day \u003d by_day;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        this.by_month \u003d by_month;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        this.by_year \u003d by_year;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        this.by_time \u003d by_time;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * Cast all the information pertaining to a Deadline instance to one singular string"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * @return The string containing all the information associated with an Deadline instance."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by: \" + by_day + \" of \" + by_month + \" \" + by_year + \", \" +  by_time + \")\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LL-Pengfei": 49
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "//@@author LL-Pengfei"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "/* Author: Zhao Pengfei (Email: zhao.pengfei@comp.nus.edu.sg)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * Copyright © Zhao Pengfei (Email: zhao.pengfei@comp.nus.edu.sg)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * AY19/20 CS2113T Module Project, Individual Component"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * School of Computing (SoC), National University of Singapore (NUS)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * please do not copy the codes/any of the code segments for any purposes."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * Plagiarism is strictly prohibited under NUS rules and regulations."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "// week 5 tutorial note: JavaDoc needs to be complete sentence, with full stop. Also need to try to be concise."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "// junit automate testing - need more, much more"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * Main Class of the Project Duke, simulating a personal assistant supporting/enabling"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * various sorts of functionalities listed below:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * 1. initialize/greet/bye (Level-1) - initialize when programme starts"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * command: / - auto greet when programme starts"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * command: bye - will exit the programme"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * 2. list (Level-2)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * command: list - will return the list of the tasks stored"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * 3. markAsDone (Level-3) - used Task class to implement"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " *                         - allow marking as X or V"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * command: done int - will return \"I\u0027ve marked this task as done: ..."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * 4. todo event deadline - support tracking different types of tasks (Level-4)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " *                        - implemented using inheritance to support"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " *                        - multiple task types"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * command: todo sth - return added status + total task size (current)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * command: deadline sth /by time - return added status + total task size (current)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * command: event sth /at time - return added status + total task size (current)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * ** command has to be specific and sticks to the format specified in pt 8 **"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * 5. Handle Errors (Level-5) - used Exceptions to handle errors"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * - define a class DukeException to represent exceptions specific to Duke"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * - currently support:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * 5.1 commands: done delete find todo event deadline //not followed by task number/task"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " *     - currently can only handle empty commands, i.e. commands not followed by things that should follow"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " *     - wrong ones still not dealt with (e.g. for deadline \u0026 event, if time format is wrong, not yet catchable)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * 5.2 non-sensical command/input e.g. blah -\u003e only limited to one word command, no space"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * 5.3 File IO Exception (persistent memory storage(pt 7)) - will catch if initial document is empty"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * 6. Delete (Level-6)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * command: delete int - return deleted status + total task size (current)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * 7. Save (Level-7)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * - save the tasks in the hard disk automatically whenever the task list changes"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * - i.e. save after every command (implemented using while(true) loop and save at"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * - the end of completion of each command)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * - also, load the data from the hard disk when Duke starts up"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * - file name \u0026 location hard-coded"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * - implemented using Serializable"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * ALSO, when doing Level-6, used Java Collections classes for storing data"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * - implemented using ArrayList\u003cTask\u003e to store the tasks"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * 8. Dates and Time (Level-8)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * - Deadline and Event time understood as time, not String"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * - support dates and time interpretations (at this moment, time only support round"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * - clock time, non-round clock time will round down to the round clock"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * - (e.g. 18:50 -\u003e 18:00))"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * command: deadline(event) sth /by(at) D/M/YR TTTT (format)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * sth /by D ||||| sth /at D -\u003e space must have; must be this exact format"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * D/M/YR TTTT TTTT \u003d\u003d 24 hour clock, no :"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * this will hence be interpreted into dates and time e.g. 2nd of December 2019, 6pm"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * 9. Find (Level-9)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * provide the capability to search for tasks that were recorded. Give users a"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * way to find a task by searching for a keyword"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * command: find sth (sth \u003d any keyword) - return matching tasks list (number here"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * is not the number in the task list, but directly 1 2 3...)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * 9.5.1 A-TextUiTesting implemented, using Text UI Testing, test using the IO redirection technique"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * it now supports using the IO redirection technique to semi-automate testing of Duke"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * [automated testing of the Duke UI]"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * 9.5.2 A-MoreOOP implemented"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * Code refactored to extract out closely related code as classes"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * extracted out Ui Storage Parser Tasklist"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * 9.5.3 A-JUnit implemented"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * added Junit support to the project"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    //there is a bit confusion with naming here, due to cumulative work done..."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    //Task is the subclass for Deadline Event Todo"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    //Tasklist is the class extracting out codes dealing with the list when attempting to make the code more oop"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    //will probably refactorise in the future"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * The constructor of the Duke Class, creating instances of classes Ui() Storage() TaskList() Parser()"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * loading data from the persistant storage in hard disk (the tasks stored)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * @param filePath The filepath of the persistant storage in the hard disk storing the data of the tasklist"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * @throws Exception If Exception is caught in instantiation of the classes/loading from persistant storage"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    public Duke(String filePath) throws Exception {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        storage.load();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * Execute the programme when called from the Main Function, read in command line by line by line, call respective"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * functionalities to parse the input and determine the command, thereby execute accordingly."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * After each iteration of the loop, one command is processed and executed, will reload the data back to the persistant"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * storage after each run of the loop."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * The loop will terminate when input command \u003d\u003d bye"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     *"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * @throws Exception If Exception is caught in executing the programme"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    public void run() throws Exception {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        while(true) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            String cmd \u003d Storage.br.readLine();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            if (cmd.equals(\"bye\")) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                ui.bye();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            } else if (cmd.equals(\"list\")) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                ui.list();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                String[] token \u003d cmd.split(\" \", 2);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                String cmd_1 \u003d token[0];"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                //handling errors here //should prob catch the case when rubbish input got space in b/w also"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                //the variables errorMessage here better be put in the dukeException class, but time limited,"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                //refactorise later; also refer to the webpage when refactorising"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                if (token.length \u003c 2) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                    if (cmd_1.equals(\"done\") || cmd_1.equals(\"delete\") || cmd_1.equals(\"find\") || cmd_1.equals(\"todo\")"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                            || cmd_1.equals(\"event\") || cmd_1.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        //incomplete input"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                            String errorMessage \u003d \":( OOPS!!! The description of a \" + cmd_1 + \" cannot be empty.\";"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                            throw new DukeException(errorMessage);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        } catch (DukeException e) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                            continue;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        //non-sensical inputs, e.g. blah"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                            String errorMessage \u003d \":( OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                            throw new DukeException(errorMessage);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        } catch (DukeException e) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                            continue;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                String cmd_2 \u003d token[1];"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                if (cmd_1.equals(\"done\")) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                    tasks.done(cmd_2);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                } else if (cmd_1.equals(\"delete\")) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                    tasks.delete(cmd_2);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                } else if (cmd_1.equals(\"find\")){"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                    tasks.find(cmd_2);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                    ui.addTask_pre();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                    if (cmd_1.equals(\"todo\")) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        tasks.todo(cmd_2);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        parser.event_deadline_parser(cmd_1, cmd_2);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                    ui.addTask_post();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            storage.unload();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * The Main Function of the Duke Class, will call constructor to intialize and Duke().run() to execute the programmes"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * @param args Arbitrary arguments"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * @throws Exception If Exception is caught in executing the programmes"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    public static void main(String[] args) throws Exception {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        new Duke(\"C:\\\\Users\\\\LL\\\\2113t\\\\duke\\\\src\\\\main\\\\java\\\\duke.txt\").run();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LL-Pengfei": 187
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "//@@author LL-Pengfei"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "/* Author: Zhao Pengfei (Email: zhao.pengfei@comp.nus.edu.sg)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * Copyright © Zhao Pengfei (Email: zhao.pengfei@comp.nus.edu.sg)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * AY19/20 CS2113T Module Project, Individual Component"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * School of Computing (SoC), National University of Singapore (NUS)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * please do not copy the codes/any of the code segments for any purposes."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * Plagiarism is strictly prohibited under NUS rules and regulations."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "//DukeException.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "//support \u0026 enable error handling for Duke"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "//package DukeExceptionPackage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    public DukeException(String s) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LL-Pengfei": 18
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "//@@author LL-Pengfei"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "/* Author: Zhao Pengfei (Email: zhao.pengfei@comp.nus.edu.sg)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * Copyright © Zhao Pengfei (Email: zhao.pengfei@comp.nus.edu.sg)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * AY19/20 CS2113T Module Project, Individual Component"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * School of Computing (SoC), National University of Singapore (NUS)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * please do not copy the codes/any of the code segments for any purposes."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * Plagiarism is strictly prohibited under NUS rules and regulations."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "//Event.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "//support Event of Task, subclass of Task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "//tutorial01 note: better to use getters and setters to allow modification of at_day month year time inside class event"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "//a good practice to do that for oop \u0026 se"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * The Class Event, sub-class of Class Task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * It provides and enables the functionalities related to the Event type of Task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    protected String at_day;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    protected String at_month;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    protected String at_year;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    protected String at_time;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * The constructor for the Class Event, initialize the parameters of Event for description and time of the event"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * @param description The event name"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * @param at_day The day of the month of the year of the event"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * @param at_month The month of the year of the event"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * @param at_year The year of the event"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * @param at_time The specific timing of the event"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    public Event(String description, String at_day, String at_month, String at_year, String at_time) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        this.at_day \u003d at_day;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        this.at_month \u003d at_month;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        this.at_year \u003d at_year;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        this.at_time \u003d at_time;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * Cast all the information pertaining to a Event instance to one singular string"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * @return The string containing all the information associated with an Event instance."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at: \" + at_day + \" of \" + at_month + \" \" + at_year + \", \" +  at_time + \")\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LL-Pengfei": 52
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "//@@author LL-Pengfei"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "/* Author: Zhao Pengfei (Email: zhao.pengfei@comp.nus.edu.sg)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * Copyright © Zhao Pengfei (Email: zhao.pengfei@comp.nus.edu.sg)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * AY19/20 CS2113T Module Project, Individual Component"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * School of Computing (SoC), National University of Singapore (NUS)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * please do not copy the codes/any of the code segments for any purposes."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * Plagiarism is strictly prohibited under NUS rules and regulations."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "//Parser.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "//deal with making sense of the user command"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * The Class Parser, dealing with making sense of the user command"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * parsing the input command for event and deadline"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * @param cmd_1 The type of the task for the command, i.e. either event or deadline"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * @param cmd_2 The rest of the input command for the task, containing the task name (description)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     *              and the task time, unparsed."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    public void event_deadline_parser(String cmd_1, String cmd_2) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        //event \u0026 deadline"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        //need string parsing again"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        String[] cmd_2_token \u003d cmd_2.split(\"/\", 2);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        String cmd_2_1 \u003d cmd_2_token[0];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        String cmd_2_2 \u003d cmd_2_token[1];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        String[] cmd_2_2_token \u003d cmd_2_2.split(\" \", 2);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        String cmd_2_2_2 \u003d cmd_2_2_token[1];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        //cmd_2_2_2 is the dates and times"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        //level 8: have to parse it further"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        String[] cmd_2_2_2_token \u003d cmd_2_2_2.split(\" \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        String cmd_2_2_2_1 \u003d cmd_2_2_2_token[0]; //dates"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        String cmd_2_2_2_2 \u003d cmd_2_2_2_token[1]; //timing"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        String[] cmd_2_2_2_1_token \u003d cmd_2_2_2_1.split(\"/\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        String cmd_2_2_2_1_day \u003d cmd_2_2_2_1_token[0];"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        String cmd_2_2_2_1_month \u003d cmd_2_2_2_1_token[1];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        String cmd_2_2_2_1_year \u003d cmd_2_2_2_1_token[2];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        //parse it"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        String task_year_str \u003d cmd_2_2_2_1_year; //i know it is redundant logically,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        // but it looks nice (better readability)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        int task_month_int \u003d Integer.parseInt(cmd_2_2_2_1_month);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        String task_month_str \u003d  Storage.month_name[task_month_int-1];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        String task_day_str;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        if (cmd_2_2_2_1_day.equals(\"1\") || cmd_2_2_2_1_day.equals(\"21\") || cmd_2_2_2_1_day.equals(\"31\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            task_day_str \u003d cmd_2_2_2_1_day + \"st\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        } else if (cmd_2_2_2_1_day.equals(\"2\") || cmd_2_2_2_1_day.equals(\"22\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            task_day_str \u003d cmd_2_2_2_1_day + \"nd\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        } else if (cmd_2_2_2_1_day.equals(\"3\") || cmd_2_2_2_1_day.equals(\"23\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            task_day_str \u003d cmd_2_2_2_1_day + \"rd\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            task_day_str \u003d cmd_2_2_2_1_day + \"th\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        //okay... date parsing complete, now do the timing parsing"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        int task_time_int \u003d Integer.parseInt(cmd_2_2_2_2) / 100;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        //note: can only take round clock at this moment"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        //examples given thus far seems only concerned with round clock..."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        String task_time_str;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        if (task_time_int \u003d\u003d 12) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            task_time_str \u003d \"12noon\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        } else if (task_time_int \u003d\u003d 0) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            task_time_str \u003d \"12midnight\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        } else if (task_time_int \u003e 12) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            task_time_str \u003d Integer.toString(task_time_int-12) + \"pm\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            task_time_str \u003d Integer.toString(task_time_int) + \"am\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        //parsing done"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        if (cmd_1.equals(\"event\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            TaskList.t.add(Task.size, new Event(cmd_2_1, task_day_str, task_month_str, task_year_str, task_time_str));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        } else { //deadline"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            TaskList.t.add(Task.size, new Deadline(cmd_2_1, task_day_str, task_month_str, task_year_str, task_time_str));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LL-Pengfei": 82
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "//@@author LL-Pengfei"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "/* Author: Zhao Pengfei (Email: zhao.pengfei@comp.nus.edu.sg)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * Copyright © Zhao Pengfei (Email: zhao.pengfei@comp.nus.edu.sg)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * AY19/20 CS2113T Module Project, Individual Component"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * School of Computing (SoC), National University of Singapore (NUS)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * please do not copy the codes/any of the code segments for any purposes."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * Plagiarism is strictly prohibited under NUS rules and regulations."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "//Storage.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "//deal with loading tasks from the file and saving tasks in the file"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * The Class Storage, dealing with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    public static BufferedReader br \u003d new BufferedReader(new InputStreamReader(System.in));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    public static String[] month_name \u003d new String[15]; //redundancy"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    public String cmd;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    public String filePath;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * The constructor for the Class Storage, initializing the filePath for the persistant storage of tasklist information,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * and the names of the 12 months."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * @param filePath The filepath of the persistant storage in the hard disk storing the data of the tasklist"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * @throws Exception If Exception is caught in executing the programme"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    public Storage(String filePath) throws Exception {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        month_name[0] \u003d \"January\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        month_name[1] \u003d \"February\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        month_name[2] \u003d \"March\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        month_name[3] \u003d \"April\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        month_name[4] \u003d \"May\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        month_name[5] \u003d \"June\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        month_name[6] \u003d \"July\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        month_name[7] \u003d \"August\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        month_name[8] \u003d \"September\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        month_name[9] \u003d \"October\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        month_name[10] \u003d \"November\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        month_name[11] \u003d \"December\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    //load \u0026 reload: file io"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * loading the data of the tasklist from the persistant storage"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * @throws Exception If Exception is caught in executing the programme"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    public void load() throws Exception {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            FileInputStream file \u003d new FileInputStream(filePath);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            ObjectInputStream in \u003d new ObjectInputStream(file);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            Task.size \u003d 0;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            while(file.available() \u003e 0) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                TaskList.t.add(Task.size++, (Task)in.readObject());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            in.close();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            file.close();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            System.out.println(\"OOPS... IOException is caught.\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        } catch (ClassNotFoundException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            System.out.println(\"OOPS... ClassNotFoundException is caught.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * loading the data of the updated tasklist back to the persistant storage"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * @throws Exception  If Exception is caught in executing the programme"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    public void unload() throws Exception {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            FileOutputStream new_file \u003d new FileOutputStream(filePath);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            ObjectOutputStream out \u003d new ObjectOutputStream(new_file);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            for (int i \u003d 0; i \u003c Task.size; i++) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                out.writeObject(TaskList.t.get(i));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            out.close();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            new_file.close();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            System.out.println(\"OOPS... IOException is caught.\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LL-Pengfei": 90
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "//@@author LL-Pengfei"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "/* Author: Zhao Pengfei (Email: zhao.pengfei@comp.nus.edu.sg)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * Copyright © Zhao Pengfei (Email: zhao.pengfei@comp.nus.edu.sg)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * AY19/20 CS2113T Module Project, Individual Component"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * School of Computing (SoC), National University of Singapore (NUS)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * please do not copy the codes/any of the code segments for any purposes."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * Plagiarism is strictly prohibited under NUS rules and regulations."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "//Task.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "//baseclass of Deadline Event \u0026 Todo, branching out to form different subclasses"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "//of Task; implemented Serializable to support persistent storage (save tasks in"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "// hard disk, load data from hard disk when Duke starts up)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * The Class Task, base-class of Class Event, Deadline and Todo"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * It provides and enables the functionalities related to the Task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "public class Task implements Serializable {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    public static int size \u003d 0; // actually no need to specially"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                                // keep a static variable to trace size..."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                                // since arraylist has been implemented and can"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                                // access the size using size() method..."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * The constructor for the Class Task, initialize the parameters of Task for description and time of the Task,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * i.e. the name of the Task and the state whether the Task has been done (initialize to not done yet, i.e. isDone \u003d\u003d false)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * @param description The Task name"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        size++;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * Cast all the information pertaining to a Task instance to one singular string"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * @return The string containing all the information associated with an Task instance."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * Mark the Task as Done"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * Get the symbol related to the status of a Task instance as to whether is has been done or not."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * If the Task has been done, return a tick, otherwise return a cross."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * @return A tick if the Task instance has been marked as done, or a cross if the Task has not been done yet"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LL-Pengfei": 65
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "//@@author LL-Pengfei"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "/* Author: Zhao Pengfei (Email: zhao.pengfei@comp.nus.edu.sg)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * Copyright © Zhao Pengfei (Email: zhao.pengfei@comp.nus.edu.sg)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * AY19/20 CS2113T Module Project, Individual Component"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * School of Computing (SoC), National University of Singapore (NUS)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * please do not copy the codes/any of the code segments for any purposes."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * Plagiarism is strictly prohibited under NUS rules and regulations."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "//TaskList.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "//contain the tasklist, has operations to add/delete tasks in the list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * The Class TaskList, containing the tasklist, enabling operations to add \u0026 delete tasks in the tasklist"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    public static ArrayList\u003cTask\u003e t \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * Empty Constructor"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * Enabling adding in new tasks of todo type"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * @param cmd_2 the content of the todo task, with description of the todo task"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    public void todo(String cmd_2) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        TaskList.t.add(Task.size, new Todo(cmd_2));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * Enabling the operation of marking a task done"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * @param cmd_2 the # of the Task in the TaskList that the user wishes to mark as done"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    public void done(String cmd_2) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        //done things"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        System.out.print(\"  \");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        int num \u003d Integer.parseInt(cmd_2); // the second token is num"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        TaskList.t.get(num-1).markAsDone();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        System.out.println(TaskList.t.get(num-1).toString());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * Enabling the operation of deleting a task in the TaskList"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * @param cmd_2 the # of the Task in the TaskList that the user wishes to delete"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    public void delete(String cmd_2) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        //delete things"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        System.out.print(\"  \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        int num \u003d Integer.parseInt(cmd_2);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        System.out.println(TaskList.t.get(num-1).toString());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        TaskList.t.remove(num-1);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        Task.size--;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        System.out.println(\"Now you have \" + Task.size + \" tasks in the list.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * Enabling the operation of finding a task in the TaskList"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * @param cmd_2 the content that the users wishes to find matching the"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     *              content of one/some of the tasks in the TaskList"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    public void find(String cmd_2) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        //add functionality to allow users to find task by"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        //searching for a keyword"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        int temp_counter \u003d 0;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        for (int i \u003d 0; i \u003c Task.size; i++) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            String temp_str \u003d TaskList.t.get(i).toString();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            if (temp_str.contains(cmd_2)) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                System.out.println(++temp_counter + \".\" + temp_str);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LL-Pengfei": 84
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "//@@author LL-Pengfei"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "/* Author: Zhao Pengfei (Email: zhao.pengfei@comp.nus.edu.sg)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * Copyright © Zhao Pengfei (Email: zhao.pengfei@comp.nus.edu.sg)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * AY19/20 CS2113T Module Project, Individual Component"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * School of Computing (SoC), National University of Singapore (NUS)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * please do not copy the codes/any of the code segments for any purposes."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * Plagiarism is strictly prohibited under NUS rules and regulations."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "//Todo.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "//support Todo of Task, subclass of Task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * The Class Todo, sub-class of Class Task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * It provides and enables the functionalities related to the Todo type of Task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * The constructor for the Class Todo, initialize the parameters of Todo for description"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * @param description The Todo task name"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * Cast all the information pertaining to a Todo instance to one singular string"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * @return The string containing all the information associated with an Todo instance."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LL-Pengfei": 37
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "//@@author LL-Pengfei"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "/* Author: Zhao Pengfei (Email: zhao.pengfei@comp.nus.edu.sg)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * Copyright © Zhao Pengfei (Email: zhao.pengfei@comp.nus.edu.sg)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * AY19/20 CS2113T Module Project, Individual Component"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * School of Computing (SoC), National University of Singapore (NUS)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * please do not copy the codes/any of the code segments for any purposes."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * Plagiarism is strictly prohibited under NUS rules and regulations."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "//Ui.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "//deal with user interactions"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * The Class Ui, dealing with user interactions"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * The constructor of the Class Ui, initialize when the programme runs."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * Output the logo and hello message."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * Output bye message before the programme ends running."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    public void bye() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * Output the list when user input command list"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    public void list() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        for (int i \u003d 0; i \u003c Task.size; i++) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            System.out.println(i+1 + \".\" + TaskList.t.get(i).toString());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * Output prompt message when user input command attempts to input a new task"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    public void addTask_pre() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        System.out.print(\"  \");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * Output message after having added the new task that the user wishes to add,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * and the total # of Tasks currently in the TaskList."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    public void addTask_post() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        System.out.println(TaskList.t.get(Task.size-1).toString());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        System.out.println(\"Now you have \" + Task.size + \" tasks in the list.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LL-Pengfei": 65
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "//@@author LL-Pengfei"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "/* Author: Zhao Pengfei (Email: zhao.pengfei@comp.nus.edu.sg)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * Copyright © Zhao Pengfei (Email: zhao.pengfei@comp.nus.edu.sg)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * AY19/20 CS2113T Module Project, Individual Component"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * School of Computing (SoC), National University of Singapore (NUS)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * please do not copy the codes/any of the code segments for any purposes."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * Plagiarism is strictly prohibited under NUS rules and regulations."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "//DukeTest.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "//added Junit support to the project"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * The class DukeTest, providing test codes for Duke"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * dummyTest for trivial testing of whether JUnit was set up correctly"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        assertEquals(2,2);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LL-Pengfei": 28
    }
  }
]

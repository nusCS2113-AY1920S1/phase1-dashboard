[
  {
    "path": "src/main/java/Deadline.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "//@@author LL-Pengfei"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "/* Author: Zhao Pengfei (Email: zhao.pengfei@comp.nus.edu.sg)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * Copyright © Zhao Pengfei (Email: zhao.pengfei@comp.nus.edu.sg)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * AY19/20 CS2113T Module Project, Individual Component"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * School of Computing (SoC), National University of Singapore (NUS)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * please do not copy the codes/any of the code segments for any purposes."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * Plagiarism is strictly prohibited under NUS rules and regulations."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "//Deadline.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "//support Deadline of Task, subclass of Task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    protected String by_day;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    protected String by_month;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    protected String by_year;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    protected String by_time;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    public Deadline(String description, String by_day, String by_month, String by_year, String by_time) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        this.by_day \u003d by_day;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        this.by_month \u003d by_month;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        this.by_year \u003d by_year;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        this.by_time \u003d by_time;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by: \" + by_day + \" of \" + by_month + \" \" + by_year + \", \" +  by_time + \")\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LL-Pengfei": 32
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "//@@author LL-Pengfei"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "/* Author: Zhao Pengfei (Email: zhao.pengfei@comp.nus.edu.sg)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * Copyright © Zhao Pengfei (Email: zhao.pengfei@comp.nus.edu.sg)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * AY19/20 CS2113T Module Project, Individual Component"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * School of Computing (SoC), National University of Singapore (NUS)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * please do not copy the codes/any of the code segments for any purposes."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * Plagiarism is strictly prohibited under NUS rules and regulations."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "/* main function, support/enable the following functionalities:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "1. initialize/greet/bye (Level-1) - initialize when programme starts"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "command: / - auto greet when programme starts"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "command: bye - will exit the programme"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "2. list (Level-2)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "command: list - will return the list of the tasks stored"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "3. markAsDone (Level-3) - used Task class to implement"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        - allow marking as X or V"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "command: done int - will return \"I\u0027ve marked this task as done: ..."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "4. todo event deadline - support tracking different types of tasks (Level-4)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                       - implemented using inheritance to support"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                       - multiple task types"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "command: todo sth - return added status + total task size (current)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "command: deadline sth /by time - return added status + total task size (current)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "command: event sth /at time - return added status + total task size (current)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "** command has to be specific and sticks to the format specified in pt 8 **"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "5. Handle Errors (Level-5) - used Exceptions to handle errors"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "- define a class DukeException to represent exceptions specific to Duke"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "- currently support:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "5.1 commands: done delete find todo event deadline //not followed by task number/task"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    - currently can only handle empty commands, i.e. commands not followed by things that should follow"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    - wrong ones still not dealt with (e.g. for deadline \u0026 event, if time format is wrong, not yet catchable)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "5.2 non-sensical command/input e.g. blah -\u003e only limited to one word command, no space"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "5.3 File IO Exception (persistent memory storage(pt 7)) - will catch if initial document is empty"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "6. Delete (Level-6)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "command: delete int - return deleted status + total task size (current)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "7. Save (Level-7)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "- save the tasks in the hard disk automatically whenever the task list changes"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "- i.e. save after every command (implemented using while(true) loop and save at"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "- the end of completion of each command)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "- also, load the data from the hard disk when Duke starts up"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "- file name \u0026 location hard-coded"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "- implemented using Serializable"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "ALSO, when doing Level-6, used Java Collections classes for storing data"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "- implemented using ArrayList\u003cTask\u003e to store the tasks"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "8. Dates and Time (Level-8)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "- Deadline and Event time understood as time, not String"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "- support dates and time interpretations (at this moment, time only support round"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "- clock time, non-round clock time will round down to the round clock"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "- (e.g. 18:50 -\u003e 18:00))"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "command: deadline(event) sth /by(at) D/M/YR TTTT (format)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "sth /by D ||||| sth /at D -\u003e space must have; must be this exact format"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "D/M/YR TTTT TTTT \u003d\u003d 24 hour clock, no :"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "this will hence be interpreted into dates and time e.g. 2nd of December 2019, 6pm"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "9. Find (Level-9)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "provide the capability to search for tasks that were recorded. Give users a"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "way to find a task by searching for a keyword"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "command: find sth (sth \u003d any keyword) - return matching tasks list (number here"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "is not the number in the task list, but directly 1 2 3...)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "9.5 A-TextUiTesting implemented, using Text UI Testing, test using the IO redirection technique"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "it now supports using the IO redirection technique to semi-automate testing of Duke"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "[automated testing of the Duke UI]"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    public static ArrayList\u003cTask\u003e t \u003d new ArrayList\u003c\u003e(); //make it global"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    public static void list() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        for (int i \u003d 0; i \u003c Task.size; i++) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            System.out.println(i+1 + \".\" + t.get(i).toString());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    public static void initialize() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    public static void main(String[] args) throws Exception {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        initialize();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        //Task[] t \u003d new Task[105]; //redundancy"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        String[] month_name \u003d new String[15]; //redundancy"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        month_name[0] \u003d \"January\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        month_name[1] \u003d \"February\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        month_name[2] \u003d \"March\";"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        month_name[3] \u003d \"April\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        month_name[4] \u003d \"May\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        month_name[5] \u003d \"June\";"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        month_name[6] \u003d \"July\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        month_name[7] \u003d \"August\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        month_name[8] \u003d \"September\";"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        month_name[9] \u003d \"October\";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        month_name[10] \u003d \"November\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        month_name[11] \u003d \"December\";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        BufferedReader br \u003d new BufferedReader(new InputStreamReader(System.in));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        //file io"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            FileInputStream file \u003d new FileInputStream(\"C:\\\\Users\\\\LL\\\\2113t\\\\duke\\\\src\\\\main\\\\java\\\\duke.txt\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            ObjectInputStream in \u003d new ObjectInputStream(file);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            Task.size \u003d 0;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            while(file.available() \u003e 0) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                t.add(Task.size++, (Task)in.readObject());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            in.close();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            file.close();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            System.out.println(\"OOPS... IOException is caught.\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        } catch (ClassNotFoundException e) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            System.out.println(\"OOPS... ClassNotFoundException is caught.\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        while(true) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            String cmd \u003d br.readLine();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            if (cmd.equals(\"bye\")) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            } else if (cmd.equals(\"list\")) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                list();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                //doing things, or done things"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                String[] token \u003d cmd.split(\" \", 2);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                String cmd_1 \u003d token[0];"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                //handling errors here"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                //the variables errorMessage here better be put in the dukeException class,"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                //but time limited, refactorise later"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                //also refer to the webpage when refactorising"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                //should prob catch the case when rubbish input got space in b/w"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                if (token.length \u003c 2) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                    if (cmd_1.equals(\"done\") || cmd_1.equals(\"delete\") || cmd_1.equals(\"find\") || cmd_1.equals(\"todo\")"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                                                                || cmd_1.equals(\"event\") || cmd_1.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        //incomplete input"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                            String errorMessage \u003d \":( OOPS!!! The description of a \" + cmd_1 + \" cannot be empty.\";"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                            throw new DukeException(errorMessage);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        } catch (DukeException e) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                            continue;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        //non-sensical inputs, e.g. blah"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                            String errorMessage \u003d \":( OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                            throw new DukeException(errorMessage);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        } catch (DukeException e) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                            continue;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                String cmd_2 \u003d token[1];"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                if (cmd_1.equals(\"done\")) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                    //done things"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                    System.out.print(\"  \");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                    int num \u003d Integer.parseInt(cmd_2); // the second token is num"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                    t.get(num-1).markAsDone();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                    System.out.println(t.get(num-1).toString());"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                } else if (cmd_1.equals(\"delete\")) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                    //delete things"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                    System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                    System.out.print(\"  \");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                    int num \u003d Integer.parseInt(cmd_2);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                    System.out.println(t.get(num-1).toString());"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                    t.remove(num-1);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                    Task.size--;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                    System.out.println(\"Now you have \" + Task.size + \" tasks in the list.\");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                } else if (cmd_1.equals(\"find\")){"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                    //add functionality to allow users to find task by"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                    //searching for a keyword"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                    System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                    int temp_counter \u003d 0;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                    for (int i \u003d 0; i \u003c Task.size; i++) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        String temp_str \u003d t.get(i).toString();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        if (temp_str.contains(cmd_2)) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                            System.out.println(++temp_counter + \".\" + temp_str);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                    //doing things"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                    System.out.print(\"  \");"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                    if (cmd_1.equals(\"todo\")) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        t.add(Task.size, new Todo(cmd_2));"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        //event \u0026 deadline"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        //need string parsing again"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        String[] cmd_2_token \u003d cmd_2.split(\"/\", 2);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        String cmd_2_1 \u003d cmd_2_token[0];"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        String cmd_2_2 \u003d cmd_2_token[1];"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        String[] cmd_2_2_token \u003d cmd_2_2.split(\" \", 2);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        String cmd_2_2_2 \u003d cmd_2_2_token[1];"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        //cmd_2_2_2 is the dates and times"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        //level 8: have to parse it further"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        String[] cmd_2_2_2_token \u003d cmd_2_2_2.split(\" \");"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        String cmd_2_2_2_1 \u003d cmd_2_2_2_token[0]; //dates"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        String cmd_2_2_2_2 \u003d cmd_2_2_2_token[1]; //timing"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        String[] cmd_2_2_2_1_token \u003d cmd_2_2_2_1.split(\"/\");"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        String cmd_2_2_2_1_day \u003d cmd_2_2_2_1_token[0];"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        String cmd_2_2_2_1_month \u003d cmd_2_2_2_1_token[1];"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        String cmd_2_2_2_1_year \u003d cmd_2_2_2_1_token[2];"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        //parse it"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        String task_year_str \u003d cmd_2_2_2_1_year; //i know it is redundant logically,"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                                                                 // but it looks nice (better readability)"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        int task_month_int \u003d Integer.parseInt(cmd_2_2_2_1_month);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        String task_month_str \u003d  month_name[task_month_int-1];"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        String task_day_str;"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        if (cmd_2_2_2_1_day.equals(\"1\") || cmd_2_2_2_1_day.equals(\"21\") || cmd_2_2_2_1_day.equals(\"31\")) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                            task_day_str \u003d cmd_2_2_2_1_day + \"st\";"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        } else if (cmd_2_2_2_1_day.equals(\"2\") || cmd_2_2_2_1_day.equals(\"22\")) {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                            task_day_str \u003d cmd_2_2_2_1_day + \"nd\";"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        } else if (cmd_2_2_2_1_day.equals(\"3\") || cmd_2_2_2_1_day.equals(\"23\")) {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                            task_day_str \u003d cmd_2_2_2_1_day + \"rd\";"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                            task_day_str \u003d cmd_2_2_2_1_day + \"th\";"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        //okay... date parsing complete, now do the timing parsing"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        int task_time_int \u003d Integer.parseInt(cmd_2_2_2_2) / 100;"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        //note: can only take round clock at this moment"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        //examples given thus far seems only concerned with round clock..."
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        String task_time_str;"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        if (task_time_int \u003d\u003d 12) {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                            task_time_str \u003d \"12noon\";"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        } else if (task_time_int \u003d\u003d 0) {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                            task_time_str \u003d \"12midnight\";"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        } else if (task_time_int \u003e 12) {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                            task_time_str \u003d Integer.toString(task_time_int-12) + \"pm\";"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                            task_time_str \u003d Integer.toString(task_time_int) + \"am\";"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        //parsing done"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        if (cmd_1.equals(\"event\")) {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                            t.add(Task.size, new Event(cmd_2_1, task_day_str, task_month_str, task_year_str, task_time_str));"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        } else { //deadline"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                            t.add(Task.size, new Deadline(cmd_2_1, task_day_str, task_month_str, task_year_str, task_time_str));"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                    System.out.println(t.get(Task.size-1).toString());"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                    System.out.println(\"Now you have \" + Task.size + \" tasks in the list.\");"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                }"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            //file io"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                FileOutputStream new_file \u003d new FileOutputStream(\"C:\\\\Users\\\\LL\\\\2113t\\\\duke\\\\src\\\\main\\\\java\\\\duke.txt\");"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                ObjectOutputStream out \u003d new ObjectOutputStream(new_file);"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                for (int i \u003d 0; i \u003c Task.size; i++) {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                    out.writeObject(t.get(i));"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                out.close();"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                new_file.close();"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                System.out.println(\"OOPS... IOException is caught.\");"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LL-Pengfei": 282
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "//@@author LL-Pengfei"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "/* Author: Zhao Pengfei (Email: zhao.pengfei@comp.nus.edu.sg)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * Copyright © Zhao Pengfei (Email: zhao.pengfei@comp.nus.edu.sg)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * AY19/20 CS2113T Module Project, Individual Component"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * School of Computing (SoC), National University of Singapore (NUS)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * please do not copy the codes/any of the code segments for any purposes."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * Plagiarism is strictly prohibited under NUS rules and regulations."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "//DukeException.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "//support \u0026 enable error handling for Duke"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    public DukeException(String s) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LL-Pengfei": 17
    }
  },
  {
    "path": "src/main/java/Event.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "//@@author LL-Pengfei"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "/* Author: Zhao Pengfei (Email: zhao.pengfei@comp.nus.edu.sg)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * Copyright © Zhao Pengfei (Email: zhao.pengfei@comp.nus.edu.sg)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * AY19/20 CS2113T Module Project, Individual Component"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * School of Computing (SoC), National University of Singapore (NUS)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * please do not copy the codes/any of the code segments for any purposes."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * Plagiarism is strictly prohibited under NUS rules and regulations."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "//Event.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "//support Event of Task, subclass of Task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "//tutorial01 note: better to use getters and setters to allow modification of at_day month year time inside class event"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "//a good practice to do that for oop \u0026 se"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    protected String at_day;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    protected String at_month;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    protected String at_year;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    protected String at_time;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    public Event(String description, String at_day, String at_month, String at_year, String at_time) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        this.at_day \u003d at_day;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        this.at_month \u003d at_month;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        this.at_year \u003d at_year;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        this.at_time \u003d at_time;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at: \" + at_day + \" of \" + at_month + \" \" + at_year + \", \" +  at_time + \")\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LL-Pengfei": 35
    }
  },
  {
    "path": "src/main/java/Task.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "//@@author LL-Pengfei"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "/* Author: Zhao Pengfei (Email: zhao.pengfei@comp.nus.edu.sg)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * Copyright © Zhao Pengfei (Email: zhao.pengfei@comp.nus.edu.sg)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * AY19/20 CS2113T Module Project, Individual Component"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * School of Computing (SoC), National University of Singapore (NUS)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * please do not copy the codes/any of the code segments for any purposes."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * Plagiarism is strictly prohibited under NUS rules and regulations."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "//Task.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "//baseclass of Deadline Event \u0026 Todo, branching out to form different subclasses"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "//of Task; implemented Serializable to support persistant storage (save tasks in"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "// hard disk, load data from hard disk when Duke starts up)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "public class Task implements Serializable {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    public static int size \u003d 0; // actually no need to specially"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                                // keep a static variable to trace size..."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                                // since arraylist has been implemented and can"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                                // access the size using size() method..."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        size++;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LL-Pengfei": 42
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "//@@author LL-Pengfei"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "/* Author: Zhao Pengfei (Email: zhao.pengfei@comp.nus.edu.sg)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * Copyright © Zhao Pengfei (Email: zhao.pengfei@comp.nus.edu.sg)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * AY19/20 CS2113T Module Project, Individual Component"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * School of Computing (SoC), National University of Singapore (NUS)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * please do not copy the codes/any of the code segments for any purposes."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * Plagiarism is strictly prohibited under NUS rules and regulations."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "//Todo.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "//support Todo of Task, subclass of Task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LL-Pengfei": 23
    }
  }
]

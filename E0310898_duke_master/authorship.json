[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "E0310898"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "E0310898"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "E0310898"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "E0310898"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "E0310898"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "E0310898"
        },
        "content": "public class Deadline extends Task implements Serializable {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "E0310898"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "E0310898"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "E0310898"
        },
        "content": "    private SimpleDateFormat format \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\"); //according to the specification given in the Level-8 description"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "E0310898"
        },
        "content": "    private Date date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "E0310898"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "E0310898"
        },
        "content": "    public Deadline(String description, String by) throws DukeException, ParseException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "E0310898"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "E0310898"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "E0310898"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "E0310898"
        },
        "content": "        date \u003d format.parse(by);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "E0310898"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "E0310898"
        },
        "content": "        if (description.isBlank()) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "E0310898"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "E0310898"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "E0310898"
        },
        "content": "        else if (by.isBlank())"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "E0310898"
        },
        "content": "        {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "E0310898"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The deadline date/time cannot be empty.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "E0310898"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "E0310898"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "E0310898"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "E0310898"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "E0310898"
        },
        "content": "        return \"[D]\" + \"[\" + super.getStatusIcon() + \"]\" + this.description + \"(by: \" + date.toString() + \")\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "E0310898"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "E0310898"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "E0310898"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "E0310898": 31
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "E0310898"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "E0310898"
        },
        "content": "//import java.nio.file.attribute.FileStoreAttributeView;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "E0310898"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "E0310898"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "E0310898"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "E0310898"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "E0310898"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "E0310898"
        },
        "content": "    private static String filePath \u003d \"D:/DukeDatabase/ArrayList\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "E0310898"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "E0310898"
        },
        "content": "    private static void print_output(Task CurrentTask, int no_of_tasks) // Used to print the output repeatedly!"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "E0310898"
        },
        "content": "    {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "E0310898"
        },
        "content": "        String user_output_dash \u003d \"_______________________________\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "E0310898"
        },
        "content": "        System.out.println(user_output_dash);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "E0310898"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "E0310898"
        },
        "content": "        System.out.println(CurrentTask.toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "E0310898"
        },
        "content": "        System.out.println(\"Now you have \" + no_of_tasks + \" tasks in the list.\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "E0310898"
        },
        "content": "        System.out.println(user_output_dash);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "E0310898"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "E0310898"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "E0310898"
        },
        "content": "    public static void main(String[] args) throws IOException{"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "E0310898"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "E0310898"
        },
        "content": "        File Database \u003d new File(filePath);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "E0310898"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "E0310898"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "E0310898"
        },
        "content": "        String greeting \u003d \"_______________________________\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                        + \"Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                        + \"What can I do for you?\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                        + \"_______________________________\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "E0310898"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "E0310898"
        },
        "content": "        System.out.println(greeting);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "E0310898"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "E0310898"
        },
        "content": "        ArrayList\u003cTask\u003e listOfTasks \u003d loadFile(Database); //new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "E0310898"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "E0310898"
        },
        "content": "        String user_output_dash \u003d \"_______________________________\"; // just a definition"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "E0310898"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "E0310898"
        },
        "content": "        int iterate; int counter;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "E0310898"
        },
        "content": "        String user_input; //declared outside to be used by the do-while loop"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "E0310898"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "E0310898"
        },
        "content": "        do"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "E0310898"
        },
        "content": "        {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "E0310898"
        },
        "content": "            user_input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "E0310898"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "E0310898"
        },
        "content": "            if(user_input.contains(\"list\"))"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "E0310898"
        },
        "content": "            {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                System.out.println(user_output_dash + \"\\n\" + \"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                iterate \u003d 0;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                counter \u003d 0;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                while(counter \u003c listOfTasks.size()) // this prints out all the different tasks you have"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                    Task currentTask \u003d listOfTasks.get(iterate);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                    System.out.println((counter+\u003d1) + \".\" + currentTask.toString());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                    iterate++;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                System.out.println(user_output_dash);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "E0310898"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "E0310898"
        },
        "content": "            else if (user_input.matches(\"done \\\\d+\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                int listIndex \u003d Integer.parseInt(user_input.replaceAll(\"[^0-9]\", \"\"));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                listIndex -\u003d 1;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                if (listIndex \u003c listOfTasks.size() \u0026\u0026 listIndex \u003e\u003d 0) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                    Task currentTask \u003d listOfTasks.get(listIndex); // object instance"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                    currentTask.markAsDone();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                    System.out.println(user_output_dash);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                    System.out.println(currentTask.toString());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                    System.out.println(user_output_dash);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                    saveFile(listOfTasks,Database);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                else"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                    System.out.println(user_output_dash);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                    System.out.println(\"☹ OOPS!!! Sorry the task does not exist!\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                    System.out.println(user_output_dash);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "E0310898"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "E0310898"
        },
        "content": "            else if (user_input.matches(\"todo.*\"))"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "E0310898"
        },
        "content": "            {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                String todo_name \u003d user_input.replace(\"todo\",\"\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                todo_name.replace(\" \", \"\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                    Todo TodoTask \u003d new Todo(todo_name);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                    listOfTasks.add(TodoTask);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                    print_output(TodoTask, listOfTasks.size());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                    saveFile(listOfTasks,Database);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                catch (DukeException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                    System.out.println(e);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "E0310898"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "E0310898"
        },
        "content": "            else if (user_input.matches(\"deadline.*\"))"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "E0310898"
        },
        "content": "            {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                if(user_input.matches(\"deadline.*/by.*\")) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                    user_input \u003d user_input.replace(\"deadline\", \"\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                    String[] parts \u003d user_input.split(\"/by\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                    String deadline_name \u003d parts[0];"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                    String deadline_date;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "E0310898"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                    if (parts.length \u003c 2) { deadline_date \u003d \"\"; }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                    else { deadline_date \u003d parts[1]; }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "E0310898"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                        Deadline DeadlineTask \u003d new Deadline(deadline_name, deadline_date);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                        listOfTasks.add(DeadlineTask);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                        print_output(DeadlineTask, listOfTasks.size());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                        saveFile(listOfTasks,Database);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                        System.out.println(e);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                    catch (ParseException e){"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                        System.out.println(\"☹ OOPS!!! The deadline should be of the format \u003cdd/MM/yyyy HHmm\u003e\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                        //e.printStackTrace();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                else{"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                    System.out.println(\"☹ OOPS!!! The deadline is not given in the proper format of (deadline \u003cdescription\u003e /by \u003cdd/MM/yyyy HHmm\u003e)\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "E0310898"
        },
        "content": "            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "E0310898"
        },
        "content": "            else if (user_input.matches(\"event.*\"))"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "E0310898"
        },
        "content": "            {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                if (user_input.matches(\"event.*/at.*\")) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                    user_input \u003d user_input.replace(\"event\", \"\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                    String[] parts \u003d user_input.split(\"/at\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                    String event_name \u003d parts[0];"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                    String event_dateandtime;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "E0310898"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                    if (parts.length \u003c 2) { event_dateandtime \u003d \"\"; }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                    else { event_dateandtime \u003d parts[1]; }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "E0310898"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                        Event EventTask \u003d new Event(event_name, event_dateandtime);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                        listOfTasks.add(EventTask);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                        print_output(EventTask, listOfTasks.size());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                        saveFile(listOfTasks,Database);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                        System.out.println(e);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                    } catch (ParseException e) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                        System.out.println(\"☹ OOPS!!! The event\u0027s should be of the format \u003cdd/MM/yyyy HHmm-HHmm\u003e\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                else{"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                    System.out.println((\"☹ OOPS!!! The event is not given in the proper format (event \u003cdescription\u003e /at \u003cdd/MM/yyyy HHmm-HHmm\u003e)\"));"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "E0310898"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "E0310898"
        },
        "content": "            }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "E0310898"
        },
        "content": "            else if (user_input.contains(\"duke-manual\"))"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "E0310898"
        },
        "content": "            {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                System.out.println(\"Hi, this is Duke!\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                System.out.println(\"I am able to let you add tasks of three types! todo, event and deadline\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                System.out.println(\"1. To enter a todo task, key in todo\u003cspace\u003eyour task description eg. todo borrow books\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                System.out.println(\"2. To enter a deadline, key in deadline\u003cspace\u003eyour deadline description\u003cspace\u003e/by\u003cspace\u003ethe date eg. return books/by Sunday\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                System.out.println(\"3. To enter a event, key in event\u003cspace\u003eyour event description\u003cspace\u003e/at\u003cspace\u003ethe day or date and the time eg. Project meeting /at 2-4pm Sunday\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                System.out.println(\"4. To list out all your tasks simply enter list\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                System.out.println(\"5. To mark a task as complete just enter done\u003cspace\u003ethe index of the task as listed\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                System.out.println(\"6. To exit, enter bye\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "E0310898"
        },
        "content": "            }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "E0310898"
        },
        "content": "            else if(!user_input.matches(\"bye\"))"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "E0310898"
        },
        "content": "            {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                System.out.println(\" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means. If you would like to know how to use Duke, Enter duke-manual\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "E0310898"
        },
        "content": "            }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "E0310898"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "E0310898"
        },
        "content": "        }while (!user_input.equals(\"bye\"));"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "E0310898"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "E0310898"
        },
        "content": "        String goodbye \u003d \"_______________________________\\n\""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                       + \"Bye. Hope to see you again soon!\\n\""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                       + \"_______________________________\\n\";"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "E0310898"
        },
        "content": "        System.out.println(goodbye);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "E0310898"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "E0310898"
        },
        "content": "    private static void saveFile(ArrayList\u003cTask\u003e listOfTasks, File database) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "E0310898"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "E0310898"
        },
        "content": "            FileOutputStream fileOutputStream \u003d new FileOutputStream(database);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "E0310898"
        },
        "content": "            ObjectOutputStream objectOutputStream \u003d new ObjectOutputStream(fileOutputStream);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "E0310898"
        },
        "content": "            objectOutputStream.writeObject(listOfTasks);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "E0310898"
        },
        "content": "            objectOutputStream.close(); //always close"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "E0310898"
        },
        "content": "            fileOutputStream.close(); //always close"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "E0310898"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "E0310898"
        },
        "content": "            System.out.println(\"☹ OOPS!!! Error writing task list to file!!!\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "E0310898"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "E0310898"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "E0310898"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "E0310898"
        },
        "content": "    private static ArrayList\u003cTask\u003e loadFile(File Database) throws IOException {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "E0310898"
        },
        "content": "        ArrayList\u003cTask\u003e listOfTasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "E0310898"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "E0310898"
        },
        "content": "            FileInputStream fileInputStream \u003d new FileInputStream(Database);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "E0310898"
        },
        "content": "            ObjectInputStream objectInputStream \u003d new ObjectInputStream(fileInputStream);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "E0310898"
        },
        "content": "            listOfTasks \u003d (ArrayList\u003cTask\u003e) objectInputStream.readObject();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "E0310898"
        },
        "content": "            fileInputStream.close();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "E0310898"
        },
        "content": "            objectInputStream.close();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "E0310898"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "E0310898"
        },
        "content": "            Database \u003d new File(filePath);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "E0310898"
        },
        "content": "            Database.createNewFile();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "E0310898"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "E0310898"
        },
        "content": "            e.getMessage();"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "E0310898"
        },
        "content": "        } catch (ClassNotFoundException e) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "E0310898"
        },
        "content": "            System.out.println(\"☹ OOPS!!! The project folder for Duke is missing the \u0027Task\u0027 class type\");"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "E0310898"
        },
        "content": "        }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "E0310898"
        },
        "content": "        return listOfTasks;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "E0310898": 195,
      "Jeffry Lum": 1,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "E0310898"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "E0310898"
        },
        "content": "    public DukeException(String error){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "E0310898"
        },
        "content": "        super(error);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "E0310898"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "E0310898"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "E0310898"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "E0310898": 6
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "E0310898"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "E0310898"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "E0310898"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "E0310898"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "E0310898"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "E0310898"
        },
        "content": "public class Event extends Task implements Serializable {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "E0310898"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "E0310898"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "E0310898"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "E0310898"
        },
        "content": "    private SimpleDateFormat format \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm-HHmm\"); //according to the specification given in the Level-8 description"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "E0310898"
        },
        "content": "    private Date date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "E0310898"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "E0310898"
        },
        "content": "    public Event(String description, String at) throws DukeException, ParseException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "E0310898"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "E0310898"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "E0310898"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "E0310898"
        },
        "content": "        date \u003d format.parse(at);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "E0310898"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "E0310898"
        },
        "content": "        if (description.isBlank()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "E0310898"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "E0310898"
        },
        "content": "        } else if (at.isBlank())"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "E0310898"
        },
        "content": "        {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "E0310898"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The date/duration of an event cannot be empty.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "E0310898"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "E0310898"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "E0310898"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "E0310898"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "E0310898"
        },
        "content": "        return \"[E]\" +  \"[\" + super.getStatusIcon() + \"]\" + this.description + \"(at: \" + date.toString() + \")\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "E0310898"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "E0310898"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "E0310898": 30
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "E0310898"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "E0310898"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "E0310898"
        },
        "content": "class Task implements Serializable {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "E0310898"
        },
        "content": "    protected String description; // basically similar to describing features of the class"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "E0310898"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "E0310898"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "E0310898"
        },
        "content": "    public Task(String description) { // constructor"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "E0310898"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "E0310898"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "E0310898"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "E0310898"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "E0310898"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "E0310898"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "E0310898"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "E0310898"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "E0310898"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "E0310898"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "E0310898"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "E0310898"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "E0310898"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "E0310898": 20
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "E0310898"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "E0310898"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "E0310898"
        },
        "content": "public class Todo extends Task implements Serializable {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "E0310898"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "E0310898"
        },
        "content": "    public Todo(String description) throws DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "E0310898"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "E0310898"
        },
        "content": "            if (description.isBlank()) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "E0310898"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! The description of a todo task cannot be empty.\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "E0310898"
        },
        "content": "            }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "E0310898"
        },
        "content": "        }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "E0310898"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "E0310898"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "E0310898"
        },
        "content": "        return \"[T]\" + \"[\" + super.getStatusIcon() + \"]\" + this.description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "E0310898"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "E0310898"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "E0310898": 15
    }
  }
]

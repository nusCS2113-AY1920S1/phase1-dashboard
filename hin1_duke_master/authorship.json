[
  {
    "path": "src/main/java/Deadline.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hin1"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hin1"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hin1"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hin1"
        },
        "content": "import java.time.format.TextStyle;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hin1"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hin1"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hin1"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hin1"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hin1"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hin1"
        },
        "content": "    public String getDateTime(String dateTime) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hin1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hin1"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hin1"
        },
        "content": "            LocalDateTime dateTimeFormatted \u003d LocalDateTime.parse(dateTime, formatter);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hin1"
        },
        "content": "            //Date"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hin1"
        },
        "content": "            String year \u003d Integer.toString(dateTimeFormatted.getYear());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hin1"
        },
        "content": "            String month \u003d dateTimeFormatted.getMonth().getDisplayName(TextStyle.FULL, Locale.ENGLISH);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hin1"
        },
        "content": "            String day \u003d Integer.toString(dateTimeFormatted.getDayOfMonth());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hin1"
        },
        "content": "            if (day.endsWith(\"1\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hin1"
        },
        "content": "                day \u003d day + \"st\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hin1"
        },
        "content": "            } else if (day.endsWith(\"2\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hin1"
        },
        "content": "                day \u003d day + \"nd\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hin1"
        },
        "content": "            } else if (day.endsWith(\"3\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hin1"
        },
        "content": "                day \u003d day + \"rd\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hin1"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hin1"
        },
        "content": "                day \u003d day + \"th\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hin1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hin1"
        },
        "content": "            //Time"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hin1"
        },
        "content": "            String time \u003d \"13.00pm\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hin1"
        },
        "content": "            String minute \u003d String.format(\"%02d\",dateTimeFormatted.getMinute());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hin1"
        },
        "content": "            int hour \u003d dateTimeFormatted.getHour();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hin1"
        },
        "content": "            if (hour \u003d\u003d 0) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hin1"
        },
        "content": "                time \u003d  \"12.\" + minute + \"am\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hin1"
        },
        "content": "            } else if ((hour \u003e\u003d 12) \u0026\u0026 (hour \u003c 24)) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hin1"
        },
        "content": "                time \u003d (hour - 12) + \".\" + minute + \"pm\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hin1"
        },
        "content": "            } else if (hour \u003c 12) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hin1"
        },
        "content": "                time \u003d hour + \".\" + minute + \"am\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hin1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hin1"
        },
        "content": "            return (day + \" of \" + month + \" \" + year + \", \" + time);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hin1"
        },
        "content": "        } catch (DateTimeException e1) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hin1"
        },
        "content": "            //e1.printStackTrace();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hin1"
        },
        "content": "            //Response errorMessage \u003d new Response(\"Invalid date and time format\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hin1"
        },
        "content": "            //errorMessage.print();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hin1"
        },
        "content": "            return by;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hin1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hin1"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + getDateTime(by) + \")\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hin1": 54,
      "-": 17
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    private static List\u003cTask\u003e getTasks(String filePath) throws FileNotFoundException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cTask\u003e tasklist \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        while(s.hasNext()) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "            String task \u003d s.nextLine();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            String[] taskArray \u003d task.split(\" \\\\| \");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            Task newTask \u003d null;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            if (taskArray[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "                newTask \u003d new ToDo(taskArray[taskArray.length - 1]);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (taskArray[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "                newTask \u003d new Deadline(taskArray[taskArray.length - 2], taskArray[taskArray.length - 1]);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (taskArray[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "                newTask \u003d new Event(taskArray[taskArray.length - 2], taskArray[taskArray.length - 1]);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "                    throw new DukeException(\"Invalid task type\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                    e.print();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            //Check if task is done"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            if (taskArray[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "                newTask.markAsDone();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            tasklist.add(newTask);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        return tasklist;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void writeTasks(String filePath, List\u003cTask\u003e tasklist) throws IOException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        for (Task t: tasklist) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            String[] lineArray \u003d new String[4];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            //Check type of task"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            if (t instanceof ToDo) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                lineArray[0] \u003d \"T\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (t instanceof Deadline) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                lineArray[0] \u003d \"D\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                lineArray[3] \u003d ((Deadline) t).getBy();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (t instanceof Event) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                lineArray[0] \u003d \"E\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                lineArray[3] \u003d ((Event) t).getAt();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                    throw new DukeException(\"Invalid Task: \" + t.getDescription());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                    e.printStackTrace();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            //Check if task is done"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            if (t.getStatusIcon() \u003d\u003d \"\\u2713\") {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "                lineArray[1] \u003d \"1\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (t.getStatusIcon() \u003d\u003d \"\\u2718\") {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                lineArray[1] \u003d \"0\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                    throw new DukeException(\"Invalid status of task: \" + t.getDescription());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "                    e.printStackTrace();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "            //Check description"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "            lineArray[2] \u003d t.getDescription();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            //Combine"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            if (lineArray[3] \u003d\u003d null) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "                lineArray \u003d Arrays.copyOfRange(lineArray, 0, 3);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            String line \u003d String.join(\" | \",lineArray);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            fw.write(line);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            fw.write(System.lineSeparator());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hin1"
        },
        "content": "    private static void handleCommand(Scanner scan, List\u003cTask\u003e tasklist, Response reply) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        while(!(input \u003d scan.nextLine()).equals(\"bye\")) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "            String[] inst \u003d input.split(\" \");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            String command \u003d inst[0];"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "            String[] arg \u003d Arrays.copyOfRange(inst,1,inst.length);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            switch(command) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "                    reply.clearContent();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "                    reply.setContent(\"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "                    reply.addTasks(tasklist);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "                    reply.print();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "                    reply.clearContent();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (arg.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "                            throw new DukeException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "                        } catch (DukeException e) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "                            e.print();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "                        String todo \u003d String.join(\" \", arg);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "                        ToDo newTodo \u003d new ToDo(todo);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "                        tasklist.add(newTodo);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "                        reply.setContent(\"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "                                + \"  \" + newTodo.toString()"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "                                + \"\\nNow you have \" + tasklist.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "                        reply.print();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "hin1"
        },
        "content": "                    if (arg.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "hin1"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "hin1"
        },
        "content": "                            throw new DukeException(\"The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "hin1"
        },
        "content": "                        } catch (DukeException e) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "hin1"
        },
        "content": "                            e.print();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "hin1"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "hin1"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "                        reply.clearContent();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "                        int dueStart \u003d Arrays.asList(arg).indexOf(\"/by\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "hin1"
        },
        "content": "                        if (dueStart \u003d\u003d -1) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "hin1"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "hin1"
        },
        "content": "                                throw new DukeException(\"Deadline date and time cannot be identified. Try again!\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "hin1"
        },
        "content": "                            } catch (DukeException e) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "hin1"
        },
        "content": "                                e.print();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "hin1"
        },
        "content": "                                handleCommand(scan, tasklist, reply);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "hin1"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "hin1"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "                        String[] dueArray \u003d Arrays.copyOfRange(arg, dueStart + 1, arg.length);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "                        String[] descArray \u003d Arrays.copyOfRange(arg, 0, dueStart);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "                        String due \u003d String.join(\" \", dueArray);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "                        String desc \u003d String.join(\" \", descArray);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "                        Deadline newDeadline \u003d new Deadline(desc, due);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "                        tasklist.add(newDeadline);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "                        reply.setContent(\"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "                                + \"  \" + newDeadline.toString()"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "                                + \"\\nNow you have \" + tasklist.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "                        reply.print();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "hin1"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "hin1"
        },
        "content": "                    if (arg.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "hin1"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "hin1"
        },
        "content": "                            throw new DukeException(\"The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "hin1"
        },
        "content": "                        } catch (DukeException e) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "hin1"
        },
        "content": "                            e.print();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "hin1"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "hin1"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "                        reply.clearContent();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "                        int atStart \u003d Arrays.asList(arg).indexOf(\"/at\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "hin1"
        },
        "content": "                        if (atStart \u003d\u003d -1) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "hin1"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "hin1"
        },
        "content": "                                throw new DukeException(\"Event date and time cannot be identified. Try again!\");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "hin1"
        },
        "content": "                            } catch (DukeException e) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "hin1"
        },
        "content": "                                e.print();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "hin1"
        },
        "content": "                                handleCommand(scan, tasklist, reply);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "hin1"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "hin1"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "                        String[] atArray \u003d Arrays.copyOfRange(arg, atStart + 1, arg.length);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "                        String[] eventArray \u003d Arrays.copyOfRange(arg, 0, atStart);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "                        String at \u003d String.join(\" \", atArray);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "                        String event \u003d String.join(\" \", eventArray);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "                        Event newEvent \u003d new Event(event, at);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "                        tasklist.add(newEvent);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "                        reply.setContent(\"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "                                + \"  \" + newEvent.toString()"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "                                + \"\\nNow you have \" + tasklist.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "                        reply.print();"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "hin1"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "hin1"
        },
        "content": "                    if (arg.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "hin1"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "hin1"
        },
        "content": "                            throw new DukeException(\"Task number not specified.\");"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "hin1"
        },
        "content": "                        } catch (DukeException e) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "hin1"
        },
        "content": "                            e.print();"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "hin1"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "hin1"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "                        Task doneTask \u003d tasklist.get(Integer.parseInt(arg[0]) - 1);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "                        doneTask.markAsDone();"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "                        String doneMsg \u003d \"Nice! I\u0027ve marked this task as done:\\n\";"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "                        reply.setContent(doneMsg + \"  \" + doneTask.toString());"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "                        reply.print();"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "hin1"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "                        throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "                        e.print();"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "                writeTasks(\"/Users/seanchan/duke/data/duke.txt\",tasklist);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "hin1"
        },
        "content": "        Response intro \u003d new Response(\"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\");"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "hin1"
        },
        "content": "        intro.print();"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "hin1"
        },
        "content": "        //INPUT"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "hin1"
        },
        "content": "        Scanner scan \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "hin1"
        },
        "content": "        //Save (Level 7)"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "hin1"
        },
        "content": "        //Read file"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "hin1"
        },
        "content": "        List\u003cTask\u003e tasklist \u003d null; //ADD FILEPATH"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "hin1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "hin1"
        },
        "content": "            tasklist \u003d getTasks(\"/Users/seanchan/duke/data/duke.txt\");"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "hin1"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "hin1"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "hin1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "hin1"
        },
        "content": "        Response reply \u003d new Response();"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "hin1"
        },
        "content": "        handleCommand(scan, tasklist, reply);"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "        reply.setContent(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "        reply.print();"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hin1": 71,
      "-": 201
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hin1"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hin1"
        },
        "content": "    public enum errorType {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hin1"
        },
        "content": "        EMPTYTASK;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Response exceptionReply \u003d new Response();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionReply.setContent(\"\\u2639 \" + \"OOPS!!! \" + errorMessage);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hin1"
        },
        "content": "    public DukeException(errorType e) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hin1"
        },
        "content": "        switch (e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hin1"
        },
        "content": "            case EMPTYTASK:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hin1"
        },
        "content": "                exceptionReply.setContent(\"\\u2639 \" + \"OOPS!!! \" + \"This task description cannot be empty!\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hin1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    public void print() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionReply.print();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hin1"
        },
        "content": "    public void scanNewObject(Object o) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hin1"
        },
        "content": "        Scanner newDateTimeScan \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hin1"
        },
        "content": "        o \u003d newDateTimeScan.nextLine();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hin1": 18,
      "-": 13
    }
  }
]

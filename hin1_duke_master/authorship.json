[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hin1"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hin1"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hin1"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hin1"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hin1"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hin1"
        },
        "content": "run {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hin1"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hin1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hin1": 10,
      "-": 15
    }
  },
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hin1"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hin1"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hin1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hin1"
        },
        "content": " * A command that adds tasks (todos, events and deadlines) into a task list within Duke."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hin1"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hin1"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hin1"
        },
        "content": "    private Task taskToAdd;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hin1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * Constructor for an AddCommand object that contains a task to be added"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * into the task list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hin1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @param keyword the type of task that is to be added: todo, event or deadline."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @param arguments the description of the task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hin1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hin1"
        },
        "content": "    public AddCommand(String keyword, String[] arguments) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hin1"
        },
        "content": "        if (arguments.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hin1"
        },
        "content": "            throw new DukeException(\"The description of the \" + keyword + \" cannot be empty.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hin1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hin1"
        },
        "content": "        switch(keyword) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hin1"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hin1"
        },
        "content": "                String todo \u003d String.join(\" \", arguments);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hin1"
        },
        "content": "                taskToAdd \u003d new ToDo(todo);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hin1"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hin1"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hin1"
        },
        "content": "                int dueStart \u003d Arrays.asList(arguments).indexOf(\"/by\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hin1"
        },
        "content": "                if (dueStart \u003d\u003d -1) { //No deadline"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hin1"
        },
        "content": "                    throw new DukeException(\"Deadline date and time cannot be identified. Try again!\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hin1"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hin1"
        },
        "content": "                    String[] dueArray \u003d Arrays.copyOfRange(arguments, dueStart + 1, arguments.length);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hin1"
        },
        "content": "                    String[] descArray \u003d Arrays.copyOfRange(arguments, 0, dueStart);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hin1"
        },
        "content": "                    String due \u003d String.join(\" \", dueArray);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hin1"
        },
        "content": "                    String desc \u003d String.join(\" \", descArray);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hin1"
        },
        "content": "                    taskToAdd \u003d new Deadline(desc, due);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hin1"
        },
        "content": "                }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hin1"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hin1"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hin1"
        },
        "content": "                int atStart \u003d Arrays.asList(arguments).indexOf(\"/at\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hin1"
        },
        "content": "                if (atStart \u003d\u003d -1) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hin1"
        },
        "content": "                    throw new DukeException(\"Event date and time cannot be identified. Try again!\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hin1"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hin1"
        },
        "content": "                    String[] atArray \u003d Arrays.copyOfRange(arguments, atStart + 1, arguments.length);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hin1"
        },
        "content": "                    String[] eventArray \u003d Arrays.copyOfRange(arguments, 0, atStart);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hin1"
        },
        "content": "                    String at \u003d String.join(\" \", atArray);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hin1"
        },
        "content": "                    String event \u003d String.join(\" \", eventArray);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hin1"
        },
        "content": "                    taskToAdd \u003d new Event(event, at);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hin1"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hin1"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hin1"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hin1"
        },
        "content": "                throw new DukeException(\"Invalid type of task!\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hin1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hin1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * Executes the command to add the identified task from"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * the arguments into the list."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hin1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @param tasks list of tasks to add the new task into"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @param ui user interface that prints the response to inform the reader about the task added"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @param storage storage where the list of tasks is saved to after the new task is added"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hin1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hin1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hin1"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hin1"
        },
        "content": "        //Add task details to tasklist"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hin1"
        },
        "content": "        tasks.add(taskToAdd);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hin1"
        },
        "content": "        //Print out result"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hin1"
        },
        "content": "        ui.print(\"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hin1"
        },
        "content": "                + \"  \" + taskToAdd.toString()"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hin1"
        },
        "content": "                + \"\\nNow you have \" + tasks.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hin1"
        },
        "content": "        //Save list"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hin1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hin1"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hin1"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hin1"
        },
        "content": "            throw new DukeException(\"Invalid file to save into!\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hin1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hin1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * Checks if the command is a ByeCommand object."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hin1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @return false since it is not a ByeCommand."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hin1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hin1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hin1"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hin1"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hin1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hin1": 102
    }
  },
  {
    "path": "src/main/java/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hin1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hin1"
        },
        "content": " * A command to terminate Duke once the user is done."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hin1"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hin1"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hin1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * Empty constructor as it serves to terminate Duke."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hin1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hin1"
        },
        "content": "    public ByeCommand() {}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hin1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * Executes the command to terminate Duke."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hin1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @param tasks task list to refer to tasks from."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @param ui user interface to print goodbye message."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @param storage storage to save task list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hin1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hin1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hin1"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hin1"
        },
        "content": "        ui.print(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hin1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * Returns true if it is a ByeCommand object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hin1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @return true since it is a ByeCommand"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hin1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hin1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hin1"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hin1"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hin1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hin1": 32
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hin1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hin1"
        },
        "content": " * An abstract class that defines the command, and is extended into multiple types of commands"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hin1"
        },
        "content": " * that are available to the user."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hin1"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hin1"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hin1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * Abstract method where a command is executed in their specific implementation."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hin1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @param tasks list of tasks as reference or to change"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @param ui user interface to give response to the user"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @param storage storage to save or load list of tasks externally"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hin1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hin1"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hin1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * Returns true if the command is a ByeCommand object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hin1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @return true if command is ByeCommand"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hin1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hin1"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hin1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hin1": 22
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hin1"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hin1"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hin1"
        },
        "content": "import java.time.format.TextStyle;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hin1"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hin1"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hin1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hin1"
        },
        "content": " * Represents a type of Task that includes additional information"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hin1"
        },
        "content": " * which is date and time when the particular task is due"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hin1"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hin1"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hin1"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hin1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * Constructor for a Deadline object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hin1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @param description description of the task that is due"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @param by date and/or time that the task is due, which can be in the format d/M/yyyy HHmm"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hin1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hin1"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hin1"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hin1"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hin1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * Returns the date and time when the task is due."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hin1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @return deadline date and time"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hin1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hin1"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hin1"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hin1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * Returns the date and time in prose as a string if it was in the format of"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * d/M/yyyy HHmm, if not valid, then just as the string it was before."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hin1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @param dateTime date and time when the task is due"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @return formatted date and time when task is due as a string"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hin1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hin1"
        },
        "content": "    public String getDateTime(String dateTime) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hin1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hin1"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hin1"
        },
        "content": "            LocalDateTime dateTimeFormatted \u003d LocalDateTime.parse(dateTime, formatter);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hin1"
        },
        "content": "            //Date"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hin1"
        },
        "content": "            String year \u003d Integer.toString(dateTimeFormatted.getYear());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hin1"
        },
        "content": "            String month \u003d dateTimeFormatted.getMonth().getDisplayName(TextStyle.FULL, Locale.ENGLISH);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hin1"
        },
        "content": "            String day \u003d Integer.toString(dateTimeFormatted.getDayOfMonth());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hin1"
        },
        "content": "            if (day.endsWith(\"1\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hin1"
        },
        "content": "                day \u003d day + \"st\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hin1"
        },
        "content": "            } else if (day.endsWith(\"2\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hin1"
        },
        "content": "                day \u003d day + \"nd\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hin1"
        },
        "content": "            } else if (day.endsWith(\"3\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hin1"
        },
        "content": "                day \u003d day + \"rd\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hin1"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hin1"
        },
        "content": "                day \u003d day + \"th\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hin1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hin1"
        },
        "content": "            //Time"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hin1"
        },
        "content": "            String time;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hin1"
        },
        "content": "            String minute \u003d String.format(\"%02d\",dateTimeFormatted.getMinute());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hin1"
        },
        "content": "            int hour \u003d dateTimeFormatted.getHour();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hin1"
        },
        "content": "            if (hour \u003d\u003d 0) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hin1"
        },
        "content": "                time \u003d  \"12.\" + minute + \"am\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hin1"
        },
        "content": "            } else if (hour \u003e\u003d 12) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hin1"
        },
        "content": "                time \u003d (hour - 12) + \".\" + minute + \"pm\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hin1"
        },
        "content": "            } else { // (hour \u003c 12)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hin1"
        },
        "content": "                time \u003d hour + \".\" + minute + \"am\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hin1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hin1"
        },
        "content": "            return (day + \" of \" + month + \" \" + year + \", \" + time);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hin1"
        },
        "content": "        } catch (DateTimeException e1) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hin1"
        },
        "content": "            return by;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hin1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hin1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * Returns a String of the Deadline object as it would be represented in the task list."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hin1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @return Deadline details as represented in the task list as a String."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hin1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hin1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hin1"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hin1"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + getDateTime(by) + \")\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hin1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hin1": 92
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hin1"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hin1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hin1"
        },
        "content": " * A command that deletes tasks (todos, events and deadlines) from a task list within Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hin1"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hin1"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hin1"
        },
        "content": "    private String[] arguments;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hin1"
        },
        "content": "    private Task taskToDelete;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hin1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * Constructor for an DeleteCommand object that contains a task to be deleted"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * from the task list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hin1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @param arguments number of the task in the list to be deleted."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hin1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hin1"
        },
        "content": "    public DeleteCommand(String[] arguments) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hin1"
        },
        "content": "        this.arguments \u003d arguments;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hin1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * Executes the command to delete the identified task from"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * the arguments from the list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hin1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @param tasks list of tasks to delete the task from"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @param ui user interface to give response to the user"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @param storage storage to save or load list of tasks externally"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hin1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hin1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hin1"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hin1"
        },
        "content": "        if (arguments.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hin1"
        },
        "content": "            throw new DukeException(\"Task number not specified.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hin1"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hin1"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hin1"
        },
        "content": "                taskToDelete \u003d tasks.getTask(Integer.parseInt(arguments[0]) - 1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hin1"
        },
        "content": "                tasks.delete(taskToDelete);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hin1"
        },
        "content": "                ui.print(\"Noted. I\u0027ve removed this task:\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hin1"
        },
        "content": "                        + \"  \" + taskToDelete.toString()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hin1"
        },
        "content": "                        + \"\\nNow you have \" + tasks.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hin1"
        },
        "content": "                storage.save(tasks);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hin1"
        },
        "content": "            } catch (IndexOutOfBoundsException e1) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hin1"
        },
        "content": "                throw new DukeException(\"Task number is out of bounds.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hin1"
        },
        "content": "            } catch (IOException e2) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hin1"
        },
        "content": "                throw new DukeException(\"Invalid file to save into!\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hin1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hin1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hin1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * Returns true if the command is a ByeCommand object."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hin1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @return false since command is not ByeCommand"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hin1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hin1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hin1"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hin1"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hin1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hin1": 61
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hin1"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hin1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hin1"
        },
        "content": " * A command that marks tasks (todos, events and deadlines) as done in a task list within Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hin1"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hin1"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hin1"
        },
        "content": "    private Task taskDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hin1"
        },
        "content": "    private String[] arguments;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hin1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * Constructor for an DoneCommand object that contains a task to be marked as done."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hin1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @param arguments number of the task in the list to be marked as done"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hin1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hin1"
        },
        "content": "    public DoneCommand(String[] arguments) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hin1"
        },
        "content": "        this.arguments \u003d arguments;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hin1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * Executes the command to mark the identified task from the task list as done."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hin1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @param tasks list of tasks as reference and to mark the task in question as done"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @param ui user interface to give response to the user"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @param storage storage to save or load list of tasks externally"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hin1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hin1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hin1"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hin1"
        },
        "content": "        if (arguments.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hin1"
        },
        "content": "            throw new DukeException(\"Task number not specified.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hin1"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hin1"
        },
        "content": "            taskDone \u003d tasks.getTask(Integer.parseInt(arguments[0]) - 1);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hin1"
        },
        "content": "            taskDone.markAsDone();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hin1"
        },
        "content": "            ui.print(\"Nice! I\u0027ve marked this task as done:\\n\" + \"  \" + taskDone.toString());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hin1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hin1"
        },
        "content": "        //Save"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hin1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hin1"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hin1"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hin1"
        },
        "content": "            throw new DukeException(\"Invalid file to save into!\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hin1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hin1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * Returns true if the command is a ByeCommand object."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hin1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @return false since command is not ByeCommand"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hin1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hin1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hin1"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hin1"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hin1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hin1": 55
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hin1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hin1"
        },
        "content": " * Main interface which controls the flow of Duke\u0027s operations."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hin1"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hin1"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hin1"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hin1"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hin1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * Constructor for a Duke object which prepares the setup such as"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * the user interface, loading up or creating a new task list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hin1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @param filePath file as a string to read an existing task list from"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hin1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hin1"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hin1"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hin1"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hin1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hin1"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hin1"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hin1"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hin1"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hin1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hin1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * Runs the Duke interface of receiving inputs from the user, parsing them,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * and executing the relevant commands with respect to the task list, and"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * responding to the user about the outcome."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hin1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hin1"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hin1"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hin1"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hin1"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hin1"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hin1"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hin1"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hin1"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hin1"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hin1"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hin1"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hin1"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hin1"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hin1"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hin1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hin1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hin1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * Main program to call the relevant functions for Duke to function"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hin1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @param args command line arguments (not used in this case)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hin1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hin1"
        },
        "content": "        new Duke(\"/Users/seanchan/duke/data/duke.txt\").run();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hin1": 55,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hin1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hin1"
        },
        "content": " * The main Exception class that will be used to detect errors and circumvent them within Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hin1"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hin1"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hin1"
        },
        "content": "    private String message \u003d \"\\u2639 \" + \"OOPS!!! \";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hin1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * Constructor for a DukeException object that contains a relevant"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * error message for a particular situation."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hin1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @param errorMessage message that contains the error."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hin1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hin1"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hin1"
        },
        "content": "        message +\u003d errorMessage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hin1"
        },
        "content": "        //exceptionReply.setContent(\"\\u2639 \" + \"OOPS!!! \" + errorMessage);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hin1"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hin1"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hin1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hin1": 23
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hin1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hin1"
        },
        "content": " *  Represents a type of Task that includes additional information"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hin1"
        },
        "content": " *  which is date and time when the particular task is to be done"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hin1"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hin1"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hin1"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hin1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * Constructor for an Event object which contains the event description"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * and date and time that it is on."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hin1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @param at"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hin1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hin1"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hin1"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hin1"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hin1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * Returns the date and time that the event is on."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hin1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @return date and time of the event"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hin1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hin1"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hin1"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hin1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * Represents the details of the event as a string (status, description, date and time)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hin1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @return event details as a string"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hin1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hin1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hin1"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hin1"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hin1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hin1": 39
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hin1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hin1"
        },
        "content": " * A command that finds tasks (todos, events and deadlines) from a task list within Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hin1"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hin1"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hin1"
        },
        "content": "    String wordsToFind;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hin1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * Constructor for an FindCommand object that contains a key string to"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * to search for in the task list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hin1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @param arguments keywords to search for within the task list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hin1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hin1"
        },
        "content": "    public FindCommand(String[] arguments) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hin1"
        },
        "content": "        if (arguments.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hin1"
        },
        "content": "            throw new DukeException(\"Keyword not specified.\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hin1"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hin1"
        },
        "content": "            wordsToFind \u003d String.join(\" \", arguments);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hin1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hin1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * Executes the command to search for the task in relevance"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * to the key string given."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hin1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @param tasks list of tasks to search from"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @param ui user interface to give response to the user"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @param storage storage to save or load list of tasks externally"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hin1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hin1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hin1"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hin1"
        },
        "content": "        TaskList tasksFound \u003d new TaskList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hin1"
        },
        "content": "        for (Task t : tasks.getList()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hin1"
        },
        "content": "            String desc \u003d t.getDescription();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hin1"
        },
        "content": "            if (desc.contains(wordsToFind)) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hin1"
        },
        "content": "                tasksFound.add(t);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hin1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hin1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hin1"
        },
        "content": "        ui.print(\"Here are the matching tasks in your list:\\n\" + tasksFound.getListAsString());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hin1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * Returns true if the command is a ByeCommand object."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hin1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @return false since command is not ByeCommand"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hin1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hin1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hin1"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hin1"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hin1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hin1": 52
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hin1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hin1"
        },
        "content": " * A command that list all tasks (todos, events and deadlines) from a task list within Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hin1"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hin1"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hin1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * Executes the command to list all tasks in the task list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hin1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @param tasks list of tasks as reference or to change"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @param ui user interface to give response to the user"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @param storage storage to save or load list of tasks externally"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hin1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hin1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hin1"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hin1"
        },
        "content": "        String tasksAsString \u003d tasks.getListAsString();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hin1"
        },
        "content": "        ui.print(\"Here are the tasks in your list:\\n\" + tasksAsString);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hin1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * Returns true if the command is a ByeCommand object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hin1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @return false since command is not ByeCommand"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hin1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hin1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hin1"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hin1"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hin1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hin1": 29
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hin1"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hin1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hin1"
        },
        "content": " * Represents the intermediary that parses input from the user into system understood commands."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hin1"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hin1"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hin1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * Returns the proper command that has been given by the user along with the relevant"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * arguments."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hin1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @param commandString input from the user"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @return command that is interpreted"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hin1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hin1"
        },
        "content": "     public static Command parse(String commandString) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hin1"
        },
        "content": "            String[] inst \u003d commandString.split(\" \");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hin1"
        },
        "content": "            String command \u003d inst[0];"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hin1"
        },
        "content": "            String[] arguments \u003d Arrays.copyOfRange(inst,1,inst.length);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hin1"
        },
        "content": "            if (command.startsWith(\"todo\") || command.startsWith(\"event\") || command.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hin1"
        },
        "content": "                return new AddCommand(command, arguments);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hin1"
        },
        "content": "            } else if (command.startsWith(\"list\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hin1"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hin1"
        },
        "content": "            } else if (command.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hin1"
        },
        "content": "                return new DeleteCommand(arguments);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hin1"
        },
        "content": "            } else if (command.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hin1"
        },
        "content": "                return new DoneCommand(arguments);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hin1"
        },
        "content": "            } else if (command.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hin1"
        },
        "content": "                return new FindCommand(arguments);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hin1"
        },
        "content": "            } else if (command.startsWith(\"bye\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hin1"
        },
        "content": "                return new ByeCommand();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hin1"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hin1"
        },
        "content": "                throw new DukeException(\"Invalid command\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hin1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hin1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hin1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hin1": 38
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hin1"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hin1"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hin1"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hin1"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hin1"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hin1"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hin1"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hin1"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hin1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hin1"
        },
        "content": " * Storage that helps to manage the task list externally in a text file."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hin1"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hin1"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hin1"
        },
        "content": "    private String file;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hin1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * Constructor for a Storage object which contains a filepath to a text file."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hin1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @param filepath"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hin1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hin1"
        },
        "content": "    public Storage(String filepath)  {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hin1"
        },
        "content": "        file \u003d filepath;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hin1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * Returns a List of Task objects loaded and interpreted from"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * an external text file."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hin1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @return List of Task objects representing the task list"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hin1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hin1"
        },
        "content": "    public List\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hin1"
        },
        "content": "        List\u003cTask\u003e tasklist \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hin1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hin1"
        },
        "content": "            File f \u003d new File(file);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hin1"
        },
        "content": "            Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hin1"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hin1"
        },
        "content": "                String task \u003d s.nextLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hin1"
        },
        "content": "                String[] taskArray \u003d task.split(\" \\\\| \");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hin1"
        },
        "content": "                Task newTask \u003d null;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hin1"
        },
        "content": "                switch (taskArray[0]) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hin1"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hin1"
        },
        "content": "                        newTask \u003d new ToDo(taskArray[taskArray.length - 1]);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hin1"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hin1"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hin1"
        },
        "content": "                        newTask \u003d new Deadline(taskArray[taskArray.length - 2], taskArray[taskArray.length - 1]);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hin1"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hin1"
        },
        "content": "                    case \"E\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hin1"
        },
        "content": "                        newTask \u003d new Event(taskArray[taskArray.length - 2], taskArray[taskArray.length - 1]);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hin1"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hin1"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hin1"
        },
        "content": "                        throw new DukeException(\"Invalid task type\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hin1"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hin1"
        },
        "content": "                //Check if task is done"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hin1"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hin1"
        },
        "content": "                    if (taskArray[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hin1"
        },
        "content": "                        newTask.markAsDone();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hin1"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hin1"
        },
        "content": "                } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hin1"
        },
        "content": "                    throw new DukeException(\"No indicator of whether task is done.\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hin1"
        },
        "content": "                }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hin1"
        },
        "content": "                tasklist.add(newTask);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hin1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hin1"
        },
        "content": "            return tasklist;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hin1"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hin1"
        },
        "content": "            throw new DukeException(\"File not found! Try again!\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hin1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hin1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * Saves the task list from Duke into the external text file"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * upon completion of each command."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hin1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @param tasklist list of tasks to save"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hin1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hin1"
        },
        "content": "    public void save(TaskList tasklist) throws IOException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hin1"
        },
        "content": "        FileWriter fw \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hin1"
        },
        "content": "        for (Task t: tasklist.getList()) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hin1"
        },
        "content": "            String[] lineArray \u003d new String[4];"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hin1"
        },
        "content": "            //Check type of task"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hin1"
        },
        "content": "            if (t instanceof ToDo) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hin1"
        },
        "content": "                lineArray[0] \u003d \"T\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hin1"
        },
        "content": "            } else if (t instanceof Deadline) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hin1"
        },
        "content": "                lineArray[0] \u003d \"D\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hin1"
        },
        "content": "                lineArray[3] \u003d ((Deadline) t).getBy();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hin1"
        },
        "content": "            } else if (t instanceof Event) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hin1"
        },
        "content": "                lineArray[0] \u003d \"E\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hin1"
        },
        "content": "                lineArray[3] \u003d ((Event) t).getAt();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hin1"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hin1"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hin1"
        },
        "content": "                    throw new DukeException(\"Invalid Task: \" + t.getDescription());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hin1"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hin1"
        },
        "content": "                    e.printStackTrace();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hin1"
        },
        "content": "                }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hin1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hin1"
        },
        "content": "            //Check if task is done"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hin1"
        },
        "content": "            if (t.getStatusIcon().equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hin1"
        },
        "content": "                lineArray[1] \u003d \"1\";"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hin1"
        },
        "content": "            } else if (t.getStatusIcon().equals(\"\\u2718\")) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hin1"
        },
        "content": "                lineArray[1] \u003d \"0\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hin1"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hin1"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hin1"
        },
        "content": "                    throw new DukeException(\"Invalid status of task: \" + t.getDescription());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hin1"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hin1"
        },
        "content": "                    e.printStackTrace();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hin1"
        },
        "content": "                }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hin1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hin1"
        },
        "content": "            //Check description"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hin1"
        },
        "content": "            lineArray[2] \u003d t.getDescription();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hin1"
        },
        "content": "            //Combine"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hin1"
        },
        "content": "            if (lineArray[3] \u003d\u003d null) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hin1"
        },
        "content": "                lineArray \u003d Arrays.copyOfRange(lineArray, 0, 3);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hin1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "hin1"
        },
        "content": "            String line \u003d String.join(\" | \",lineArray);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "hin1"
        },
        "content": "            fw.write(line);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hin1"
        },
        "content": "            fw.write(System.lineSeparator());"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "hin1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "hin1"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "hin1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hin1": 135
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hin1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hin1"
        },
        "content": " * A task that can be marked as done and has a short description."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hin1"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hin1"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hin1"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hin1"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hin1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * Constructor for a Task object that has a short description."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hin1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hin1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hin1"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hin1"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hin1"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hin1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * Gets the description of the particular task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hin1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @return description of task"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hin1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hin1"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hin1"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hin1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * Returns the status of the task, whether its done or not"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hin1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @return tick if its done, cross if its not"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hin1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hin1"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hin1"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hin1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * Represents the details of the task as a string (status, description)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hin1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @return task details as a string"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hin1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hin1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hin1"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hin1"
        },
        "content": "        String checkbox \u003d \"[\" + this.getStatusIcon() + \"]\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hin1"
        },
        "content": "        return (checkbox + \" \" + description);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hin1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hin1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hin1"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hin1"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hin1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hin1": 53
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hin1"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hin1"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hin1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hin1"
        },
        "content": " * Represents a list of tasks."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hin1"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hin1"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hin1"
        },
        "content": "    private List\u003cTask\u003e list;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hin1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * Constructor for a TaskList object that is represented by a new empty ArrayList of Tasks."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hin1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hin1"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hin1"
        },
        "content": "        list \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hin1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * Constructor for a TaskList object that is represented by an existing ArrayList of Tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hin1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @param tasklist list of tasks to be represented."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hin1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hin1"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasklist) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hin1"
        },
        "content": "        list \u003d tasklist;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hin1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * Get the list of tasks as a List\u003cTask\u003e."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hin1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @return List\u003cTask\u003e representing the list of tasks."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hin1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hin1"
        },
        "content": "    public List\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hin1"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hin1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * Checks number of tasks in the list."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hin1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @return number of tasks in the list in total."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hin1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hin1"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hin1"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hin1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * Represent the list as a few lines of strings,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * each representing a task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hin1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @return String that represents the details of all tasks."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hin1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hin1"
        },
        "content": "    public String getListAsString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hin1"
        },
        "content": "        String listString \u003d \"\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hin1"
        },
        "content": "        for (int i \u003d 0; i \u003c getSize(); i++) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hin1"
        },
        "content": "            Task t \u003d list.get(i);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hin1"
        },
        "content": "            String taskWithStatus \u003d t.toString();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hin1"
        },
        "content": "            if (i \u003d\u003d (getSize() - 1)) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hin1"
        },
        "content": "                listString +\u003d ((i+1) + \".\" + taskWithStatus);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hin1"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hin1"
        },
        "content": "                listString +\u003d ((i+1) + \".\" + taskWithStatus + \"\\n\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hin1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hin1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hin1"
        },
        "content": "        return listString;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hin1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * Get an individual task indicated at a particular index"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hin1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @param index index that the task to be retrieved is at"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @return Task object that has been identified"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hin1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hin1"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hin1"
        },
        "content": "        return list.get(index);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hin1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * Appends a Task object into the task list."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hin1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @param t Task to be added."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hin1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hin1"
        },
        "content": "    public void add(Task t) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hin1"
        },
        "content": "        list.add(t);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hin1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * Deletes a Task object from the task list."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hin1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @param t Task to be deleted."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hin1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hin1"
        },
        "content": "    public void delete(Task t) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hin1"
        },
        "content": "        list.remove(t);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hin1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hin1": 93
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hin1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hin1"
        },
        "content": " * Represents a type of Task which only has description."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hin1"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hin1"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hin1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * Constructor for a ToDo object which contains the task description"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hin1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @param description description of the todo task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hin1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hin1"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hin1"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hin1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * Represents the details of the todo as a string (status, description)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hin1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @return todo details as a string"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hin1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hin1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hin1"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hin1"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hin1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hin1": 24
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hin1"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hin1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hin1"
        },
        "content": " * Represents the user interface that the user inputs and receives responses from Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hin1"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hin1"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hin1"
        },
        "content": "    private Scanner input;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hin1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * Constructor for a Ui object that creates a Scanner object for the user to type input."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hin1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hin1"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hin1"
        },
        "content": "        input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hin1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * Creates a line which is the top/bottom wrapper for the response message from Duke."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hin1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hin1"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hin1"
        },
        "content": "        String wrap \u003d \"-\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hin1"
        },
        "content": "        String wrapper \u003d \"\\t\" + wrap.repeat(100);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hin1"
        },
        "content": "        System.out.println(wrapper);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hin1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * Prints a response message from Duke."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hin1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @param message the response message to be printed."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hin1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hin1"
        },
        "content": "    public void print(String message) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hin1"
        },
        "content": "        String[] content \u003d message.split(\"\\\\r?\\\\n\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hin1"
        },
        "content": "        for (String s : content) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hin1"
        },
        "content": "            System.out.println(\"\\t\" + s);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hin1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hin1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * Gets the user inputted command to be parsed."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hin1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @return command as a user input"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hin1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hin1"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hin1"
        },
        "content": "        return input.nextLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hin1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * Shows the introduction of Duke."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hin1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hin1"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hin1"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hin1"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hin1"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hin1"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hin1"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hin1"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hin1"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hin1"
        },
        "content": "        print(\"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hin1"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hin1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * Shows error message when the list of tasks cannot be loaded"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * from the external file."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hin1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hin1"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hin1"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hin1"
        },
        "content": "        print(\"Lists of tasks cannot be properly loaded.\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hin1"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hin1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * Shows an error message when there is error in Duke."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hin1"
        },
        "content": "     * @param errorMsg error message to be printed"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hin1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hin1"
        },
        "content": "    public void showError(String errorMsg) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hin1"
        },
        "content": "        print(errorMsg);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hin1"
        },
        "content": "}"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "hin1": 83
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hin1"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hin1"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hin1"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hin1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hin1"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hin1"
        },
        "content": "        assertEquals(\"[D][\\u2718] work1 (by: 22nd of January 2019, 8.23pm)\", new Deadline(\"work1\", \"22/1/2019 2023\").toString());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hin1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hin1"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hin1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hin1": 11
    }
  }
]

[
  {
    "path": "src/main/java/Day.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "/** Day class */"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "public class Day {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * Present the day in ordinal numbers"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @return a string that presented in ordinal numbers"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * e.g. thirty-first refers to 31st"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public static String pickDay(int day) throws DukeException{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            if (day\u003e31||day\u003c\u003d0) {throw new DukeException(\"Invalid Date.\");}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            switch (day%10) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                case 1: return day+\"st\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                case 2: return day+\"nd\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                case 3: return day+\"rd\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                default: return day+\"th\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VirginiaYu": 24
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": " * Represent a type of task which must"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": " * be done before a fixed time point"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    private int day;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    private int month;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    private int year;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    private int hour;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    private int minute;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * Constructor of Deadline class"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @param description the description of the task"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @param byTime time point before which the task must be done"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public Deadline(String description, String byTime) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        super(description); // Call constructor of super class"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        // Split the time info which contains day, month, year, and due time"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        String Date \u003d byTime.split(\" \")[0];"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        this.day \u003d Integer.parseInt(Date.split(\"/\")[0]);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        this.month \u003d Integer.parseInt(Date.split(\"/\")[1]);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        this.year \u003d Integer.parseInt(Date.split(\"/\")[2]);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        String Time \u003d byTime.split(\" \")[1];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        this.hour \u003d Integer.parseInt(Time.substring(0,2));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        this.minute \u003d Integer.parseInt(Time.substring(2,4));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        // Generate human understandable description of due time as its byTime string"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        this.by \u003d Day.pickDay(day)+ \" of \" + Month.returnMonth(month) + \" \"+ this.year + \", \" + convertTime();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * Override method"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * Returns a descriptive string"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @return a string that would be printed out in UI"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * [D] task description (by: some time point in good format)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * Override method"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * Returns an output record"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @return a string that would be written into file"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * D | 1 or 0 | task description | some time point in clean format)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public String toTxtFile() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        String isDoneInt \u003d this.isDone? \"1\" : \"0\"; // Retrieve Done status"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        String Minute \u003d String.valueOf(this.minute);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        if (this.minute\u003c10) Minute \u003d \"0\"+ Minute; // e.g. 12:08 cannot be stored into 12:8"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        String Hour \u003d String.valueOf(this.hour);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        if (this.hour\u003c10) Hour \u003d \"0\"+ Hour; // e.g. stored as 09:34 rather than 9:34 for integrity and re-read from txt file"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        String strTime \u003d this.day+\"/\"+this.month+\"/\"+this.year+\" \"+ Hour +Minute;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        return \"D | \" + isDoneInt + \" | \" + this.description + \" | \" + strTime;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * Present the due hour in AM/PM format"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @return a string that present due hour in 12-hour format, using AM/PM"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * e.g. 14:30 is 2:30PM"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public String convertTime() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        String DeadlineTime;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        if (this.hour\u003e11) { // time after noon"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            if (this.minute\u003d\u003d0) DeadlineTime \u003d (this.hour-12) + \"PM\"; // e.g. 9:00PM simply writes as 9PM"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            else if (this.minute\u003c10) DeadlineTime \u003d (this.hour-12) + \":0\" + this.minute + \"PM\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            else DeadlineTime \u003d (this.hour-12) + \":\" + this.minute+ \"PM\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        } else { // time before noon"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            if (this.minute\u003d\u003d0) DeadlineTime \u003d this.hour + \"AM\";      // e.g. 9:00AM simply writes as 9AM"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            else if (this.minute\u003c10) DeadlineTime \u003d this.hour + \":0\" + this.minute + \"AM\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            else DeadlineTime \u003d this.hour + \":\" + this.minute + \"AM\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        return DeadlineTime;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VirginiaYu": 88
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": " * main class of duke project"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * Initialize duke project"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @param filePath file path"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public Duke(String filePath) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        try { tasks \u003d new TaskList(storage.load()); }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        catch (DukeException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            ui.showLoadingError(e);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            ArrayList\u003cTask\u003e arrList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            tasks \u003d new TaskList(arrList);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /** run duke **/"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        Parser parser \u003d new Parser(ui, tasks, storage);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        parser.process();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /** main **/"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public static void main(String[] args){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        new Duke(\"/Users/yu/duke.txt\").run();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "VirginiaYu": 40
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import java.util.InputMismatchException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": " * Exception Class of duke project"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "public class DukeException extends InputMismatchException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /** Constructor"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @param message error message"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        // Call constructor of parent Exception"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VirginiaYu": 17
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": " * Represent a type of task which will"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": " * happen during a scheduled time period"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    private int day;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    private int month;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    private int year;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    private int startHour;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    private int startMin;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    private int endHour;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    private int endMin;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * Constructor of Event Class"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @param description the description of the task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @param atTime time period during which the task will happen"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public Event(String description, String atTime) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        super(description); // Call constructor of super class"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        // Split the time info which contains day, month, year, and event time"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        String Date \u003d atTime.split(\" \")[0];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        this.day \u003d Integer.parseInt(Date.split(\"/\")[0]);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        this.month \u003d Integer.parseInt(Date.split(\"/\")[1]);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        this.year \u003d Integer.parseInt(Date.split(\"/\")[2]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        String Time \u003d atTime.split(\" \")[1];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        this.startHour \u003d Integer.parseInt(Time.substring(0,2));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        this.startMin \u003d Integer.parseInt(Time.substring(2,4));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        this.endHour \u003d Integer.parseInt(Time.substring(5,7));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        this.endMin \u003d Integer.parseInt(Time.substring(7,9));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        // Generate human understandable description of due time as its atTime string"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        this.at \u003d Day.pickDay(day)+ \" of \" + Month.returnMonth(month) + \" \" + this.year + \", \" + convertTime();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * Override method"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * Returns a descriptive string"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @return a string that would be printed out in UI"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * [E] task description (at: some time period in good format)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * Override method"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * Returns an output record"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @return a string that would be written into file"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * E | 1 or 0 | task description | event time period in clean format)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public String toTxtFile() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        String isDoneInt \u003d this.isDone? \"1\" : \"0\"; // Retrieve Done status"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        String startMinute \u003d String.valueOf(this.startMin);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        if (this.startMin\u003c10) startMinute \u003d \"0\"+ startMinute;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        String endMinute \u003d String.valueOf(this.endMin);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        if (this.endMin\u003c10) endMinute \u003d \"0\"+ endMinute;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        String startHr \u003d String.valueOf(this.startHour);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        String endHr \u003d String.valueOf(this.endHour);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        if (this.startHour\u003c10) startHr \u003d \"0\"+ startHr;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        if (this.endHour\u003c10) endHr \u003d \"0\" + endHr;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        String strTime \u003d this.day+\"/\"+this.month+\"/\"+this.year+\" \"+ startHr + startMinute + \"-\" + endHr + endMinute;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        return \"E | \" + isDoneInt + \" | \" + this.description + \" | \" + strTime;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * Present the event time in AM/PM format"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @return a string that present event begin and end hour in 12-hour format, using AM/PM"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * e.g. 14:30-16:30 is 2:30-4:30PM"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     *      09:30-13:00 is 9:30AM-1:00PM"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public String convertTime() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        String endTime;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        String Time;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        boolean am; // true if the time is before noon, false otherwise."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        if (this.startHour\u003e11) am \u003d false;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        else am \u003d true;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        String startMinute \u003d String.valueOf(this.startMin);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        if (this.startMin\u003c10) startMinute \u003d \"0\"+startMinute;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        String endMinute \u003d String.valueOf(this.endMin);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        if (this.endMin\u003c10) endMinute \u003d \"0\"+endMinute;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        if (this.endHour\u003e11) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            endTime \u003d (this.endHour-12) + \":\" + endMinute + \"PM\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            Time \u003d am? (this.startHour + \":\" + startMinute+\"AM-\"+endTime):((this.startHour-12) + \":\" + startMinute +\"-\"+endTime);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            endTime \u003d this.endHour + \":\" + endMinute + \"AM\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            Time \u003d am? (this.startHour + \":\" + startMinute +\"-\"+endTime):((this.startHour-12) + \":\" + startMinute +\"PM-\"+endTime);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        return Time;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VirginiaYu": 108
    }
  },
  {
    "path": "src/main/java/Month.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": " * a class presenting Month"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "public enum Month {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    January, February, March, April, May, June, July, August, September, October, November, December;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * find month word corresponding to number 1-12"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @return month"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public static String returnMonth(int index){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        switch (index){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            case 1: return \"January\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            case 2: return \"February\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            case 3: return \"March\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            case 4: return \"April\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            case 5: return \"May\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            case 6: return \"June\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            case 7: return \"July\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            case 8: return \"August\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            case 9: return \"September\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            case 10: return \"October\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            case 11: return \"November\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            case 12: return \"December\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            default: return \"\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VirginiaYu": 28
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": " * a class dealing with the user input"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": " * and convert it into separate useful info"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": " * for later use"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    private TaskList list;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * Constructor of Parser class"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @param temp1 ui"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @param temp2 task list"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @param temp3 storage"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public Parser(Ui temp1, TaskList temp2, Storage temp3) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        this.ui \u003d temp1;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        this.list \u003d temp2;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        this.storage \u003d temp3;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * process user input"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public void process() throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                String value \u003d ui.askForInput();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                // Exit"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                if (value.startsWith(\"bye\")) { ui.byeMsg(); System.exit(0); }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                // List"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                else if (value.startsWith(\"list\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                    // If no task in the list"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                    if (list.getTask().size()\u003d\u003d0) System.out.println(\"No task in your list!\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                    // List all tasks in the list w/ their status"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                    else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                        ui.listMsg();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                        for(int i \u003d 0; i \u003c list.getTask().size(); i++) { System.out.println((i+1)+\".\"+list.getTask().get(i).toString()); }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                // Find"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                else if (value.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                        String regex \u003d checkItem(\"find\", value);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                        Pattern pattern \u003d Pattern.compile(regex);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                        if (list.getTask().size()\u003d\u003d0) System.out.println(\"No task in list. No matching.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                        else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                            ui.findMsg();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                            int cnt \u003d 0;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                            for(int i \u003d 0; i \u003c list.getTask().size(); i++) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                                String strToBeMatched \u003d list.getTask().get(i).description;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                                Matcher matcher \u003d pattern.matcher(strToBeMatched);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                                if (matcher.find()) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                                    cnt++;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                                    System.out.println(cnt+\".\"+list.getTask().get(i).toString());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                    } catch (DukeException e) { System.out.println(e.getMessage()); }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                // Mark as Done"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                else if (value.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                        String doneInfo \u003d checkItem(\"done\", value);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                        int index \u003d Integer.parseInt(doneInfo) - 1;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                        if (index \u003c 0 | index \u003e\u003d list.getTask().size()) System.out.println(\"Sorry. Index invalid.\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                        else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                            String description \u003d list.getTask().get(index).markAsDone();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                            ui.doneTaskMsg(description);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                            storage.writeTaskArrayIntoTxtFile(list); // Update txt file"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                    } catch (IOException ex) { System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                    } catch (DukeException ex){ System.out.println(ex.getMessage()); }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                // Delete"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                else if (value.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                        String delInfo \u003d checkItem(\"delete\", value);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                        int index \u003d Integer.parseInt(delInfo) - 1;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                        if (index \u003c 0 | index \u003e\u003d list.getTask().size()) System.out.println(\"Sorry. Index invalid.\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                        else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                            String description \u003d list.getTask().get(index).toString();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                            int size \u003d list.getTask().size() - 1;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                            list.removeTask(index); // Remove the task"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                            ui.deleteMsg(description, size); // Print out Msg"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                            storage.writeTaskArrayIntoTxtFile(list); // Update txt file"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                    } catch (IOException ex) { System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                    } catch (DukeException ex){ System.out.println(ex.getMessage()); }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                // Add todos"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                else if (value.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                        // Check if the right format"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                        String todoInfo \u003d checkItem(\"todo\", value);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                        // Add the task into the list"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                        Todo todo \u003d new Todo(todoInfo);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                        list.addTask(todo);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                        // Print out Msg"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                        ui.addTaskMsg(todo.toString(), list.getTask().size());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                        // Update txt file"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                        storage.writeTaskArrayIntoTxtFile(list);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                    } catch (IOException ex) { System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                    } catch (DukeException ex) { System.out.println(ex.getMessage()); }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                // Add deadlines"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                else if (value.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                        // Check if the right format"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                        String ddlInfo \u003d checkItem(\"deadline\", value);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                        // Split the input, and get the deadline and the ddl data/time"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                        String ddl \u003d ddlInfo.split(\" /by \")[0];"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                        String by \u003d ddlInfo.split(\" /by \")[1];"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                        // Add the task into the list"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                        Deadline deadline \u003d new Deadline(ddl,by);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                        list.addTask(deadline);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                        // Print out the info of the task"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                        ui.addTaskMsg(deadline.toString(),list.getTask().size());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                        // Update txt file"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                        storage.writeTaskArrayIntoTxtFile(list);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                    } catch (IOException ex) { System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                    } catch (DukeException ex) { System.out.println(ex.getMessage()); }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                // Add events"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                else if (value.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                        // Check if the right format"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                        String eventInfo \u003d checkItem(\"event\", value);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                        // Split the input, and get the event and the event data/time"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                        String ev \u003d eventInfo.split(\" /at \")[0];"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                        String at \u003d eventInfo.split(\" /at \")[1];"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                        // Add the task into the list"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                        Event event \u003d new Event(ev, at);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                        list.addTask(event);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                        // Print out the info of the task"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                        ui.addTaskMsg(event.toString(),list.getTask().size());"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                        // Update txt file"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                        storage.writeTaskArrayIntoTxtFile(list);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                    } catch (DukeException ex) { System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                    } catch (IOException ex) { System.out.println(ex.getMessage()); }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                else throw new DukeException(\"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            } catch (DukeException e) { System.out.println(e.getMessage()); }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * Check whether user input is in the right format"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * by using regular expression to match the pattern"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @param type the type of command"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @param input user input"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @return semi-processed information"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public static String checkItem(String type, String input) throws DukeException {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        if (type.equals(\"event\")) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            String pattern \u003d \"event ([a-zA-Z0-9_\\\\s]+) /at (\\\\d{1,2}/\\\\d{1,2}/\\\\d{4}) [012][0-9][0-6][0-9]-[012][0-9][0-6][0-9]\";"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            if (!Pattern.matches(pattern, input))"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                throw new DukeException(\"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\nTry to follow the format as \\\"event some_task /at 28/08/2019 0945-1350\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            return input.substring(6);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        else if (type.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            String pattern \u003d \"deadline ([a-zA-Z0-9_\\\\s]+) /by (\\\\d{1,2}/\\\\d{1,2}/\\\\d{4}) [012][0-9][0-6][0-9]\";"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            if (!Pattern.matches(pattern, input))"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                throw new DukeException(\"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\nPlease follow the format as \\\"deadline some_task /by 28/08/2019 2100\\\"\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            return input.substring(9);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        else if (type.equals(\"todo\")) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            String pattern \u003d \"todo ([a-zA-Z0-9_\\\\s]+)\";"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            if (!Pattern.matches(pattern, input))"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                throw new DukeException(\"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\nPlease follow the format as \\\"todo some_task\\\"\");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            return input.substring(5);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        else if (type.equals(\"done\")) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            String pattern \u003d \"done ([0-9]+)\";"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            if (!Pattern.matches(pattern, input))"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                throw new DukeException(\"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\nPlease follow the format as \\\"done some_number\\\"\");"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            return input.substring(5);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        else if (type.equals(\"delete\")) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            String pattern \u003d \"delete ([0-9]+)\";"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            if (!Pattern.matches(pattern, input))"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                throw new DukeException(\"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\nPlease follow the format as \\\"delete some_number\\\"\");"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            return input.substring(7);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        else if (type.equals(\"find\")){"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            String pattern \u003d \"find ([a-zA-Z0-9_\\\\s]+)\";"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            if (!Pattern.matches(pattern, input))"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                throw new DukeException(\"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\nPlease follow the format as \\\"find some_description\\\".\");"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            return input.substring(5);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        else"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VirginiaYu": 215
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": " * implement a class that can"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": " * read the task list from existing txt file"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": " * and output/write updated task list to file"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @param file file path"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public Storage(String file) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        this.filePath \u003d file;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * set file path"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @param newFilePath new file path"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    private void setFilePath(String newFilePath) { this.filePath \u003d newFilePath; }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * load data from txt file"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @return a task list that contains info reading from txt file"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        // Create a new task array"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        ArrayList\u003cTask\u003e taskArray \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            if (file.isFile() \u0026\u0026 file.exists()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                InputStreamReader reader \u003d new InputStreamReader(new FileInputStream(file));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                BufferedReader bufferedReader \u003d new BufferedReader(reader);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                String lineTxt \u003d null;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                while ((lineTxt \u003d bufferedReader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                    String[] storeInfo \u003d lineTxt.split(\" \\\\| \");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                    // Write the tasks into array"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                    switch (storeInfo[0]) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                        case \"E\": // Events"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                            taskArray.add(new Event(storeInfo[2], storeInfo[3]));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                            if (storeInfo[1].equals(\"1\")) taskArray.get(taskArray.size()-1).isDone\u003dtrue;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                        case \"T\":  // Todos"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                            taskArray.add(new Todo(storeInfo[2]));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                            if (storeInfo[1].equals(\"1\")) taskArray.get(taskArray.size()-1).isDone\u003dtrue;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                        case \"D\": // Deadlines"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                            taskArray.add(new Deadline(storeInfo[2], storeInfo[3]));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                            if (storeInfo[1].equals(\"1\")) taskArray.get(taskArray.size()-1).isDone\u003dtrue;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                        default: break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                bufferedReader.close();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                reader.close();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                throw new DukeException(\"Sorry I cannot find output file. So I have created one for you! :)\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        } catch (IOException ex){ System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        } catch (DukeException ex) { System.out.println(ex.getMessage()); }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        return taskArray;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * write task array into txt file"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @param taskArray task list"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public void writeTaskArrayIntoTxtFile(TaskList taskArray) throws IOException {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        String filepath \u003d this.filePath;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        File file \u003d new File(filepath);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        // File not exist"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            } catch (IOException e) { System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            } catch (DukeException e) { System.out.println(e.getMessage()); }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        BufferedWriter out \u003d new BufferedWriter(new FileWriter(file));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            if (taskArray.getTask().size()!\u003d0)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                for(int i \u003d 0; i \u003c taskArray.getTask().size(); i++) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                    out.write(taskArray.getTask().get(i).toTxtFile()+\"\\n\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            out.flush();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            out.close();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        } catch (IOException e){ System.out.println(e.getMessage()); }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VirginiaYu": 102
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": " * Represent a general task class"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": " * without specify which task it is"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": " * it could be todo, event, and deadline"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    protected String description; //task description"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    protected boolean isDone; // Done status"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * Constructor of Task class"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * initialize a task class"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * in default, set its done status as false"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @param description the description of the task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * check whether this task is done or not"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @return task done status"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * return the description of the task"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @return the description of the task"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * mark task as done"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @return a string with its done status"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public String markAsDone() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        return \"  [\\u2713] \"+this.description;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * Returns a descriptive string"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @return a string that would be printed out in UI"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        return \"[\"+this.getStatusIcon()+\"] \"+this.description;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * Returns an output record"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @return a string that would be written into file"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public String toTxtFile() { // Write to the txt file"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "}"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "VirginiaYu": 73
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": " * a collection of created tasks"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    protected ArrayList\u003cTask\u003e arrList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @param temp array list of created tasks"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e temp) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        this.arrList \u003d temp;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * get task list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @return your task list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public ArrayList\u003cTask\u003e getTask() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        return arrList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * add task list"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @param temp task"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public void addTask(Task temp) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        arrList.add(temp);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * remove task"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @param index task position/index in your task list"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public void removeTask(int index) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        arrList.remove(index);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VirginiaYu": 39
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": " * Represent a task that you are going to do"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "public class Todo extends Task{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * Constructor of Todo class"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @param description the description of the task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        super(description); // Call constructor of super class"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * Override method"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * Returns a descriptive string"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @return a string that would be printed out in UI"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * [T] task description"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * Override method"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * Returns an output record"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @return a string that would be written into file"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * T | 1 or 0 | task description"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public String toTxtFile() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        String isDoneInt \u003d this.isDone? \"1\" : \"0\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        return \"T | \" + isDoneInt + \" | \" + this.description;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VirginiaYu": 39
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": " * ui implementation"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    private String value;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    private Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * retreive user input"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @return user input as string"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public String askForInput() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        value \u003d sc.nextLine();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        return value;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * print out welcome message"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        // Greetings!"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * print out exit message"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public void byeMsg() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        System.out.println(\"Bye. See you soon again!\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * print out message after adding a new task"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * the info should include task description,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * and the number of tasks in the task list"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @param description task description"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @param size how many tasks in the task list after addition"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public void addTaskMsg(String description, int size) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \\n  \" + description);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        System.out.println(\"Now you have \" + size + \" tasks in your list.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * print out message after a task is marked as done"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @param description task description"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public void doneTaskMsg(String description) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        System.out.println(description);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * print out message after a task is deleted from the task list"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @param description task description"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @param size how many tasks in the task list after deletion"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public void deleteMsg (String description, int size) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        System.out.println(description);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        System.out.println(\"Now you have \" + size + \" tasks in your list.\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * print out message when listing all tasks in the task list"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public void listMsg() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * print out message when finding related tasks"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public void findMsg() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * print out error message while executing"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @param exception exception"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public void showLoadingError(DukeException exception) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        System.out.println(exception.getMessage());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VirginiaYu": 99
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "// Test for Deadline Class"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public void stringConversionTest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        Deadline testDDL \u003d new Deadline(\"Test Deadline\", \"31/09/2019 1630\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        assertEquals(\"[D][\\u2718] Test Deadline (by: 31st of September 2019, 4:30PM)\", testDDL.toString());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        assertEquals(\"  [\\u2713] Test Deadline\", testDDL.markAsDone());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        assertEquals(\"D | 1 | Test Deadline | 31/9/2019 1630\" , testDDL.toTxtFile());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VirginiaYu": 13
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        assertEquals(\"s\", \"s\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VirginiaYu": 9
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "// Test for Event Class"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public void stringConversionTest() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        Event testEvent \u003d new Event(\"Test Event\", \"31/09/2019 1600-1800\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        assertEquals(\"[E][\\u2718] Test Event (at: 31st of September 2019, 4:00-6:00PM)\", testEvent.toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        assertEquals(\"  [\\u2713] Test Event\", testEvent.markAsDone());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        assertEquals(\"E | 1 | Test Event | 31/9/2019 1600-1800\" , testEvent.toTxtFile());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VirginiaYu": 14
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "/** Test for Todo Class */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public void stringConversionTest(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        Todo testTodo \u003d new Todo(\"Test Todo\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        assertEquals(\"[T][\\u2718] Test Todo\", testTodo.toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        assertEquals(\"  [\\u2713] Test Todo\", testTodo.markAsDone());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        assertEquals(\"T | 1 | Test Todo\" , testTodo.toTxtFile());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VirginiaYu": 14
    }
  }
]

[
  {
    "path": "src/main/java/Deadline.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    protected LocalDateTime by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    public Deadline(String inputDescription, LocalDateTime inputBy) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        super(\u0027D\u0027, inputDescription);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        this.by \u003d inputBy;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     * return string to be display to user"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        return \"[\" + super.getTypeOfTask() + \"][\" + super.getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                + super.getDescription() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     * return the string to be inserted into the file"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    public String insertFile() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        if (super.getIsDone() \u003d\u003d true) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "            //length of description to ensure if regex character is entered, code can still run"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "            return super.getTypeOfTask() + \" | 1 | \" + super.getDescription().length() + \" | \" +  super.getDescription() + \" | \" + formatter.format(by);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "            return super.getTypeOfTask() + \" | 0 | \" + super.getDescription().length() + \" | \" +  super.getDescription() + \" | \" + formatter.format(by);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mong-nus": 39
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    private Parser parse;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    private List\u003cTask\u003e lists;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        this.storage \u003d new Storage();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        this.tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        this.parse \u003d new Parser();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        this.lists \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     * run the duke program"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        ui.startDuke();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        storage.readFile(lists, ui);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        Scanner reader \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "            String inp \u003d reader.nextLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "            parse.checkInstruction(inp, storage, ui, lists, tasks);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mong-nus": 40,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        super(\"\\u2369 OOPS!!! \" + message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mong-nus": 7
    }
  },
  {
    "path": "src/main/java/Event.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    protected LocalDateTime at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    public Event(String inputDescription, LocalDateTime inputAt) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        super(\u0027E\u0027, inputDescription);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        this.at \u003d inputAt;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     * return string to be display to user"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        return \"[\" + super.getTypeOfTask() + \"][\" + super.getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                + super.getDescription() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     * return the string to be inserted into the file"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    public String insertFile() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        if (super.getIsDone() \u003d\u003d true) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "            //length of description to ensure if regex character is entered, code can still run"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "            return super.getTypeOfTask() + \" | 1 | \" + super.getDescription().length() + \" | \" +  super.getDescription() + \" | \" + formatter.format(at);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "            return super.getTypeOfTask() + \" | 0 | \" + super.getDescription().length() + \" | \" +  super.getDescription() + \" | \" + formatter.format(at);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mong-nus": 39
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     * function to be called to check for empty input"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    public void checkEmpty(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        if (userInput.isEmpty()) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "            throw new DukeException(\"There is no command given\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     * function to check for the command being entered and execute accordingly"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    public void checkInstruction(String instruction, Storage store, Ui display, List\u003cTask\u003e allTask, TaskList tasking) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "            checkEmpty(instruction);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "            String[] check \u003d instruction.split(\" \", 2);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "            if (instruction.equals(\"list\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                display.listAllItems(allTask);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "            } else if (check[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                int num \u003d Integer.parseInt(check[1]) - 1;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                if ((num \u003c 0) || (num \u003e (allTask.size() - 1))) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                    throw new DukeException(\"Digit provided is out of range\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                tasking.makeDone(allTask, num, display, store);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "            } else if (check[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                int num \u003d Integer.parseInt(check[1]) - 1;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                if ((num \u003c 0) || (num \u003e (allTask.size() - 1))) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                    throw new DukeException(\"Digit provided is out of range\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                tasking.deleteItem(allTask, num, display, store);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "            } else if (check[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                if (check[1].isBlank()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                    throw new DukeException(\"Description cannot be blank or space only\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                tasking.findItems(allTask, check, display);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "            } else if (instruction.equals(\"bye\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                display.end();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "            } else if (check[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                if (check[1].isBlank()) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                    throw new DukeException(\"Description cannot be blank or space only\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                Task currTask \u003d new ToDo(check[1]);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                tasking.addTask(allTask, currTask, display, store);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "            } else if (check[0].equals(\"deadline\")){"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                check \u003d check[1].split(\" /by \", 2);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                if (check[0].isBlank() || check[1].isBlank()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                    throw new DukeException(\"Description or date cannot be blank or space only\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                if (check[1].equals(\"tomorrow\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                    LocalDateTime today \u003d LocalDateTime.now().withNano(0).withSecond(0).withHour(23).withMinute(59);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                    LocalDateTime tomorrow \u003d today.plusDays(1);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                    Task currTask \u003d new Deadline(check[0], tomorrow);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                    tasking.addTask(allTask, currTask, display, store);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                        LocalDateTime dateTime \u003d LocalDateTime.parse(check[1], formatter);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                        Task currTask \u003d new Deadline(check[0], dateTime);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                        tasking.addTask(allTask, currTask, display, store);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                    } catch (DateTimeParseException error) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                        throw new DukeException(\"Invalid date. Please enter in the format of dd-MM-yyyy HH:mm (24HR) E.g. 21-01-2020 03:25, tomorrow is accepted as well\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "            } else if (check[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                check \u003d check[1].split(\" /at \", 2);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                if (check[0].isBlank() || check[1].isBlank()) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                    throw new DukeException(\"Description or date cannot be blank or space only\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                if (check[1].equals(\"tomorrow\")) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                    LocalDateTime today \u003d LocalDateTime.now().withNano(0).withSecond(0).withHour(13).withMinute(30);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                    LocalDateTime tomorrow \u003d today.plusDays(1);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                    Task currTask \u003d new Event(check[0], tomorrow);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                    tasking.addTask(allTask, currTask, display, store);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                        LocalDateTime dateTime \u003d LocalDateTime.parse(check[1], formatter);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                        Task currTask \u003d new Event(check[0], dateTime);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                        tasking.addTask(allTask, currTask, display, store);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                    } catch (DateTimeParseException error) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                        throw new DukeException(\"Invalid date. Please enter in the format of dd-MM-yyyy HH:mm (24HR) E.g. 21-01-2020 03:25, tomorrow is accepted as well\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        } catch (DukeException errorMessage) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "            display.printError(errorMessage.getMessage());"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        } catch (NumberFormatException errorMessage) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "            display.printError(\"\\u2369 OOPS!!! only number are accepted after done or delete\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        } catch(ArrayIndexOutOfBoundsException errorMessage) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "            display.printError(\"\\u2369 OOPS!!! Input format Invalid\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mong-nus": 153
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     * read and store the list of task from the duke.txt file"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     * outer if condition will check the type of command being entered e.g. todo, list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     * inner if condition will check the status of the task whether it done or not done"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    public void readFile(List\u003cTask\u003e listOfTasks, Ui display) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        display.readStart();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        File file \u003d new File(\"data\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        if (!file.isDirectory()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "            display.printError(\"Folder does not exist. Creating folder data now.\\n\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "            file.mkdir();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        file \u003d new File(\"data\\\\duke.txt\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "            Scanner scanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "            while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                String[] data \u003d scanner.nextLine().split(\" \\\\| \", 2);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                if (data[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                    data\u003ddata[1].split(\" \\\\| \", 2);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                    if (data[0].equals(\"1\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                        data \u003d data[1].split(\" \\\\| \", 2);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                        Task currTask \u003d new ToDo(data[1]);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                        listOfTasks.add(currTask);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                        listOfTasks.get(listOfTasks.size() - 1).markAsDone();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                        data \u003d data[1].split(\" \\\\| \", 2);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                        Task currTask \u003d new ToDo(data[1]);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                        listOfTasks.add(currTask);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                } else if (data[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                    data\u003ddata[1].split(\" \\\\| \", 2);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                    if (data[0].equals(\"1\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                        data\u003ddata[1].split(\" \\\\| \", 2);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                        int lengthOfDescription \u003d Integer.parseInt(data[0]);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                        String describe \u003d data[1].substring(0, lengthOfDescription);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                            LocalDateTime dateTime \u003d LocalDateTime.parse(data[1].substring(lengthOfDescription+3), formatter);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                            Task currTask \u003d new Deadline(describe, dateTime);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                            listOfTasks.add(currTask);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                            listOfTasks.get(listOfTasks.size() - 1).markAsDone();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                        } catch (DateTimeParseException error) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                            display.printError(\"Reading Fail after item No. \" + listOfTasks.size() + \"\\n\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                        data\u003ddata[1].split(\" \\\\| \", 2);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                        int lengthOfDescription \u003d Integer.parseInt(data[0]);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                        String describe \u003d data[1].substring(0, lengthOfDescription);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                            LocalDateTime dateTime \u003d LocalDateTime.parse(data[1].substring(lengthOfDescription+3), formatter);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                            Task currTask \u003d new Deadline(describe, dateTime);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                            listOfTasks.add(currTask);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                        } catch (DateTimeParseException error) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                            display.printError(\"Reading Fail after item No. \" + listOfTasks.size() + \"\\n\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                } else if (data[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                    data\u003ddata[1].split(\" \\\\| \", 2);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                    if (data[0].equals(\"1\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                        data\u003ddata[1].split(\" \\\\| \", 2);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                        int lengthOfDescription \u003d Integer.parseInt(data[0]);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                        String describe \u003d data[1].substring(0, lengthOfDescription);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                            LocalDateTime dateTime \u003d LocalDateTime.parse(data[1].substring(lengthOfDescription+3), formatter);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                            Task currTask \u003d new Event(describe, dateTime);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                            listOfTasks.add(currTask);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                            listOfTasks.get(listOfTasks.size() - 1).markAsDone();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                        } catch (DateTimeParseException error) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                            display.printError(\"Reading Fail after item No. \" + listOfTasks.size() + \"\\n\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                        data\u003ddata[1].split(\" \\\\| \", 2);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                        int lengthOfDescription \u003d Integer.parseInt(data[0]);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                        String describe \u003d data[1].substring(0, lengthOfDescription);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                            LocalDateTime dateTime \u003d LocalDateTime.parse(data[1].substring(lengthOfDescription+3), formatter);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                            Task currTask \u003d new Event(describe, dateTime);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                            listOfTasks.add(currTask);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                        } catch (DateTimeParseException error) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                            display.printError(\"Reading Fail after item No. \" + listOfTasks.size() + \"\\n\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        } catch(FileNotFoundException error) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "            display.printError(\"There is no file to read. File will be created when there is new records.\\n\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        display.readEnd();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     * write to the duke.txt file when there is changes"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    public void writeFile(List\u003cTask\u003e listOfTasks) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        File file \u003d new File (\"data\\\\duke.txt\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "            PrintWriter output \u003d new PrintWriter(file);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "            for (int i \u003d 0; i \u003c listOfTasks.size(); i++) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                output.println(listOfTasks.get(i).insertFile());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "            output.close();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        } catch(IOException error) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "            System.out.println(\"There is a output error\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mong-nus": 141
    }
  },
  {
    "path": "src/main/java/Task.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    protected char typeOfTask;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    public Task(char type, String userDescription) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        this.typeOfTask \u003d type;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        this.description \u003d userDescription;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     * return a tick or a cross symbol for displaying of the status"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     * return a T, D or E depending on the type of task"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    public char getTypeOfTask() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        return typeOfTask;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     * return the description of the task"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     * set the status to done"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     * return the status of the task"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     * abstract method to be override by sub class"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    public abstract String insertFile();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mong-nus": 63
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     * mark the task to be done"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    public void makeDone(List\u003cTask\u003e listOfTasks, int num, Ui output, Storage store) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        listOfTasks.get(num).markAsDone();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        output.taskMarked(listOfTasks, num);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        store.writeFile(listOfTasks);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     * delete the specified item from the list of tasks"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    public void deleteItem(List\u003cTask\u003e listOfTasks, int num, Ui output, Storage store) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        Task currTask \u003d listOfTasks.get(num);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        listOfTasks.remove(num);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        output.taskDeleted(listOfTasks, currTask);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        store.writeFile(listOfTasks);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     * add new task to the list of tasks"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    public void addTask(List\u003cTask\u003e listOfTasks, Task toBeAdded, Ui output, Storage store) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        listOfTasks.add(toBeAdded);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        output.taskAdded(listOfTasks);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        store.writeFile(listOfTasks);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     * find task that matches user input"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    public void findItems(List\u003cTask\u003e listOfTasks, String[] userInput, Ui output) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        CharSequence seq \u003d userInput[1];"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        List\u003cTask\u003e foundItems \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        for (int i \u003d 0; i \u003c listOfTasks.size(); i++) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "            String toBeSearch \u003d listOfTasks.get(i).toString();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "            boolean bool \u003d toBeSearch.contains(seq);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "            if (bool \u003d\u003d true) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                foundItems.add(listOfTasks.get(i));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        output.listFindItems(foundItems);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mong-nus": 58
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    public ToDo(String inputDescription) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        super(\u0027T\u0027, inputDescription);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     * return string to be display to user"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        return \"[\" + super.getTypeOfTask() + \"][\" + super.getStatusIcon() + \"] \" + super.getDescription();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     * return the string to be inserted into the file"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    public String insertFile() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        if (super.getIsDone() \u003d\u003d true) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "            //length of description to ensure if regex character is entered, code can still run"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "            return super.getTypeOfTask() + \" | 1 | \" + super.getDescription().length() + \" | \" + super.getDescription();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "            return super.getTypeOfTask() + \" | 0 | \" + super.getDescription().length() + \" | \" +  super.getDescription();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mong-nus": 31
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    private String logo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    private String line;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        this.logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        this.line \u003d \"__________________________________________________\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     * starting message when duke is being run"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    public void startDuke() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     * ending message displayed when \"bye\" is entered, program will also be exited"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    public void end() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     * print all task in the list"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    public void listAllItems (List\u003cTask\u003e listOfTasks) throws DukeException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        if(listOfTasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "            throw new DukeException(\"There is currently no task in the list\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        int itemNo \u003d 1;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        for (int i \u003d 0; i \u003c listOfTasks.size(); i++) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "            System.out.println( itemNo + \". \" + listOfTasks.get(i).toString());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "            itemNo++;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     * print task that matches the search"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    public void listFindItems(List\u003cTask\u003e listOfTasks) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        int itemNo \u003d 1;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        if (listOfTasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                System.out.println(\"No items matched\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "            for (int i \u003d 0; i \u003c listOfTasks.size(); i++) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                String toBeSearch \u003d listOfTasks.get(i).toString();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                System.out.println(itemNo + \". \" + listOfTasks.get(i).toString());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                itemNo++;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     * print the tasked that was just mark done"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    public void taskMarked(List\u003cTask\u003e listOfTasks, int num) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + listOfTasks.get(num).toString());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     * print the task that was just deleted"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    public void taskDeleted(List\u003cTask\u003e listOfTasks, Task theTask) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\\n  \" + theTask.toString()"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                + \"\\nNow you have \" + listOfTasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     * print the task that was just added"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    public void taskAdded(List\u003cTask\u003e listOfTasks) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\\n  \" + listOfTasks.get(listOfTasks.size() - 1).toString()"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "                + \"\\nNow you have \" + (listOfTasks.size()) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     * print the error message"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    public void printError(String error) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        System.out.println(error);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     * print the error message"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    public void readStart() {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        System.out.println(\"Reading Task List ... \\n\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     * display message when reading of file is completed"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    public void readEnd() {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        System.out.println(\"Read Operation completed\\n\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "mong-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "mong-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mong-nus": 152
    }
  }
]

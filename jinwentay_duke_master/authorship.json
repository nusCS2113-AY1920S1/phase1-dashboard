[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jinwentay": 1,
      "-": 19
    }
  },
  {
    "path": "src/main/java/Deadlines.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "public class Deadlines extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    String icon;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    String date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    public Deadlines(String name, String date) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        this.icon \u003d \"[D]\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        return icon+super.toString()+\" (by: \"+date+\")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jinwentay": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    private static TaskCommands taskCommands;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                + logo);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                \"What can I do for you?\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        Boolean isExit \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        ArrayList\u003cTask\u003e store \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        Storage storage \u003d new Storage(store);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            taskCommands \u003d new TaskCommands(store);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            isExit \u003d taskCommands.isExit();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            storage.usingBufferedWritter(store);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        } catch (IOException io){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            System.out.println(\"OOPS!!! The file could not be created.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "jinwentay": 21,
      "-": 10
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    public DukeException(String s) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "//    public void InvalidTask(String s) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "//        try {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "//            throw new DukeException(s);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "//        catch (DukeException e) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "//            System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jinwentay": 15
    }
  },
  {
    "path": "src/main/java/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "public class Events extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    String icon;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    String time;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    public Events(String name, String time) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        this.icon \u003d \"[E]\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        return icon+super.toString()+\" (at: \"+time+\")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jinwentay": 13
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    String fileContent \u003d \"\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    public Storage(ArrayList\u003cTask\u003e store) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            readFile(fileContent, store);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            System.out.println(\"OOPS!!! There is no existing file to be read.\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    public static void readFile(String fileContent, ArrayList\u003cTask\u003e store) throws IOException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        File fileToAppend \u003d new File(\"duke.txt\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        BufferedReader reader \u003d null;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        reader \u003d new BufferedReader(new FileReader(fileToAppend));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        String line \u003d reader.readLine();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        //write current items to file"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        while (line !\u003d null) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            fileContent +\u003d line + System.lineSeparator();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            String[] task \u003d line.split(\" \", 3);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            if (task[0].contains(\"[T]\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                Task obj \u003d new ToDos(task[1]);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                if (task[0].contains(\"[#]\")) obj.isDone \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                store.add(obj);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            } else if (task[0].contains(\"[D]\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                String[] date \u003d task[2].split(\": \");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                date[1] \u003d date[1].substring(0, date[1].length()-1);//remove )"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                Task obj \u003d new Deadlines(task[1], date[1]);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                if (task[0].contains(\"[#]\")) obj.isDone \u003d true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                store.add(obj);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            } else if (task[0].contains(\"[E]\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                String[] date \u003d task[2].split(\": \");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                date[1] \u003d date[1].substring(0, date[1].length()-1);//remove )"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                Task obj \u003d new Events(task[1], date[1]);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                if (task[0].contains(\"[#]\")) obj.isDone \u003d true;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                store.add(obj);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            line \u003d reader.readLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    public void usingBufferedWritter(ArrayList\u003cTask\u003e store) throws IOException"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        for (Task i : store) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            fileContent +\u003d i.toString() + \"\\n\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        BufferedWriter writer \u003d new BufferedWriter(new FileWriter(\"duke.txt\"));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        writer.write(fileContent);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jinwentay": 52
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    protected String taskType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    } //must add this when using class inheritance"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    public Task(String name, boolean isDone, String taskType) //class constructor with 2 parameters"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        return (isDone ? \"[#]\" : \"[X]\"); //get tick or X symbols"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        return this.getStatus()+\" \"+name;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jinwentay": 25
    }
  },
  {
    "path": "src/main/java/TaskCommands.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "public class TaskCommands {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    String command \u003d input.nextLine();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    public TaskCommands(ArrayList\u003cTask\u003e store) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        int num \u003d 1; // count num of tasks added"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        String[] done \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        String[] deadline \u003d command.split(\"/by \");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        String[] event \u003d command.split(\"/at \");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            if (!command.equals(\"list\") \u0026\u0026 !done[0].equals(\"done\")) { //to do, deadline, event"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                //add command to the list (to-do/deadline/event/delete)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                if (done[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        Task obj \u003d new ToDos(done[1]);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        store.add(obj);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                    } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        System.out.println(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                } else if (done[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        String[] Dtask \u003d done[1].split(\"/by \");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        Date date \u003d StringToDate(deadline[1]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        DateFormat dateformat \u003d new SimpleDateFormat(\"dd MMMM yyyy, HHmm\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        String sdate \u003d dateformat.format(date);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        Task obj \u003d new Deadlines(Dtask[0], sdate);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        store.add(obj);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                    } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        System.out.println(\"OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                } else if (done[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        String[] Etask \u003d done[1].split(\"/at \");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        Date date \u003d StringToDate(event[1]);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        DateFormat dateformat \u003d new SimpleDateFormat(\"dd MMMM yyyy, HHmm\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        String sdate \u003d dateformat.format(date);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        Task obj \u003d new Events(Etask[0], sdate);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        store.add(obj);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                    } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        System.out.println(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                } else if (done[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                    int toDelete \u003d Integer.parseInt(done[1]) - 1;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                    System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                    System.out.println(\"  \" + store.get(toDelete).toString());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                    store.remove(toDelete);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                } else if (done[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        search(done[1], store);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                    } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        System.out.println(\"OOPS!! \");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        throw new DukeException(done[0]);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                //print task statements"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                    if (!done[0].equals(\"delete\") \u0026\u0026 !done[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        System.out.println(\"  \" + store.get(store.size() - 1).toString());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                    System.out.println(\"Now you have \" + Integer.toString(store.size()) + \" tasks in the list\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                listTasks(num, store);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                //mark task as done"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                int tasknum \u003d Integer.parseInt(done[1]); //convert string to int"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                tasknum -\u003d 1;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                String old \u003d store.get(tasknum).toString();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                store.get(tasknum).isDone \u003d true;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                System.out.println(\"  \" + store.get(tasknum).toString());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                modifyFile(old, store.get(tasknum).toString());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    private static Date StringToDate(String original) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        Date newdate \u003d null;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            newdate \u003d formatter.parse(original);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        } catch (ParseException p) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            System.out.println(\"Please key in the date and time dd/MM/yyyy HHmm format.\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        return newdate;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    private static void listTasks(int num, ArrayList\u003cTask\u003e store) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        for (Task i : store) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            System.out.print(num+\". \");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            System.out.println(i.toString());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            num++;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    private static void search(String word, ArrayList\u003cTask\u003e store) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        int num \u003d 1;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        for (Task i : store){"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                if (i.name.contains(word)) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                    System.out.println(num + \". \" + i.toString());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                    num++;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                System.out.println(\"OOPS!! \"+word+\" cannot be found in the list. Try another word.\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    private static void modifyFile(String oldString, String newString)"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        File fileToBeModified \u003d new File(\"duke.txt\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        String oldContent \u003d \"\";"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        BufferedReader reader \u003d null;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        FileWriter writer \u003d null;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        try"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            reader \u003d new BufferedReader(new FileReader(fileToBeModified));"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            //Reading all the lines of input text file into oldContent"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            String line \u003d reader.readLine();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            while (line !\u003d null)"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                oldContent \u003d oldContent + line + System.lineSeparator();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                line \u003d reader.readLine();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            //Replacing oldString with newString in the oldContent"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            String newContent \u003d oldContent.replaceAll(oldString, newString);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            //Rewriting the input text file with newContent"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            writer \u003d new FileWriter(fileToBeModified);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            writer.write(newContent);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        catch (IOException e)"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        finally"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            try"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                //Closing the resources"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                reader.close();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                writer.close();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            catch (IOException e)"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jinwentay": 177
    }
  },
  {
    "path": "src/main/java/ToDos.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "public class ToDos extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    public static String icon;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    public ToDos(String name) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        this.icon \u003d \"[T]\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        return icon+super.toString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jinwentay": 12
    }
  }
]

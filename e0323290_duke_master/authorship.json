[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0323290"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0323290"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0323290"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0323290"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0323290"
        },
        "content": "test {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0323290"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0323290": 18,
      "-": 19
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0323290"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0323290"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0323290"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0323290"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0323290"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0323290"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0323290"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0323290"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    private Tasklist tasklist;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     * @param inputStorage"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     * @param inputType"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     * @param tasklist"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    public Command(Storage inputStorage, String inputType, Tasklist tasklist) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0323290"
        },
        "content": "         this.tasklist \u003d tasklist;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0323290"
        },
        "content": "         storage \u003d inputStorage;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0323290"
        },
        "content": "         type \u003d inputType;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     * This method adds todo tasks to the list of tasks when called and"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     * outputs an error if nothing follows up the word \"todo\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     * @param inputString"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    public void addToDo(String inputString) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            String[] toDoString \u003d inputString.split(\" \");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            List\u003cString\u003e myList \u003d new ArrayList\u003cString\u003e(Arrays.asList(toDoString));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                if (myList.size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                    throw new DukeException(\" ☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                myList.remove(0);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                String description \u003d String.join(\" \", myList);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                ToDo toDo \u003d new ToDo(description);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                tasklist.getList().add(toDo);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                System.out.println(\"\\t\" + toDo.getDescription());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                System.out.println(\"Now you have \" + tasklist.getList().size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                storage.saveToFile();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     * This method marks a task as done and change the status icon from incomplete to completed"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     * @param inputString"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    public void donezo(String inputString) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        String[] strings \u003d inputString.split(\" \");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        for (String i : strings) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            if (!i.equals(\"done\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                int index \u003d Integer.parseInt(i) - 1;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                tasklist.getList().get(index).markAsDone();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                System.out.println(tasklist.getList().get(index).getDescription());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                storage.saveToFile();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     * This method adds deadline tasks to the list of tasks when called and"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     * outputs an error if nothing follows up the word \"deadline\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     * @param inputString"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    public void addDeadline(String inputString) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            String[] deadlineString \u003d inputString.split(\" \");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            List\u003cString\u003e myList \u003d new ArrayList\u003cString\u003e(Arrays.asList(deadlineString));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                if (myList.size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                    throw new DukeException(\" ☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                myList.remove(0);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                String description \u003d String.join(\" \", myList);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                String[] inputs \u003d description.split(\" /by \");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                Deadline deadLine \u003d new Deadline(inputs[0], new ConvertDateTime().formatDateTime(inputs[1]));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                tasklist.getList().add(deadLine);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                System.out.println(\"\\t \" + deadLine.getDescription());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                System.out.println(\"Now you have \" + tasklist.getList().size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                storage.saveToFile();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     * This method adds event tasks to the list of tasks when called and"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     * outputs an error if nothing follows up the word \"event\""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     *"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     * @param inputString"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    public void addEvent(String inputString) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        String[] eventString \u003d inputString.split(\" \");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        List\u003cString\u003e myList \u003d new ArrayList\u003c\u003e(Arrays.asList(eventString));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            if (myList.size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                throw new DukeException(\" ☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            myList.remove(0);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            String description \u003d String.join(\" \", myList);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            String[] inputs \u003d description.split(\" /at \");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            Event eVent \u003d new Event(inputs[0], new ConvertDateTime().formatDateTime(inputs[1]));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            tasklist.getList().add(eVent);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            System.out.println(\"\\t \" + eVent.getDescription());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            System.out.println(\"Now you have \" + tasklist.getList().size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            storage.saveToFile();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     * This method deletes any tasks from the task list when the task number in the list is called"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     * after the word \"delete\""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     *"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     * @param inputString"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    public void deleteFromList(String inputString) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        String[] strings \u003d inputString.split(\" \");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        for (String i : strings) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            if (!i.equals(\"delete\")) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                int index \u003d Integer.parseInt(i) - 1;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                System.out.println(\"\\t\" + tasklist.getList().get(index).getDescription());"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                tasklist.getList().remove(index);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                System.out.println(\"Now you have \" + tasklist.getList().size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                storage.saveToFile();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     * This method finds tasks that contains a specific keyword and outputs"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     * that task description in a list"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     *"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     * @param inputString"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     */"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    public void findFromList(String inputString) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            String[] parts \u003d inputString.split(\" \", 2);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            String wordToBeFound \u003d parts[1];"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            System.out.println(\"Here are the matching tasks in your list: \");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            ArrayList\u003cTask\u003e wordFound \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            for (Task i : tasklist.getList()) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                if (i.getDescription().contains(wordToBeFound)) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                    wordFound.add(i);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            for (int i \u003d 0; i \u003c wordFound.size(); i++) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                System.out.println((i + 1) + \".\" + wordFound.get(i).getDescription());"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     * This method detects the task called and carries out the respective method"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     *"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     */"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        String[] tokens \u003d type.split(Pattern.quote(\" \"));"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        if(tokens[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            addToDo(type);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        } else if(tokens[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            donezo(type);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        } else if(tokens[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            addDeadline(type);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        } else if(tokens[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            addEvent(type);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        } else if(tokens[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            deleteFromList(type);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        } else if(tokens[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            findFromList(type);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        } else if(tokens[0].equals(\"list\")) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            tasklist.printList();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "e0323290"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0323290": 192
    }
  },
  {
    "path": "src/main/java/ConvertDateTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0323290"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0323290"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0323290"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0323290"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0323290"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0323290"
        },
        "content": " * Converts the format of date and time (e.g. converts 2/12/2019 1800 to 2nd of December 2019, 6pm)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0323290"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0323290"
        },
        "content": "public class ConvertDateTime {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    //dates and times converter"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     * Converts the format of date and time (e.g. converts 2/12/2019 1800 to 2nd of December 2019, 6pm)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     * @param date date of the deadline of task to be completed by, or the date of the event"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     * @return date and time in the required format"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    public String formatDateTime(String date) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        Date newDate \u003d new Date();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            newDate \u003d sdf.parse(date);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            return date;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        //convert input string into the specific date format"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        int hour \u003d Integer.parseInt(new SimpleDateFormat(\"h\").format(newDate));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        int min \u003d Integer.parseInt(new SimpleDateFormat(\"m\").format(newDate));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        String period \u003d (new SimpleDateFormat(\"a\").format(newDate)).toLowerCase();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        String formatTime;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        if (min \u003e 0) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            formatTime \u003d hour + \".\" + min + period;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            formatTime \u003d hour + period;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        Calendar calendar \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        calendar.setTime(newDate);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        int day \u003d calendar.get(Calendar.DATE);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        //get the suffix for the date format"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        if (!((day \u003e 10) \u0026\u0026 (day \u003c 19)))"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            switch (day % 10) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                case 1:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                    return new SimpleDateFormat(\"d\u0027st\u0027 \u0027of\u0027 MMMM yyyy\").format(newDate) + \", \" + formatTime;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                case 2:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                    return new SimpleDateFormat(\"d\u0027nd\u0027 \u0027of\u0027 MMMM yyyy\").format(newDate) + \", \" + formatTime;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                case 3:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                    return new SimpleDateFormat(\"d\u0027rd\u0027 \u0027of\u0027 MMMM yyyy\").format(newDate) + \", \" + formatTime;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                    return new SimpleDateFormat(\"d\u0027th\u0027 \u0027of\u0027 MMMM yyyy\").format(newDate) + \", \" + formatTime;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        return new SimpleDateFormat(\"d\u0027th\u0027 \u0027of\u0027 MMMM yyyy\").format(newDate) + \", \" + formatTime;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0323290"
        },
        "content": "}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "e0323290": 56
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0323290"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0323290"
        },
        "content": " * Returns the description of the deadline and shows the status of"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0323290"
        },
        "content": " * whether the deadline task is completed"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0323290"
        },
        "content": " *"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0323290"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0323290"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     * @param description gives the index, status of the task, what the task is"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     *                    and the date and time of the task if applicable"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     * @param by the date that the deadline must be completed by"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     * @return description of deadline in the format required previously"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     * @return description of deadline in the required format"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        return \"[D]\" + \"[\" + getStatusIcon() + \"] \" + super.getDescription() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     * @return description of saving deadline in the required format"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    public String getFormat() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        return \"D | \" + getStatusIcon2() + \" | \" + super.getDescription() + \" | \" + by;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0323290"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0323290": 42
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0323290"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0323290"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0323290"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0323290"
        },
        "content": " * The main code"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0323290"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    private Tasklist tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    private ArrayList\u003cTask\u003e arrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     * This is a constructor for class Duke"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        arrayList \u003d new ArrayList\u003c\u003e(100);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        storage \u003d new Storage(arrayList);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        tasks \u003d new Tasklist(arrayList);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        parser \u003d new Parser(tasks, storage);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     * Actions that are carried out when programme is run"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        arrayList \u003d storage.ReadFile();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        String input \u003d ui.readCommand();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            Command c \u003d parser.parse(input);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            c.execute();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            input \u003d ui.readCommand();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                ui.showBye();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                    String[] tokens \u003d input.split(Pattern.quote(\" \"));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                    if (!tokens[0].matches(\"todo|deadline|list|event|find|delete|done\"))"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                    System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     * This method carries out the method run()"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     * @param args string array that holds the descriptions"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "e0323290": 56,
      "-": 5
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0323290"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0323290"
        },
        "content": " * Handles error caught"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0323290"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0323290"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0323290"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     * @param message the detailed error message"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0323290"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0323290": 14
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0323290"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0323290"
        },
        "content": " * Returns the description of the event and shows the status of"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0323290"
        },
        "content": " * whether the event task is completed"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0323290"
        },
        "content": " *"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0323290"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0323290"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     * @param description gives the index, status of the task, what the task is"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     *                    and the date and time of the task if applicable"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     * @param date the date of the event"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    public Event(String description, String date) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     * @return description of event in the format required previously"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at:\" + date + \")\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     * @return description of event in the required format"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        return \"[E]\" + \"[\" + getStatusIcon() + \"] \" + super.getDescription() + \" (at: \" + date  + \")\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     * @return description of saving event in the required format"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    public String getFormat() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        return \"E | \" + getStatusIcon2() + \" | \" + super.getDescription() + \" | \" + date;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0323290"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0323290": 41
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0323290"
        },
        "content": "import java.lang.reflect.Array;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0323290"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0323290"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0323290"
        },
        "content": " * Takes in user command and understands it"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0323290"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0323290"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    private Tasklist tasklist;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     * @param tasklist the list of all tasks recorded"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     * @param inputStorage inputs that are to be saved in Desktop"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    public Parser(Tasklist tasklist, Storage inputStorage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        this.tasklist \u003d tasklist;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        storage \u003d inputStorage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     * Taking in user command"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     * @param inputString"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    public Command parse(String inputString) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        return new Command(storage, inputString, tasklist);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0323290"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0323290": 28
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0323290"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0323290"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0323290"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0323290"
        },
        "content": " * Save the tasks in the hard-coded location and file name in"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0323290"
        },
        "content": " * the hard disk automatically whenever the task list changes."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0323290"
        },
        "content": " * Load the data from the hard disk when Duke starts up."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0323290"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0323290"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    private ArrayList\u003cTask\u003e arrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     * @param inputList list to be saved"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    public Storage(ArrayList\u003cTask\u003e inputList) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        arrayList \u003d inputList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     * The method saves the list of tasks into the text file"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    // The function to save all the task into the text file"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    public void saveToFile() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        File file \u003d new File(\"C:\\\\Users\\\\ayh_j\\\\Documents\\\\duke\\\\dataTask.txt\"); // Creating the textfile"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            PrintWriter output \u003d new PrintWriter(file);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            for (Task x : arrayList) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                output.println(x.getFormat());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            output.close();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            System.out.print(\"ERROR: Not Available\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     * The method reads in the text files"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     * @return the text that is read in from the saved text files"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    // The function to read in text files from dataTask.txt"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    public ArrayList\u003cTask\u003e ReadFile() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        //arrayList \u003d new ArrayList\u003c\u003e(100);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        BufferedReader br \u003d null;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            FileReader fr \u003d new FileReader(\"C:\\\\Users\\\\ayh_j\\\\Documents\\\\duke\\\\dataTask.txt\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            while ((line \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                String[] splitter \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                for (int i \u003d 0; i \u003c splitter.length; i++) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                    splitter[i] \u003d splitter[i].trim();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                if (splitter[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                    Deadline newD \u003d new Deadline(splitter[2] + \" \", \" \" + splitter[3]);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                    if (splitter[1] \u003d\u003d \"0\") {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                        newD.isDone \u003d false;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                    } else if (splitter[1] \u003d\u003d \"1\") {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                        newD.isDone \u003d true;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                    arrayList.add(newD);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                } else if (splitter[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                    Event newE \u003d new Event(splitter[2] + \" \", \" \" + splitter[3]);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                    if (splitter[1] \u003d\u003d \"0\") {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                        newE.isDone \u003d false;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                    } else if (splitter[1] \u003d\u003d \"1\") {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                        newE.isDone \u003d true;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                    arrayList.add(newE);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                    ToDo newT \u003d new ToDo(splitter[2]);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                    if (splitter[1] \u003d\u003d \"0\") {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                        newT.isDone \u003d false;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                    } else if (splitter[1] \u003d\u003d \"1\") {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                        newT.isDone \u003d true;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                    arrayList.add(newT);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            fr.close();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        return arrayList;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "e0323290"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0323290": 85
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0323290"
        },
        "content": "import java.lang.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0323290"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0323290"
        },
        "content": " * Returns the description of the tasks (deadline, event, todo) and gives"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0323290"
        },
        "content": " * the status of the whether the task is completed or not."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0323290"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0323290"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     * @param description describes the task that is called"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     * @return a tick or cross symbol"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     * @return a tick or cross symbol"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    public String getStatusIcon2() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        return (isDone ? \"1\" : \"0\"); //return tick or X symbols"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     * @return description of specific tasks"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    public String getFormat() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        return \"x\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0323290"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0323290": 47
    }
  },
  {
    "path": "src/main/java/Tasklist.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0323290"
        },
        "content": "import java.lang.reflect.Array;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0323290"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0323290"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0323290"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0323290"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0323290"
        },
        "content": " * Returns the list of descriptions of tasks when the \"list\" is called"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0323290"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0323290"
        },
        "content": "public class Tasklist {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    private ArrayList\u003cTask\u003e arrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     * This is a constructor for the class Tasklist"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     * @param inputList"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    public Tasklist(ArrayList inputList) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        arrayList \u003d inputList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     * Prints the required format of list"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    public void printList() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0323290"
        },
        "content": "                + \"\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        for (int i \u003d 0; i \u003c arrayList.size(); i++) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0323290"
        },
        "content": "            System.out.println((i + 1) + \".\" + arrayList.get(i).getDescription());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     * @return the list of tasks"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    public ArrayList\u003cTask\u003e getList(){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        return arrayList;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0323290"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0323290": 41
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0323290"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0323290"
        },
        "content": " * Returns the description of the todo and shows the status of"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0323290"
        },
        "content": " * whether the todo task is completed"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0323290"
        },
        "content": " *"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0323290"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0323290"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     * @param description the task that is supposed to be done"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     * @return description of todo in the format required previously"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     * @return description of todo in the required format"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        return \"[T]\" + \"[\" + getStatusIcon() + \"] \" + super.getDescription();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     * @return description of saving todo in the required format"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    public String getFormat() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        return \"T | \" + getStatusIcon2() + \" | \" + super.getDescription();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0323290"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0323290": 36
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0323290"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0323290"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0323290"
        },
        "content": " * Prints out the welcome message initially and bye message when command \"bye\" is called"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0323290"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0323290"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    private Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     * Prints welcome message initially when programme is built"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke \\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     * @return scanner that reads the next line and takes it in as input"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    public String readCommand(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0323290"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     * Prints bye message when input is \"bye\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0323290"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    public void showBye() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0323290"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0323290"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0323290"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0323290": 29
    }
  }
]

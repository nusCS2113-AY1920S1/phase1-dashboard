[
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "E0373902"
        },
        "content": "import main.java.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "E0373902"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "E0373902"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "E0373902"
        },
        "content": "import java.lang.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "E0373902"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    public static void main(String[] args) throws FileNotFoundException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "E0373902"
        },
        "content": "     File file \u003d new File(\"C:\\\\Users\\\\0108s\\\\OneDrive\\\\Documents\\\\duke\\\\Level 7 help.txt\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "E0373902"
        },
        "content": "     String fileName \u003d \"C:\\\\Users\\\\0108s\\\\OneDrive\\\\Documents\\\\duke\\\\Level 7 help.txt\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "E0373902"
        },
        "content": "     ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "E0373902"
        },
        "content": "     System.out.println(\"Hello I\u0027m Duke\\n\" + \"What can I do for you?\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        int j \u003d 0;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                //FileReader fr \u003d new FileReader(\"C:\\\\Users\\\\0108s\\\\OneDrive\\\\Documents\\\\duke\\\\Level 7 help.txt\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                BufferedReader br \u003d new BufferedReader(new FileReader(file));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                String work;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                    while ((work \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        String [] tr \u003d work.split(\" \");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        String str \u003d \"\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        String u \u003d tr[2];"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        String ut \u003d tr[5];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        for(int i \u003d 7; i \u003c tr.length; i \u003d i + 1){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            str \u003d str + tr[i] + \" \";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        if (str.contains(\"/\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            String[] arr \u003d str.split(\"/\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            String p \u003d arr[0];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            //String st \u003d \"\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            String sr \u003d \"\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            String q \u003d arr[1];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            String[] arr2 \u003d q.split(\" \");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            for (int i \u003d 1; i \u003c arr2.length; i \u003d i + 1) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                sr \u003d sr + arr2[i] + \" \";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            if (u.equals(\"D\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                Task d \u003d new Deadline(p, sr);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                tasks.add(d);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                if(ut.equals(\"\\u2713\")){"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                    d.markAsDone();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                j \u003d j + 1;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                Task ev \u003d new Event(p, q);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                tasks.add(ev);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                if(ut.equals(\"\\u2713\")){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                    ev.markAsDone();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                j \u003d j + 1;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            Task todo \u003d new ToDo(str);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            tasks.add(todo);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            if(ut.equals(\"\\u2713\")){"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                todo.markAsDone();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            j \u003d j + 1;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                catch (IOException e1) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                    e1.printStackTrace();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            catch (FileNotFoundException e1) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                e1.printStackTrace();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            String s \u003d input.nextLine();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            String st \u003d \"\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            String sr \u003d \"\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            String e \u003d \"\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            if (s.equals(\"bye\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                if (s.equals(\"list\")) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                    System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                    for (int i \u003d 0; i \u003c j; i \u003d i + 1) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        System.out.println((i + 1) + \". \" + tasks.get(i).toString());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "E0373902"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                    if (s.contains(\"/\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        String[] arr \u003d s.split(\"/\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        String p \u003d arr[0];"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        String[] arr1 \u003d p.split(\" \");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        String first \u003d arr1[0];"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        String q \u003d arr[1];"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        String[] arr2 \u003d q.split(\" \");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        for (int i \u003d 1; i \u003c arr1.length; i \u003d i + 1) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            st \u003d st + arr1[i] + \" \";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        for (int i \u003d 1; i \u003c arr2.length; i \u003d i + 1) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            sr \u003d sr + arr2[i] + \" \";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        if (first.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            Task d \u003d new Deadline(st, sr);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            tasks.add(d);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                try {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                    BufferedWriter out \u003d new BufferedWriter("
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                            new FileWriter(fileName, false));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                    for(int i \u003d 0; i \u003c\u003d j; i \u003d i + 1) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                        out.write((i + 1) + \". \" + tasks.get(i).toString() + \"\\n\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                    out.close();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            catch (IOException e1) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                e1.printStackTrace();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            System.out.println(\" Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            System.out.println(tasks.get(j).toString());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            System.out.println(\"Now you have \" + (j + 1) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            j \u003d j + 1;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            Task ev  \u003d new Event(st, sr);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            tasks.add(ev);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            try{"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                BufferedWriter out \u003d new BufferedWriter("
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                        new FileWriter(fileName, false));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                for(int i \u003d 0; i \u003c\u003d j; i \u003d i + 1) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                    out.write((i + 1) + \". \" + tasks.get(i).toString() + \"\\n\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                out.close();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            catch (IOException e1) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                e1.printStackTrace();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            System.out.println(\" Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            System.out.println(tasks.get(j).toString());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            System.out.println(\"Now you have \" + (j + 1) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            j \u003d j + 1;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        String[] arr \u003d s.split(\" \");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        String fir \u003d arr[0];"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        for (int i \u003d 1; i \u003c arr.length; i \u003d i + 1) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            e \u003d e + arr[i] + \" \";"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        if (fir.equals(\"todo\")) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            if (e.equals(\"\")) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                DukeException t \u003d new DukeException(fir);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                System.out.println(t.cannotBeEmpty());"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                Task todo  \u003d new ToDo(e);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                tasks.add(todo);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                try{"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                    BufferedWriter out \u003d new BufferedWriter("
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                            new FileWriter(fileName, false));"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                    for(int i \u003d 0; i \u003c\u003d j; i \u003d i + 1) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                        out.write((i + 1) + \". \" + tasks.get(i).toString());"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                    out.close();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                catch (IOException e1) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                    e1.printStackTrace();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                System.out.println(\" Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                System.out.println(tasks.get(j).toString());"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                System.out.println(\"Now you have \" + (j + 1) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                j \u003d j + 1;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        } else if (fir.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            if (e.equals(\"\")) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                DukeException t \u003d new DukeException(fir);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                System.out.println(t.cannotBeEmpty());"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        } else if (fir.equals(\"event\")) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            if (e.equals(\"\")) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                DukeException t \u003d new DukeException(fir);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                System.out.println(t.cannotBeEmpty());"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        } else if (fir.equals(\"Done\")) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            if (e.equals(\"\")) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                DukeException t \u003d new DukeException(fir);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                System.out.println(t.cannotBeEmpty());"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                for (int i \u003d 0; i \u003c j; i \u003d i + 1) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                    if (s.equals(\"Done \" + (i + 1))) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                        tasks.get(i).markAsDone();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                        try {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                            BufferedWriter out \u003d new BufferedWriter("
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                                    new FileWriter(fileName, false));"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                            for(int k \u003d 0; k \u003c j; k \u003d k + 1) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                                out.write((k + 1) + \". \" + tasks.get(k).toString() + \"\\n\");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                            }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                            out.close();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                        }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                        catch (IOException e1) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                            e1.printStackTrace();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                        }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                        System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                        System.out.println(tasks.get(i).toString());"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        }else{"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                    DukeException t \u003d new DukeException(fir);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                    System.out.println(t.NotACommand());"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "E0373902"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "E0373902"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "E0373902"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "E0373902"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "E0373902"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "E0373902"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "E0373902"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "E0373902"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "E0373902"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "E0373902"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "E0373902"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "E0373902"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "E0373902": 216
    }
  }
]

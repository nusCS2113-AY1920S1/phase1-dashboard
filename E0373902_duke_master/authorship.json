[
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "E0373902"
        },
        "content": "import main.java.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "E0373902"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "E0373902"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "E0373902"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "E0373902"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "E0373902"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "E0373902"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "E0373902"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "E0373902"
        },
        "content": "import java.lang.*;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "E0373902"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    public static void main(String[] args) throws ParseException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        File file \u003d new File(\"C:\\\\Users\\\\0108s\\\\OneDrive\\\\Documents\\\\duke\\\\Level 7 help.txt\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        String fileName \u003d \"C:\\\\Users\\\\0108s\\\\OneDrive\\\\Documents\\\\duke\\\\Level 7 help.txt\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        List\u003cString\u003e list \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        System.out.println(\"Hello I\u0027m Duke\\n\" + \"What can I do for you?\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        String work;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            //FileReader fr \u003d new FileReader(\"C:\\\\Users\\\\0108s\\\\OneDrive\\\\Documents\\\\duke\\\\Level 7 help.txt\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(new FileReader(file));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                while ((work \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                    list.add(work);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            } catch (IOException e1) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                e1.printStackTrace();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        } catch (FileNotFoundException e1) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            e1.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        int j \u003d list.size();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i \u003d i + 1) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            String u \u003d \"\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            String ut \u003d \"\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            String[] add_tasks \u003d list.get(i).split(\" \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            u \u003d add_tasks[2]; //T or D or E"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            ut \u003d add_tasks[5]; //X or tick"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            String connector \u003d \"\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            for (int k \u003d 7; k \u003c add_tasks.length; k \u003d k + 1){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                connector \u003d connector + add_tasks[k] + \" \";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            String st \u003d \"\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            String sr \u003d \"\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            if (connector.contains(\"(\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                String[] arr\u003d connector.split(\":\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                String p \u003d arr[0];"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                String[] arr1 \u003d p.split(\" \");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                String q \u003d arr[1];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                String[] arr2 \u003d q.split(\" \");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                for (int f \u003d 0; f \u003c arr1.length - 1; f \u003d f + 1) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                    st \u003d st + arr1[f] + \" \";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                for(int z \u003d 0; z \u003c arr2.length - 1; z \u003d z + 1 ){"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                    sr \u003d sr + arr2[z] + \" \";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                if(u.equals(\"D\")){"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                    Task d \u003d new Deadline(st,sr);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                    tasks.add(d);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                    if(ut.equals(\"\\u2713\")){"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        d.markAsDone();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "E0373902"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                else if(u.equals(\"E\")){"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                    Task ev \u003d new Event(st, sr);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                    tasks.add(ev);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                    if(ut.equals(\"\\u2713\")){"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        ev.markAsDone();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            else{"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                if(u.equals(\"T\")){"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                    Task t \u003d new ToDo(connector);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                    tasks.add(t);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                    if(ut.equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        t.markAsDone();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            String s \u003d input.nextLine();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            String st \u003d \"\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            String sr \u003d \"\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            String e \u003d \"\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            if (s.equals(\"bye\")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                if (s.equals(\"list\")) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                    System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                    for (int i \u003d 0; i \u003c j; i \u003d i + 1) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        System.out.println((i + 1) + \".\" + tasks.get(i).toString());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "E0373902"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                    if (s.contains(\"/\")) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        String[] arr \u003d s.split(\"/\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        String p \u003d arr[0];"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        String[] arr1 \u003d p.split(\" \");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        String first \u003d arr1[0];"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        String q \u003d arr[1];"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        String[] arr2 \u003d q.split(\" \");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        sr \u003d arr2[1];"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        for (int i \u003d 1; i \u003c arr1.length; i \u003d i + 1) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            st \u003d st + arr1[i] + \" \";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        for (int i \u003d 2; i \u003c arr.length; i \u003d i + 1) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            sr \u003d sr + \"/\" + arr[i];"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        String[] Date \u003d sr.split(\" \");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        String sDate1 \u003d \"\";"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        String time \u003d \"\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        String time2 \u003d \"\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        String diff \u003d \"\";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        String date_time \u003d \"\";"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        sDate1 \u003d Date[0];"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        time \u003d Date[1];"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        Date date1\u003dnew SimpleDateFormat(\"dd/MM/yyyy\").parse(sDate1);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        Calendar cal\u003dCalendar.getInstance();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        cal.setTime(date1);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        diff \u003d getFormattedDate(cal.getTime());"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "E0373902"
        },
        "content": "//Date/time pattern of input date"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        DateFormat df \u003d new SimpleDateFormat(\"HHmm\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "E0373902"
        },
        "content": "//Date/time pattern of desired output date"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        DateFormat outputformat \u003d new SimpleDateFormat(\"hh:mm aa\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        Date date \u003d null;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        String output \u003d null;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        try{"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            //Conversion of input String to date"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            date\u003d df.parse(time);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            //old date format to new date format"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            output \u003d outputformat.format(date);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        }catch(ParseException pe){"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            pe.printStackTrace();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        date_time \u003d diff + \" \" + output;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        if (first.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            Task w \u003d new Deadline(st, date_time);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            tasks.add(w);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                BufferedWriter out \u003d new BufferedWriter("
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                        new FileWriter(fileName, false));"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                for (int v \u003d 0; v \u003c\u003d j; v \u003d v + 1) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                    out.write((v + 1) + \". \" + tasks.get(v).toString() + \"\\n\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                out.close();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            } catch (IOException e1) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                e1.printStackTrace();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            System.out.println(\" Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            System.out.println(tasks.get(j).toString());"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            System.out.println(\"Now you have \" + (j + 1) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            j \u003d j + 1;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            time2 \u003d Date[3];"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            DateFormat df1 \u003d new SimpleDateFormat(\"HHmm\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "E0373902"
        },
        "content": "//Date/time pattern of desired output date"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            DateFormat outputformat1 \u003d new SimpleDateFormat(\"hh:mm aa\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            Date date2 \u003d null;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            String output1 \u003d null;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            try{"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                //Conversion of input String to date"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                date2 \u003d df.parse(time2);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                //old date format to new date format"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                output1 \u003d outputformat.format(date2);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            }catch(ParseException pe){"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                pe.printStackTrace();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            date_time \u003d date_time + \" - \" + output1;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            Task ev \u003d new Event(st, date_time);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            tasks.add(ev);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                BufferedWriter out \u003d new BufferedWriter("
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                        new FileWriter(fileName, true));"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                for (int t \u003d 0; t \u003c\u003d j; t \u003d t + 1) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                    out.write((t + 1) + \". \" + tasks.get(t).toString() + \"\\n\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                out.close();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            } catch (IOException e1) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                e1.printStackTrace();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            System.out.println(\" Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            System.out.println(tasks.get(j).toString());"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            System.out.println(\"Now you have \" + (j + 1) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            j \u003d j + 1;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        String[] arr \u003d s.split(\" \");"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        String fir \u003d arr[0];"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        for (int i \u003d 1; i \u003c arr.length; i \u003d i + 1) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            e \u003d e + arr[i] + \" \";"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        if (fir.equals(\"todo\")) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            if (e.equals(\"\")) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                DukeException t \u003d new DukeException(fir);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                System.out.println(t.cannotBeEmpty());"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                               Task todo \u003d new ToDo(e);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                               tasks.add(todo);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                try {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                    BufferedWriter out \u003d new BufferedWriter("
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                            new FileWriter(fileName, true));"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                    for (int jk \u003d 0; jk \u003c\u003d j; jk \u003d jk + 1) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                        out.write((jk + 1) + \". \" + tasks.get(jk).toString());"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                    out.close();"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                } catch (IOException e1) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                    e1.printStackTrace();"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                System.out.println(\" Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                System.out.println(tasks.get(j).toString());"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                System.out.println(\"Now you have \" + (j + 1) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                j \u003d j + 1;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        } else if (fir.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            if (e.equals(\"\")) {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                DukeException t \u003d new DukeException(fir);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                System.out.println(t.cannotBeEmpty());"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        } else if (fir.equals(\"event\")) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            if (e.equals(\"\")) {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                DukeException t \u003d new DukeException(fir);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                System.out.println(t.cannotBeEmpty());"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        } else if (fir.equals(\"Done\")) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            if (e.equals(\"\")) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                DukeException t \u003d new DukeException(fir);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                System.out.println(t.cannotBeEmpty());"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                for (int i \u003d 0; i \u003c j; i \u003d i + 1) {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                    if (s.equals(\"Done \" + (i + 1))) {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                        tasks.get(i).markAsDone();"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                        try {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                            BufferedWriter out \u003d new BufferedWriter("
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                                    new FileWriter(fileName, false));"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                            for (int k \u003d 0; k \u003c j; k \u003d k + 1) {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                                out.write((k + 1) + \". \" + tasks.get(k).toString() + \"\\n\");"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                            }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                            out.close();"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                        } catch (IOException e1) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                            e1.printStackTrace();"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                        }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                        System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                        System.out.println(tasks.get(i).toString());"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                    }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        }else{"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            DukeException t \u003d new DukeException(fir);"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                            System.out.println(t.NotACommand());"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "E0373902"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "E0373902"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "E0373902"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    private static String getFormattedDate(Date date) {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        Calendar cal\u003dCalendar.getInstance();"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        cal.setTime(date);"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        //2nd of march 2015"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        int day\u003dcal.get(Calendar.DATE);"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "E0373902"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        if(!((day\u003e10) \u0026\u0026 (day\u003c19)))"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            switch (day % 10) {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                case 1:"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                    return new SimpleDateFormat(\"d\u0027st\u0027 \u0027of\u0027 MMMM yyyy\").format(date);"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                case 2:"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                    return new SimpleDateFormat(\"d\u0027nd\u0027 \u0027of\u0027 MMMM yyyy\").format(date);"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                case 3:"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                    return new SimpleDateFormat(\"d\u0027rd\u0027 \u0027of\u0027 MMMM yyyy\").format(date);"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                    return new SimpleDateFormat(\"d\u0027th\u0027 \u0027of\u0027 MMMM yyyy\").format(date);"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        return new SimpleDateFormat(\"d\u0027th\u0027 \u0027of\u0027 MMMM yyyy\").format(date);"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    }"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "E0373902"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "E0373902"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "E0373902": 281
    }
  }
]
